{
  "openapi": "3.0.0",
  "info": {
    "title": "LSP Lending spec",
    "description": "\n\nSourcing, identity verification, underwriting, disbursement, recollections and dispute management are few of the many responsibilities managed by a lender today.  Historically, the best lenders have had to excel at each of these skills in order to maximise their profit pools and serve the larger and larger markets.\n\nLSP is an initiative to unbundle lending and enable the creation of specialized entities, each specialized at one part of the job. Therefore, we envision the future of lending to be a partnership between multiple firms individually focused on sourcing/distribution, identity verification, underwriting, capital arrangement, recollections, etc.\n\nThis LSP is being created to showcase the power of the above idea. In its simplest form, it's a loan marketplace that enables SMEs to compare loan offers from multiple lenders and choose the best one. In its more advanced version, This LSP would be akin to a borrower\u2019s financial advisor, looking after their interests, fetching the best offers and advising the customer to make good decisions.\n\nIn the longer run, it is envisioned that many more This LSP-like applications (LSPs) will be created. Each of these would focus on distinct borrower pools and build the specialized experiences suited to their customers. This would allow lenders to focus purely on their underwriting and collections logic and cater to diverse collaborations with the LSPs.\n",
    "version": "3.1"
  },
  "paths": {
    "/v3/loan/grantLoanRequest": {
      "post": {
        "description": "Invokes by LSP to Grant Loan",
        "requestBody": {
          "description": "Request to lender to Grant Loan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_dftmkOONLV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Grant Loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_gkbsXpTUKR"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/grantLoanResponse": {
      "post": {
        "description": "Invoked by Lender to informing status of loan",
        "requestBody": {
          "description": "Response to LSP with loan statu",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_WHFFmjyteM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_dsDtioFLAW"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/LoanSummaryRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan summary",
        "requestBody": {
          "description": "Request to lender for loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_YqvJwxfgPe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to  Loan summary Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_mgMnuziYWt"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanSummaryResponse": {
      "post": {
        "description": "Invoked by Lender to informing loan summary request",
        "requestBody": {
          "description": "Response to LSP with loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_EFsDbNlpoj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_KZDfADjrWD"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanRequest": {
      "post": {
        "description": "Invokes by LSP requesting details of a loan",
        "requestBody": {
          "description": "Request to lender for loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_XfcCsgjQvR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to get loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_PsvVFufFOW"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan details",
        "requestBody": {
          "description": "Response to LSP with loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_HxxTCpTOQQ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_JNnObzdtGM"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan statement",
        "requestBody": {
          "description": "Request to lender for loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_eBAruZBWSy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan statement Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TJKktmCdvC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan statement",
        "requestBody": {
          "description": "Response to LSP with loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_NYAkCpqqtF"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_WqCDosaUCy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansRequest": {
      "post": {
        "description": "Invokes by LSP requesting list of the loan provisioned",
        "requestBody": {
          "description": "Request to lender for list of the loan provisioned",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_SBKHRnuEXd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan list Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_CKAwInrkBj"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansResponse": {
      "post": {
        "description": "Invoked by Lender to inform the list of loans",
        "requestBody": {
          "description": "Response to LSP with the list of loans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_KskkoqXoOv"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_OYqtaOKnkn"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get disbursement Plans",
        "requestBody": {
          "description": "Request to lender to get disbursement Plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_xxDatzNdKJ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_hmpkzQHWmg"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansResponse": {
      "post": {
        "description": "Invoked by lender to return disbursement Plans",
        "requestBody": {
          "description": "Returns array of disbursement Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ssgCHVVMpD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tWXAgZexhk"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanRequest": {
      "post": {
        "description": "Invoked by LSP to set disbursement plan",
        "requestBody": {
          "description": "Set Choosen Disbursement Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_pkvwBxpGhq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_jzHQBuAQSB"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenDisbursement status",
        "requestBody": {
          "description": "Send Disbursement Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_oqTcUgHQIL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ZNxgMTzCqw"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsRequest": {
      "post": {
        "description": "Invoked by LSP to get array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_vktRbNRRyt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_kINkUKaIiv"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsResponse": {
      "post": {
        "description": "Invoked by Lender to return array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_vKwwYRyOpv"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_QxwycstIJk"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountRequest": {
      "post": {
        "description": "Invoked by LSP to set the disbursement Account",
        "requestBody": {
          "description": "set Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_gVnCYRVttB"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_WiJjgSSDTL"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountResponse": {
      "post": {
        "description": "Invoked by Lender to inform current status of chosenAccount",
        "requestBody": {
          "description": "status of chosen account for disbursement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_oVIenXWOch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_yrIlnRJpjt"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/triggerDisbursementRequest": {
      "post": {
        "description": "Invoked by LSP to trigger Disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_RUTnPoWcXR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_KuJQMVkwQq"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/TriggerDisbursementResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rDwFfagMGV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_bFJlJqPvwl"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to generate offer after consent for data is ready",
        "requestBody": {
          "description": "Request to generate offer for a set of loan application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ZPpEORtzVm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_sBHHfCBPiH"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersResponse": {
      "post": {
        "description": "Invoked by lender informing borrower about offers",
        "requestBody": {
          "description": "Returns the tentaive loan offer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_HYvlNCBHgT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_myoTFQAEAI"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to set chosen offer",
        "requestBody": {
          "description": "Informing lender about offer chosen by borrower",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_eYtZZUgFHV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_dQLAOTPWHy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferResponse": {
      "post": {
        "description": "Invoked by lender & asynchronous resposne to initiate AcceptOfferRequest API",
        "requestBody": {
          "description": "Response to setOfferRequest with loan Application status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_lnTRGDORxA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_nQMZBaSqmC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeRequest": {
      "post": {
        "description": "Invoked by LSP to raise dispute",
        "requestBody": {
          "description": "Request to raise dispute",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ovGjbxjuuy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_OMSVVhjXbp"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeResponse": {
      "post": {
        "description": "Invoked by lender once Dispute is raised",
        "requestBody": {
          "description": "Returns the dispute details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_EnphJpbeWV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_HjYnpCDepX"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch dispute status",
        "requestBody": {
          "description": "Request to fetch dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_GumlJZaFnl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_mpmdChlNbG"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusResponse": {
      "post": {
        "description": "Invoked by lender informing LSP about status of dispute",
        "requestBody": {
          "description": "Returns the dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_CGdzyXZWMX"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ayNzvvTdeY"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to Trigger loan acceptance",
        "requestBody": {
          "description": "Trigger Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_XCjPaKJZeU"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_eYyPXpxdkk"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to trigger loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance with otpsessionKey",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_dbxauhLBnu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MwtHmnvphN"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to verify loan acceptance OTP",
        "requestBody": {
          "description": "Verify Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_WzkptFGfWE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_bPqARJEsxL"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to verify loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance Verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_OQRfzjkiBA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_jgaHrHwsVm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleRequest": {
      "post": {
        "description": "Create consent handle with Account Aggregator",
        "requestBody": {
          "description": "Request by LSP to lender to get consent handle with Account Aggregator",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_FNaoEqKNSB"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement by Lender to LSP for Consent Handle Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_CcjKZXcdUj"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleResponse": {
      "post": {
        "description": "Invoked by lender to send consent handle created in Account Aggregator",
        "requestBody": {
          "description": "Consent Handle Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_LXllkpYqYZ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent Hanlde Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_WhFCtptWDd"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to get consent handle status from lender",
        "requestBody": {
          "description": "Consent Status Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_mBKEXEIwPE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TXsCdSgBwI"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusResponse": {
      "post": {
        "description": "Invoked by lender to send consent status to LSP",
        "requestBody": {
          "description": "Consent Status Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_MZRNAqaufn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_BRPKxwgEvR"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get list of repayment plans",
        "requestBody": {
          "description": "Request to lender to get repayment plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_GHpopliXJo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_IeMVfNUkfx"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansResponse": {
      "post": {
        "description": "Invoked by lender to return repayment Plans",
        "requestBody": {
          "description": "Returns array of repayment Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_yrQugusqJS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vFDsbQDTik"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanRequest": {
      "post": {
        "description": "Invoked by LSP requesting lender to set repayment plan",
        "requestBody": {
          "description": "Set Choosen Repayment Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_mwsyhonTHe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_UxdjPJQjJD"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenRepayment status",
        "requestBody": {
          "description": "Set Repayment plan Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_SaEGepScDh"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_zQqFtcbUmN"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch status of set repayment plan ",
        "requestBody": {
          "description": "Get status of set repayment plan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_RNlfFjEyFG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_hVFuRllFxh"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of set Repayment plan",
        "requestBody": {
          "description": "Set Repayment Plan status response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_lpQBoNMZXv"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_wNdqQqdGMZ"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentRequest": {
      "post": {
        "description": "Invoked by LSP to trigger repayment",
        "requestBody": {
          "description": "Request to lender to trigger a repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_eZlVmECLRo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_FCDKGcSnWE"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentResponse": {
      "post": {
        "description": "Invoked by Lender to send lender's payment page url",
        "requestBody": {
          "description": "Response to trigger repayment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rpSclxxCZw"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_DHMxEraxOH"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch repayment status",
        "requestBody": {
          "description": "Request to lender to check status of repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_XlMVMVjDkS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_fqIMPheYxr"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusResponse": {
      "post": {
        "description": "Invoked by Lender to return repayment status",
        "requestBody": {
          "description": "Response to trigger repayment status request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_yylWNWXBLH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_XADPFZyRhy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getErrorCodesRequest": {
      "post": {
        "description": "search error code",
        "requestBody": {
          "description": "Request to fetch error code",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_DDzcEiXrXo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_yyQehgvltC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getLookupCodesRequest": {
      "post": {
        "description": "Get possible values of ENUM fields by lookupType",
        "requestBody": {
          "description": "Request to fetch ENUM for a lookupTypes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_VOYFmPWncs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tzbWtGPhvx"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "schema_OFtCjGDrLR": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_dftmkOONLV": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_OFtCjGDrLR"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_gkbsXpTUKR": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_SGjNxqHYRv": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_zKseRrxkVe": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_MpByGmvhUt": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_SEcMfjDZzC": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_UfEZRkNaSC": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_yffJXYmGqe": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YZrvTXcDYx": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yffJXYmGqe"
          }
        }
      },
      "schema_JFPumNMSgd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MutQiMKvWy": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JFPumNMSgd"
          }
        }
      },
      "schema_xvZGCIRSKM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qyILDnQbmR": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xvZGCIRSKM"
          }
        }
      },
      "schema_BaIdxLtlfT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vFcrSbyJEM": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_BaIdxLtlfT"
          }
        }
      },
      "schema_QIwUKrZvOh": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_YZrvTXcDYx"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_MutQiMKvWy"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_qyILDnQbmR"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_vFcrSbyJEM"
          }
        }
      },
      "schema_hHepyyBakY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EXeCgqxPsO": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_MpByGmvhUt"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_SEcMfjDZzC"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_UfEZRkNaSC"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_QIwUKrZvOh"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hHepyyBakY"
          }
        }
      },
      "schema_hrdrWIafuk": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_YeENFNewgB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KbJiaTuwCm": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_hrdrWIafuk"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YeENFNewgB"
          }
        }
      },
      "schema_eodGjYtzEF": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_JDGsNulMFQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zvFIrtoKQy": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_eodGjYtzEF"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JDGsNulMFQ"
          }
        }
      },
      "schema_AIrLmtGiHs": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_KbJiaTuwCm"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_zvFIrtoKQy"
          }
        }
      },
      "schema_lEIQLddMbq": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_FrHYARQmkg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KROPfHUYlj": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_lEIQLddMbq"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FrHYARQmkg"
          }
        }
      },
      "schema_DpanmOFaeg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aGQOqXwqYU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ADVxhNhMGP": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_DpanmOFaeg"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aGQOqXwqYU"
          }
        }
      },
      "schema_rHLvnbqdhu": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_KROPfHUYlj"
          },
          "method": {
            "$ref": "#/components/schemas/schema_ADVxhNhMGP"
          }
        }
      },
      "schema_vZkbasRCmT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KyPYMMjyfi": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vZkbasRCmT"
          }
        }
      },
      "schema_jjuXpbuRdz": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_qylwByGNpH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dcarAMOmvP": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_jjuXpbuRdz"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qylwByGNpH"
          }
        }
      },
      "schema_WHFFmjyteM": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "terms",
          "disbursement",
          "repayment",
          "loanStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_SGjNxqHYRv"
          },
          "response": {
            "$ref": "#/components/schemas/schema_zKseRrxkVe"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_EXeCgqxPsO"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_AIrLmtGiHs"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_rHLvnbqdhu"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "REJECTED",
              "DEFAULTED",
              "COMPLETED",
              "ACTION_REQUIRED"
            ]
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KyPYMMjyfi"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_dcarAMOmvP"
            }
          }
        }
      },
      "schema_dsDtioFLAW": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_QOavhnoJjV": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_YqvJwxfgPe": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_QOavhnoJjV"
          },
          "requestId": {
            "type": "string",
            "example": "bvcc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_mgMnuziYWt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_tezmzSyTqh": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_QoyMboYsNC": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_tUwsCUQmTp": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IRMkqGitXG": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tUwsCUQmTp"
          }
        }
      },
      "schema_kJjZoegABC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vOqbYXTcJY": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kJjZoegABC"
          }
        }
      },
      "schema_AlrTXdwJKE": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_EFsDbNlpoj": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "summary"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_tezmzSyTqh"
          },
          "response": {
            "$ref": "#/components/schemas/schema_QoyMboYsNC"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "required": [
              "nextRepayment",
              "currentRepayment",
              "principalPaid",
              "interestPaid",
              "penaltyPaid",
              "principalPending",
              "interestPending",
              "amountDisbursed",
              "amountRepaid",
              "tenure",
              "description"
            ],
            "properties": {
              "nextRepayment": {
                "$ref": "#/components/schemas/schema_IRMkqGitXG"
              },
              "currentRepayment": {
                "$ref": "#/components/schemas/schema_vOqbYXTcJY"
              },
              "principalPaid": {
                "type": "string"
              },
              "interestPaid": {
                "type": "string"
              },
              "penaltyPaid": {
                "type": "string"
              },
              "principalPending": {
                "type": "string"
              },
              "interestPending": {
                "type": "string"
              },
              "amountDisbursed": {
                "type": "string"
              },
              "amountRepaid": {
                "type": "string"
              },
              "tenure": {
                "$ref": "#/components/schemas/schema_AlrTXdwJKE"
              },
              "description": {
                "type": "string",
                "example": "short description for the loan"
              }
            }
          }
        }
      },
      "schema_KZDfADjrWD": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_vJdkgejrXS": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_XfcCsgjQvR": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_vJdkgejrXS"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_PsvVFufFOW": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_fMtJHmLjli": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_khlIxYHuhK": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_PAILBZddFb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xpMLIqVVGE": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PAILBZddFb"
          }
        }
      },
      "schema_WcJUUNLSgP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jHlpAkMZWP": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WcJUUNLSgP"
          }
        }
      },
      "schema_cSyccCFhsC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KcNvfJZxNu": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_jHlpAkMZWP"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cSyccCFhsC"
          }
        }
      },
      "schema_GjIAPTNwZU": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_hujJIWyzAq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vBrKCdxFjn": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_xpMLIqVVGE"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KcNvfJZxNu"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_GjIAPTNwZU"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hujJIWyzAq"
          }
        }
      },
      "schema_LumqWNEPkQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LNndKtzoqL": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_LumqWNEPkQ"
          }
        }
      },
      "schema_qxoDMzNqla": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_lkDQpVIJwB": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qxoDMzNqla"
          }
        }
      },
      "schema_ovxssBSame": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NEjfMRcdoX": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_lkDQpVIJwB"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ovxssBSame"
          }
        }
      },
      "schema_iKygjEuLIM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_cNJYsEnYhn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jDxmeEhSME": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "example": "AWWPA7645M"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_LNndKtzoqL"
            }
          },
          "name": {
            "type": "string",
            "example": "ABC Bank"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_NEjfMRcdoX"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_iKygjEuLIM"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cNJYsEnYhn"
          }
        }
      },
      "schema_ktOMGofUNq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qiijOeSyhv": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ktOMGofUNq"
          }
        }
      },
      "schema_INkmyikGNq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_susBcDtDtN": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_INkmyikGNq"
          }
        }
      },
      "schema_KCDDGcatqg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GvGruRTfZE": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KCDDGcatqg"
          }
        }
      },
      "schema_RlIzQqmrGk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OpYzXdiDwZ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RlIzQqmrGk"
          }
        }
      },
      "schema_WHKqehLZII": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZrajgvNfqW": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_OpYzXdiDwZ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WHKqehLZII"
          }
        }
      },
      "schema_HpkWEHyYkO": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_uDmJJQgHKF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zaMUgbKjhw": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_GvGruRTfZE"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ZrajgvNfqW"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_HpkWEHyYkO"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uDmJJQgHKF"
          }
        }
      },
      "schema_htrKqmRwZN": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_RmKxbkTRdS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xXzmGacjfC": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_qiijOeSyhv"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_susBcDtDtN"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_zaMUgbKjhw"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_htrKqmRwZN"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RmKxbkTRdS"
          }
        }
      },
      "schema_VtoQEwfPWr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vzaZehsRCv": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VtoQEwfPWr"
          }
        }
      },
      "schema_JFFfnvBFmQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_yFrTEMUlFa": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JFFfnvBFmQ"
          }
        }
      },
      "schema_isPbTRQABE": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_TasEByRphU": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_yFrTEMUlFa"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_isPbTRQABE"
          }
        }
      },
      "schema_CbZezeQJAF": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_BGeWrcvXWN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vdolfVpjpM": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_vzaZehsRCv"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "relationshipWithBorrower": {
            "type": "string",
            "example": "Father"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_TasEByRphU"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_CbZezeQJAF"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_BGeWrcvXWN"
          }
        }
      },
      "schema_rnNiMoFVIC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aJniySzLoq": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_rnNiMoFVIC"
          }
        }
      },
      "schema_BZMEtkYuad": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SqObMYGBpS": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_BZMEtkYuad"
          }
        }
      },
      "schema_qhEuVEdCed": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MyMNwkuJUJ": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_SqObMYGBpS"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qhEuVEdCed"
          }
        }
      },
      "schema_JKIRkcDkij": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_OOmKYfZjhL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_epAmrFsKie": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_aJniySzLoq"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_MyMNwkuJUJ"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_JKIRkcDkij"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OOmKYfZjhL"
          }
        }
      },
      "schema_mlkgSlJXPf": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_YkykBZIfid": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_TcFxrTJKzg": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_csNcVnsfqc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tPJThaOPex": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_csNcVnsfqc"
          }
        }
      },
      "schema_KNRhkScGfj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_yVzXetiylw": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KNRhkScGfj"
          }
        }
      },
      "schema_VrLJuquclE": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EhiPPHiQzr": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VrLJuquclE"
          }
        }
      },
      "schema_dwLrrfaDPV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LPyxOTjLRC": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dwLrrfaDPV"
          }
        }
      },
      "schema_THzGCoaUbi": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_tPJThaOPex"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_yVzXetiylw"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_EhiPPHiQzr"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_LPyxOTjLRC"
          }
        }
      },
      "schema_kHpDaHmVTM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xyDxxOkWAf": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_mlkgSlJXPf"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_YkykBZIfid"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_TcFxrTJKzg"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_THzGCoaUbi"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kHpDaHmVTM"
          }
        }
      },
      "schema_kGICDszKEU": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_hMJKltBLDD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KoqbGuamwC": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_kGICDszKEU"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hMJKltBLDD"
          }
        }
      },
      "schema_RSEVsrBukD": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_YvWvdKTOHJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LCpLOxqkYy": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_RSEVsrBukD"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YvWvdKTOHJ"
          }
        }
      },
      "schema_MkASvyWMhu": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_KoqbGuamwC"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_LCpLOxqkYy"
          }
        }
      },
      "schema_pGJsgJiEPg": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_ayYDRqdjzR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_yLroByhbGd": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_pGJsgJiEPg"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ayYDRqdjzR"
          }
        }
      },
      "schema_pISckwneFq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PhCRgPjpIX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YAWlKnjqzI": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_pISckwneFq"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PhCRgPjpIX"
          }
        }
      },
      "schema_TPFjBtCKOZ": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_yLroByhbGd"
          },
          "method": {
            "$ref": "#/components/schemas/schema_YAWlKnjqzI"
          }
        }
      },
      "schema_HxxTCpTOQQ": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "loanId",
          "requestId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "type",
          "borrower",
          "lender",
          "collaterals",
          "guarantors",
          "applicants",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_fMtJHmLjli"
          },
          "response": {
            "$ref": "#/components/schemas/schema_khlIxYHuhK"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CASHFLOW",
              "PERSONAL",
              "HOME",
              "VEHICLE",
              "BUSINESS"
            ]
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_vBrKCdxFjn"
          },
          "lender": {
            "$ref": "#/components/schemas/schema_jDxmeEhSME"
          },
          "collaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_xXzmGacjfC"
            }
          },
          "guarantors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_vdolfVpjpM"
            }
          },
          "applicants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_epAmrFsKie"
            }
          },
          "terms": {
            "$ref": "#/components/schemas/schema_xyDxxOkWAf"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_MkASvyWMhu"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_TPFjBtCKOZ"
          }
        }
      },
      "schema_JNnObzdtGM": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_TiFGVrmUgp": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_eBAruZBWSy": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_TiFGVrmUgp"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_TJKktmCdvC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_TGMOBegEof": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KUWQASmAxj": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_XmZmLQgLzY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gtiwSSnXIa": {
        "type": "object",
        "required": [
          "date",
          "narration",
          "txnRefNo",
          "amount",
          "type",
          "closingBalance"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWL"
            ]
          },
          "closingBalance": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XmZmLQgLzY"
          }
        }
      },
      "schema_NYAkCpqqtF": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "accountStatement"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_TGMOBegEof"
          },
          "response": {
            "$ref": "#/components/schemas/schema_KUWQASmAxj"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_gtiwSSnXIa"
            }
          }
        }
      },
      "schema_WqCDosaUCy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_BQdkleLkwX": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_dZysuOwNJE": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ldxiYrdzjC": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dZysuOwNJE"
          }
        }
      },
      "schema_xWjMcwrCCj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OZgzuchObl": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xWjMcwrCCj"
          }
        }
      },
      "schema_eWHTNlllTY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LdLsWAVgll": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_OZgzuchObl"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_eWHTNlllTY"
          }
        }
      },
      "schema_RjFpZzyxPC": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_uHnOFvFjad": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZyUnTZWrAb": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ldxiYrdzjC"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_LdLsWAVgll"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_RjFpZzyxPC"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uHnOFvFjad"
          }
        }
      },
      "schema_qRwFsaYKNF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rfCIhcInci": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qRwFsaYKNF"
          }
        }
      },
      "schema_PlVlASqrGR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ldwjfqeCFt": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PlVlASqrGR"
          }
        }
      },
      "schema_QXJGqhFxgY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_yBgLvwquoZ": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QXJGqhFxgY"
          }
        }
      },
      "schema_YLGbptgpuh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hzmeJCzdjV": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YLGbptgpuh"
          }
        }
      },
      "schema_KStPpmZNno": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ANZlVhOzBM": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_hzmeJCzdjV"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KStPpmZNno"
          }
        }
      },
      "schema_RoRiXZtUvi": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_UwGzeyqdeX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZAlArYZrwH": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_yBgLvwquoZ"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ANZlVhOzBM"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_RoRiXZtUvi"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UwGzeyqdeX"
          }
        }
      },
      "schema_gadvoTgtvy": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_fDYTvADnlj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KOzThKQEUr": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rfCIhcInci"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_ldwjfqeCFt"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ZAlArYZrwH"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_gadvoTgtvy"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fDYTvADnlj"
          }
        }
      },
      "schema_SBKHRnuEXd": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "borrower"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_BQdkleLkwX"
          },
          "requestId": {
            "type": "string"
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_ZyUnTZWrAb"
          },
          "collateral": {
            "$ref": "#/components/schemas/schema_KOzThKQEUr"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_CKAwInrkBj": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_sZXfpTLjsg": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_voVmtuPDBt": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_PDgmmQmFdN": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_pZrjMmPUWK": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_HYHeSPtCwt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pcuximqPah": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HYHeSPtCwt"
          }
        }
      },
      "schema_VZexoKtnXh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_sGkzoXVdLk": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VZexoKtnXh"
          }
        }
      },
      "schema_kCAMINOgHM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rolVYAFTak": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kCAMINOgHM"
          }
        }
      },
      "schema_revsTiyMRH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AFcHYEPpUe": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_revsTiyMRH"
          }
        }
      },
      "schema_IRkDkGtfsw": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_pcuximqPah"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_sGkzoXVdLk"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_rolVYAFTak"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_AFcHYEPpUe"
          }
        }
      },
      "schema_TuedCdAkPQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZKISbeDTyH": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_voVmtuPDBt"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_PDgmmQmFdN"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_pZrjMmPUWK"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_IRkDkGtfsw"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TuedCdAkPQ"
          }
        }
      },
      "schema_KskkoqXoOv": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "loans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_sZXfpTLjsg"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "type": "object",
            "required": [
              "error"
            ],
            "properties": {
              "error": {
                "type": "string",
                "default": "",
                "example": "0"
              }
            }
          },
          "loans": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "loanId",
                "terms"
              ],
              "properties": {
                "loanId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "terms": {
                  "$ref": null
                }
              }
            }
          }
        }
      },
      "schema_OYqtaOKnkn": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_QSeClRqvoc": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_xxDatzNdKJ": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_QSeClRqvoc"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_hmpkzQHWmg": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_slHiNagNjt": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_bSSPddeyBn": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_BcOlRRXXsn": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_VULNhkyCun": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dSbRwyXAhY": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_BcOlRRXXsn"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VULNhkyCun"
          }
        }
      },
      "schema_ssgCHVVMpD": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_slHiNagNjt"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_bSSPddeyBn"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_dSbRwyXAhY"
            }
          }
        }
      },
      "schema_tWXAgZexhk": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_eUphrexRld": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_JzVsNgMrBl": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_SXRSGNbZBJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qTJdioNifa": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_JzVsNgMrBl"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SXRSGNbZBJ"
          }
        }
      },
      "schema_pkvwBxpGhq": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_eUphrexRld"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_qTJdioNifa"
          }
        }
      },
      "schema_jzHQBuAQSB": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_slzeXlLLXJ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_jXXFNXZdzY": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_lavAZmkmmJ": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_MyfOeYXMuQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kmvnAsDTPg": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_lavAZmkmmJ"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MyfOeYXMuQ"
          }
        }
      },
      "schema_oqTcUgHQIL": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_slzeXlLLXJ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_jXXFNXZdzY"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_kmvnAsDTPg"
          }
        }
      },
      "schema_ZNxgMTzCqw": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_HiQBueAUjB": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_vktRbNRRyt": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_HiQBueAUjB"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_kINkUKaIiv": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_qXNmmQOguu": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_EOkhZiXyil": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ywwOIFhejg": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_ewvPIZIIDU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_inZOGyWaBH": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_ywwOIFhejg"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ewvPIZIIDU"
          }
        }
      },
      "schema_vKwwYRyOpv": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "accountList"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_qXNmmQOguu"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_EOkhZiXyil"
          },
          "accountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_inZOGyWaBH"
            }
          }
        }
      },
      "schema_QxwycstIJk": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_UUddOWfmsQ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_SxMbAMpvxI": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_QKzKRQDAaJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rabzITwBIQ": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_SxMbAMpvxI"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QKzKRQDAaJ"
          }
        }
      },
      "schema_gVnCYRVttB": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_UUddOWfmsQ"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/schema_rabzITwBIQ"
          }
        }
      },
      "schema_WiJjgSSDTL": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ufejCZeorf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HwtsLuhjUO": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_uLaWfJadWa": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_MPaCFCNfCG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_deHmvWSeRh": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_uLaWfJadWa"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MPaCFCNfCG"
          }
        }
      },
      "schema_oVIenXWOch": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ufejCZeorf"
          },
          "response": {
            "$ref": "#/components/schemas/schema_HwtsLuhjUO"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "account": {
            "$ref": "#/components/schemas/schema_deHmvWSeRh"
          }
        }
      },
      "schema_yrIlnRJpjt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_drZxPAwXmB": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_aqbjveyBpi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oolxWGJiZV": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aqbjveyBpi"
          }
        }
      },
      "schema_RUTnPoWcXR": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_drZxPAwXmB"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_oolxWGJiZV"
          }
        }
      },
      "schema_KuJQMVkwQq": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_DmiigaJJTZ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_mgWuChFTtM": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_dHbAhJAEjf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BiBGqmQDHZ": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dHbAhJAEjf"
          }
        }
      },
      "schema_rDwFfagMGV": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_DmiigaJJTZ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_mgWuChFTtM"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_BiBGqmQDHZ"
          }
        }
      },
      "schema_bFJlJqPvwl": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_TeMeYghuPH": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_czFDKpfoIn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FebNtKPkcS": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_czFDKpfoIn"
          }
        }
      },
      "schema_uHaLjFNkeX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bPZBDeFTwk": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uHaLjFNkeX"
          }
        }
      },
      "schema_AxCqagTrII": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YVvwbYedjK": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_bPZBDeFTwk"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AxCqagTrII"
          }
        }
      },
      "schema_IfRyaXlOSj": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_kBLUcBbosL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LTufQMnPcj": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_FebNtKPkcS"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YVvwbYedjK"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_IfRyaXlOSj"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kBLUcBbosL"
          }
        }
      },
      "schema_RigpaSXJhj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_CubpQByAlC": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RigpaSXJhj"
          }
        }
      },
      "schema_wRdsBODEnW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fBGzainHYf": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wRdsBODEnW"
          }
        }
      },
      "schema_merqhpKpIi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OudYelDrpX": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_merqhpKpIi"
          }
        }
      },
      "schema_GEbwmkocBQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xyZpSAoeGK": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GEbwmkocBQ"
          }
        }
      },
      "schema_fwYNmJasoi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cljCsklcxr": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_xyZpSAoeGK"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fwYNmJasoi"
          }
        }
      },
      "schema_kuuYQjKmbM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_NknYMPJJIS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_uCzMqpAmyJ": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_OudYelDrpX"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_cljCsklcxr"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_kuuYQjKmbM"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NknYMPJJIS"
          }
        }
      },
      "schema_bxIroVEfwQ": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_tHgtsLwjiy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_mpCNtgyODH": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_CubpQByAlC"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_fBGzainHYf"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_uCzMqpAmyJ"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_bxIroVEfwQ"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tHgtsLwjiy"
          }
        }
      },
      "schema_ZrUtwhnPdX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MMonitFLBu": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ZrUtwhnPdX"
          }
        }
      },
      "schema_oyMOHqfbgq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rnWIhNBUPQ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oyMOHqfbgq"
          }
        }
      },
      "schema_liJGHlJJIX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zsPQcNORoc": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_rnWIhNBUPQ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_liJGHlJJIX"
          }
        }
      },
      "schema_NQOfiAWKya": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_QambxloKwt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_UvNIETObMN": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_MMonitFLBu"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "relationshipWithBorrower": {
            "type": "string",
            "example": "Father"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_zsPQcNORoc"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_NQOfiAWKya"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QambxloKwt"
          }
        }
      },
      "schema_vHbPFzXjYL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LGjRlbaAcx": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vHbPFzXjYL"
          }
        }
      },
      "schema_hFXnEtbNst": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jIoaDzOpIj": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hFXnEtbNst"
          }
        }
      },
      "schema_vZnENJdbdK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NmHKhayHKD": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_jIoaDzOpIj"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vZnENJdbdK"
          }
        }
      },
      "schema_YftiurbbAh": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_aydClJgJRO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OfqCYwPolY": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_LGjRlbaAcx"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_NmHKhayHKD"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YftiurbbAh"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aydClJgJRO"
          }
        }
      },
      "schema_lvbXVQiabb": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_HDYRasthCK": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_FgkiBTHrci": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_VAdyJmLbdG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jTwMapYhdd": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VAdyJmLbdG"
          }
        }
      },
      "schema_COBgdWwcPa": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vxXztbjQOR": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_COBgdWwcPa"
          }
        }
      },
      "schema_YvZBAZfvea": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RUfFGgkhAY": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YvZBAZfvea"
          }
        }
      },
      "schema_NkxjZPEOJr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LUIRNMLThC": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NkxjZPEOJr"
          }
        }
      },
      "schema_OuimHuILfo": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_jTwMapYhdd"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_vxXztbjQOR"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_RUfFGgkhAY"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_LUIRNMLThC"
          }
        }
      },
      "schema_IXlZbnVNLW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hhnebyxRcz": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_lvbXVQiabb"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_HDYRasthCK"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_FgkiBTHrci"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_OuimHuILfo"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_IXlZbnVNLW"
          }
        }
      },
      "schema_gskHLSIEjn": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_TeMeYghuPH"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "createdDate",
                "loanApplicationId",
                "type",
                "borrower",
                "collaterals",
                "guarantors",
                "applicants",
                "terms"
              ],
              "properties": {
                "createdDate": {
                  "type": "string"
                },
                "loanApplicationId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CASHFLOW",
                    "HOME",
                    "VEHICLE",
                    "PERSONAL",
                    "BUSINESS"
                  ]
                },
                "borrower": {
                  "$ref": null
                },
                "collaterals": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "guarantors": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "applicants": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "terms": {
                  "$ref": null
                }
              }
            }
          }
        }
      },
      "schema_zieIuHPYCh": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_RdyrHldXfE": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ZPpEORtzVm": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_RdyrHldXfE"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          }
        }
      },
      "schema_sBHHfCBPiH": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ahaaXGZbMG": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_sUVCPdzTrO": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_zSFaHwYbik": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GkkfVWwEvN": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zSFaHwYbik"
          }
        }
      },
      "schema_SbzHuRkVmI": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_REAEvfhSup": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ePyGobpVWJ": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_SbzHuRkVmI"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_REAEvfhSup"
          }
        }
      },
      "schema_odvJzGPLUo": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_adgaQvySEc": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_cNGOvbeamH": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_xRzMdSiFeH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cYMpRqHpoj": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xRzMdSiFeH"
          }
        }
      },
      "schema_pRKUcVgseC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vqXZBYhdAY": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pRKUcVgseC"
          }
        }
      },
      "schema_hmUVlmlTRu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qnEIZkEbsP": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hmUVlmlTRu"
          }
        }
      },
      "schema_wjyPeRtyGd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SXdPFeAEBs": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wjyPeRtyGd"
          }
        }
      },
      "schema_AYKWxhgKpc": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_cYMpRqHpoj"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_vqXZBYhdAY"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_qnEIZkEbsP"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_SXdPFeAEBs"
          }
        }
      },
      "schema_eqCGEHinIP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RSsKOUoZEw": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_odvJzGPLUo"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_adgaQvySEc"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_cNGOvbeamH"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_AYKWxhgKpc"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_eqCGEHinIP"
          }
        }
      },
      "schema_WFGpGACyVw": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_RvzwffwElW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QzMYpcOiPB": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_WFGpGACyVw"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RvzwffwElW"
          }
        }
      },
      "schema_TBFAbHJOol": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_BNxMavmtAW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ammWxdDyOs": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_TBFAbHJOol"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_BNxMavmtAW"
          }
        }
      },
      "schema_onpsyESEOe": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_QzMYpcOiPB"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ammWxdDyOs"
            }
          }
        }
      },
      "schema_gJZezDMwHk": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_PhMgSlXpEb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JepxJVkQlt": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_gJZezDMwHk"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PhMgSlXpEb"
          }
        }
      },
      "schema_FQPvFjUaKv": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_JepxJVkQlt"
            }
          }
        }
      },
      "schema_VmhdqSBiSH": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_PGbbzVUzCk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EQLiDLZgOL": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_RSsKOUoZEw"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_onpsyESEOe"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_FQPvFjUaKv"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_VmhdqSBiSH"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PGbbzVUzCk"
          }
        }
      },
      "schema_IEGsIGBcAR": {
        "type": "object",
        "required": [
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "loanApplicationId": {
            "type": "string"
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_GkkfVWwEvN"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ePyGobpVWJ"
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_EQLiDLZgOL"
            }
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "OFFERED",
              "OFFER_ACCEPTED",
              "GRANTED",
              "REJECTED",
              "ACTION REQUIRED"
            ]
          }
        }
      },
      "schema_HYvlNCBHgT": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ahaaXGZbMG"
          },
          "response": {
            "$ref": "#/components/schemas/schema_sUVCPdzTrO"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_IEGsIGBcAR"
            }
          }
        }
      },
      "schema_myoTFQAEAI": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_XTbwCPlDjM": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_utKAjQeQBE": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_WVUqpcRAvA": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_pixORUMRJx": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_uwXIzoGptN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pIZHDUlGPD": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uwXIzoGptN"
          }
        }
      },
      "schema_tgVyrnVGdg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DBXAQXufda": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tgVyrnVGdg"
          }
        }
      },
      "schema_EAitNZMaVn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BNMvrIdiKr": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EAitNZMaVn"
          }
        }
      },
      "schema_xwvNyvFVyt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DdowdOzUSc": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xwvNyvFVyt"
          }
        }
      },
      "schema_CpJoVMPdUT": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_pIZHDUlGPD"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_DBXAQXufda"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_BNMvrIdiKr"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_DdowdOzUSc"
          }
        }
      },
      "schema_zauFMsRDKj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xJOjcnqLXR": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_utKAjQeQBE"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_WVUqpcRAvA"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_pixORUMRJx"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_CpJoVMPdUT"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zauFMsRDKj"
          }
        }
      },
      "schema_CcWofaYMQD": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_YETFsbtyNq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_blXCxOOqCv": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_CcWofaYMQD"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YETFsbtyNq"
          }
        }
      },
      "schema_FIAErkgWue": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_tOTkTqBvsM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xijEcPspCr": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_FIAErkgWue"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tOTkTqBvsM"
          }
        }
      },
      "schema_zbKBPepqad": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_blXCxOOqCv"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_xijEcPspCr"
            }
          }
        }
      },
      "schema_CRSBTMAVco": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_GBDsFCBgJL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PmRVYelmqe": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_CRSBTMAVco"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GBDsFCBgJL"
          }
        }
      },
      "schema_gezNjsAFps": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_PmRVYelmqe"
            }
          }
        }
      },
      "schema_mzbxYPOhcc": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_sBsWjiZUjY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BhfFUqKOMq": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_xJOjcnqLXR"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_zbKBPepqad"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_gezNjsAFps"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_mzbxYPOhcc"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sBsWjiZUjY"
          }
        }
      },
      "schema_eYtZZUgFHV": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "offer"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_XTbwCPlDjM"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "offer": {
            "$ref": "#/components/schemas/schema_BhfFUqKOMq"
          }
        }
      },
      "schema_dQLAOTPWHy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_vhOAMoRyRY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GAIesBDpUS": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_lnTRGDORxA": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_vhOAMoRyRY"
          },
          "response": {
            "$ref": "#/components/schemas/schema_GAIesBDpUS"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "OFFER_ACCEPTED",
              "PROCESSING",
              "OFFERED",
              "GRANTED",
              "REJECTED"
            ]
          }
        }
      },
      "schema_nQMZBaSqmC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CTqAQGuHyU": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_oAjhyTbpTV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ouDwDIEnQg": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oAjhyTbpTV"
          }
        }
      },
      "schema_ovGjbxjuuy": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CTqAQGuHyU"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_ouDwDIEnQg"
          }
        }
      },
      "schema_OMSVVhjXbp": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_OPQhRQiSKO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HmHjjwyIeP": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_FiivkaFBcs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dwqJeRRClf": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FiivkaFBcs"
          }
        }
      },
      "schema_EnphJpbeWV": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_OPQhRQiSKO"
          },
          "response": {
            "$ref": "#/components/schemas/schema_HmHjjwyIeP"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_dwqJeRRClf"
          }
        }
      },
      "schema_HjYnpCDepX": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_oglvjEuHnt": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ptfhGOLvnk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kLEbeXwZFd": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ptfhGOLvnk"
          }
        }
      },
      "schema_GumlJZaFnl": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_oglvjEuHnt"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_kLEbeXwZFd"
          }
        }
      },
      "schema_mpmdChlNbG": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_JPkRnBukgF": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_JeGxlRoaVl": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_jmNltjQjDJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LMDGALdnCP": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jmNltjQjDJ"
          }
        }
      },
      "schema_CGdzyXZWMX": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_JPkRnBukgF"
          },
          "response": {
            "$ref": "#/components/schemas/schema_JeGxlRoaVl"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_LMDGALdnCP"
          }
        }
      },
      "schema_ayNzvvTdeY": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_gzwMnaQHKm": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_jtFEDgBYIV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pUTETHimcC": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jtFEDgBYIV"
          }
        }
      },
      "schema_BqoxQtsyUX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IPPOZAcGYQ": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_pUTETHimcC"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_BqoxQtsyUX"
          }
        }
      },
      "schema_XCjPaKJZeU": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_gzwMnaQHKm"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_IPPOZAcGYQ"
          }
        }
      },
      "schema_eYyPXpxdkk": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_DekCoAnyAQ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qwJTveOWOL": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ZNnqdzSFno": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DKzvLnooPF": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ZNnqdzSFno"
          }
        }
      },
      "schema_pWOMVmZuAt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZyIFbcpKVL": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_DKzvLnooPF"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pWOMVmZuAt"
          }
        }
      },
      "schema_dbxauhLBnu": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_DekCoAnyAQ"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_qwJTveOWOL"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_ZyIFbcpKVL"
          }
        }
      },
      "schema_MwtHmnvphN": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_jKhQdBAuLX": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_PAyRGIKoBq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XjkvDrbSmh": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PAyRGIKoBq"
          }
        }
      },
      "schema_GAqKZTXyNf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_WRvxLotCdL": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_XjkvDrbSmh"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GAqKZTXyNf"
          }
        }
      },
      "schema_WzkptFGfWE": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_jKhQdBAuLX"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_WRvxLotCdL"
          }
        }
      },
      "schema_bPqARJEsxL": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_SddxPqTcpj": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_AeysECdqhC": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_tAqYKhQAPk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_njbMqYAfCF": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tAqYKhQAPk"
          }
        }
      },
      "schema_DDnlsBVHcg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qlDzTzAZjl": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_njbMqYAfCF"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DDnlsBVHcg"
          }
        }
      },
      "schema_OQRfzjkiBA": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_SddxPqTcpj"
          },
          "response": {
            "$ref": "#/components/schemas/schema_AeysECdqhC"
          },
          "requestId": {
            "type": "string"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_qlDzTzAZjl"
          }
        }
      },
      "schema_jgaHrHwsVm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_NAHyikJApD": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_tVbVWhRlLB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BnbhYJKtER": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tVbVWhRlLB"
          }
        }
      },
      "schema_Aorfhaeyhi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HiXSPuhxnW": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_BnbhYJKtER"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_Aorfhaeyhi"
          }
        }
      },
      "schema_FNaoEqKNSB": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationIds",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_NAHyikJApD"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          },
          "requestId": {
            "type": "string",
            "example": "g8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_HiXSPuhxnW"
          }
        }
      },
      "schema_CcjKZXcdUj": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_PRoXPgKrmT": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TmdlygLmpL": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_uUlnDaUlUC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rluORCGszk": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uUlnDaUlUC"
          }
        }
      },
      "schema_sYiganXhFY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RpBWNBznoq": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_rluORCGszk"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sYiganXhFY"
          }
        }
      },
      "schema_LXllkpYqYZ": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_PRoXPgKrmT"
          },
          "response": {
            "$ref": "#/components/schemas/schema_TmdlygLmpL"
          },
          "requestId": {
            "type": "string",
            "example": "i8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_RpBWNBznoq"
          }
        }
      },
      "schema_WhFCtptWDd": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ZDnprvTXah": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_WTooUkirFo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nqkYyRmvEI": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WTooUkirFo"
          }
        }
      },
      "schema_ogUPYfUemU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QdgbVSBLQz": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_nqkYyRmvEI"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ogUPYfUemU"
          }
        }
      },
      "schema_mBKEXEIwPE": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ZDnprvTXah"
          },
          "requestId": {
            "type": "string",
            "example": "m8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_QdgbVSBLQz"
          }
        }
      },
      "schema_TXsCdSgBwI": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_uDliPXvTgI": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qGcNaLhHIp": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_kjQXzMWSSR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BpoFNvhGdq": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kjQXzMWSSR"
          }
        }
      },
      "schema_MZxuKbmcTh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KpnHnXgqhg": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_BpoFNvhGdq"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MZxuKbmcTh"
          }
        }
      },
      "schema_MZRNAqaufn": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_uDliPXvTgI"
          },
          "response": {
            "$ref": "#/components/schemas/schema_qGcNaLhHIp"
          },
          "requestId": {
            "type": "string",
            "example": "p8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_KpnHnXgqhg"
          }
        }
      },
      "schema_BRPKxwgEvR": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_SeShSxHvBG": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GHpopliXJo": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_SeShSxHvBG"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_IeMVfNUkfx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_pQqreEsszz": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_kOorCqyMkc": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ixXKpsFnYf": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_uhSgdLpucF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ynHZsbFOMR": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_ixXKpsFnYf"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uhSgdLpucF"
          }
        }
      },
      "schema_yrQugusqJS": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_pQqreEsszz"
          },
          "response": {
            "$ref": "#/components/schemas/schema_kOorCqyMkc"
          },
          "requestId": {
            "type": "string"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ynHZsbFOMR"
            }
          }
        }
      },
      "schema_vFDsbQDTik": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_eQDFWNMBSJ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_pJcyjBUdxy": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_lvyHtLMyvK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_lkAFvoEsXu": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_pJcyjBUdxy"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lvyHtLMyvK"
          }
        }
      },
      "schema_mwsyhonTHe": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationId",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_eQDFWNMBSJ"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_lkAFvoEsXu"
          }
        }
      },
      "schema_UxdjPJQjJD": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_yjuaUEKJLs": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_yAsjzPizaC": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_GlBdaXlRWx": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_qvirWjJkdt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_uhgDUKVVsU": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_GlBdaXlRWx"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qvirWjJkdt"
          }
        }
      },
      "schema_SaEGepScDh": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_yjuaUEKJLs"
          },
          "response": {
            "$ref": "#/components/schemas/schema_yAsjzPizaC"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_uhgDUKVVsU"
          }
        }
      },
      "schema_zQqFtcbUmN": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_PWszfZcgJf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_rqiCXxsarD": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_dVvxsEXYjF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FaptbsPtFp": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_rqiCXxsarD"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dVvxsEXYjF"
          }
        }
      },
      "schema_RNlfFjEyFG": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_PWszfZcgJf"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_FaptbsPtFp"
          }
        }
      },
      "schema_hVFuRllFxh": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ZacwEVJxfx": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_rDFiZRyWnp": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_GSuHrQbtyY": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_hgGtBGDyNQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_UzXlMQUGLs": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_GSuHrQbtyY"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hgGtBGDyNQ"
          }
        }
      },
      "schema_lpQBoNMZXv": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ZacwEVJxfx"
          },
          "response": {
            "$ref": "#/components/schemas/schema_rDFiZRyWnp"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_UzXlMQUGLs"
          }
        }
      },
      "schema_wNdqQqdGMZ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_giKmnaYzTY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GamCLtqdqh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EOfnZYwayu": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GamCLtqdqh"
          }
        }
      },
      "schema_eZlVmECLRo": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_giKmnaYzTY"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_EOfnZYwayu"
          }
        }
      },
      "schema_FCDKGcSnWE": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ggiVAjSwiX": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_hiAthPCohm": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_soMzOGHXYT": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_xyKzoaYLcv": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jTRQGZgKIL": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_soMzOGHXYT"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xyKzoaYLcv"
          }
        }
      },
      "schema_rpSclxxCZw": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ggiVAjSwiX"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_hiAthPCohm"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_jTRQGZgKIL"
          }
        }
      },
      "schema_DHMxEraxOH": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_cOgRsNPooC": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_eecJWnbBJB": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_GrSQaUpHCG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SPELanJOMY": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_eecJWnbBJB"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GrSQaUpHCG"
          }
        }
      },
      "schema_XlMVMVjDkS": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_cOgRsNPooC"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_SPELanJOMY"
          }
        }
      },
      "schema_fqIMPheYxr": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_yYPfwRVAsO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_bPJpAfcmwU": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_FKKQNmEVIY": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_EaDxyvBivT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nvOZwCXTOb": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_FKKQNmEVIY"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EaDxyvBivT"
          }
        }
      },
      "schema_yylWNWXBLH": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_yYPfwRVAsO"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_bPJpAfcmwU"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_nvOZwCXTOb"
          }
        }
      },
      "schema_XADPFZyRhy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_oQhMtIwSMJ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_DDzcEiXrXo": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "errorCode"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_oQhMtIwSMJ"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "errorCode": {
            "type": "string",
            "example": "SDP1001"
          }
        }
      },
      "schema_yyQehgvltC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_hiSVRRbRKb": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_VOYFmPWncs": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "lookupType"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_hiSVRRbRKb"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "lookupType": {
            "type": "string",
            "example": "LOAN_STATUS"
          }
        }
      },
      "schema_tzbWtGPhvx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      }
    }
  }
}