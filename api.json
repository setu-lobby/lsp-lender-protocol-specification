{
  "openapi": "3.0.0",
  "info": {
    "title": "Grant Loan API",
    "description": "API to create actual loan in lender's system, after monitoring consent",
    "version": "3.1"
  },
  "paths": {
    "/v3/loan/grantLoanRequest": {
      "post": {
        "description": "Invokes by LSP to Grant Loan",
        "requestBody": {
          "description": "Request to lender to Grant Loan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_khnghpqSvn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Grant Loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_VyqtrMcJcy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/grantLoanResponse": {
      "post": {
        "description": "Invoked by Lender to informing status of loan",
        "requestBody": {
          "description": "Response to LSP with loan statu",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_eiVBJrpZva"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tAwTgQxifJ"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/LoanSummaryRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan summary",
        "requestBody": {
          "description": "Request to lender for loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_uAiZqMrFEj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to  Loan summary Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vQlAzJjHzB"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanSummaryResponse": {
      "post": {
        "description": "Invoked by Lender to informing loan summary request",
        "requestBody": {
          "description": "Response to LSP with loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_HfcoiBZZRq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_edzUyaArJc"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanRequest": {
      "post": {
        "description": "Invokes by LSP requesting details of a loan",
        "requestBody": {
          "description": "Request to lender for loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_YjvLCYhdNN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to get loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_jJWWNQlcQH"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan details",
        "requestBody": {
          "description": "Response to LSP with loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_UmMAvHeMrG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ROGAHHhEnO"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan statement",
        "requestBody": {
          "description": "Request to lender for loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_cfCqCcRwOf"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan statement Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_QwAAhvpRhD"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan statement",
        "requestBody": {
          "description": "Response to LSP with loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_mrRhftVoWS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_yLKqNNLePY"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansRequest": {
      "post": {
        "description": "Invokes by LSP requesting list of the loan provisioned",
        "requestBody": {
          "description": "Request to lender for list of the loan provisioned",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_BmziQjYNqD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan list Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_IDUvtlnlgW"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansResponse": {
      "post": {
        "description": "Invoked by Lender to inform the list of loans",
        "requestBody": {
          "description": "Response to LSP with the list of loans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_AIDbyfeKjM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_AvJKnwNpoN"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get disbursement Plans",
        "requestBody": {
          "description": "Request to lender to get disbursement Plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_hatFsMvozw"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_nOkNQazKrh"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansResponse": {
      "post": {
        "description": "Invoked by lender to return disbursement Plans",
        "requestBody": {
          "description": "Returns array of disbursement Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_jzeMSGvmyl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_PithgBwNAW"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanRequest": {
      "post": {
        "description": "Invoked by LSP to set disbursement plan",
        "requestBody": {
          "description": "Set Choosen Disbursement Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_umsLuiPbSi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_kzIcGHUlEC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenDisbursement status",
        "requestBody": {
          "description": "Send Disbursement Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_mWsiIkWEzW"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_GoEpOZvobs"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsRequest": {
      "post": {
        "description": "Invoked by LSP to get array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ziAbiAMuJr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_hQTpEOpYqY"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsResponse": {
      "post": {
        "description": "Invoked by Lender to return array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_PGxyBogtxw"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_zrznmTHfWS"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountRequest": {
      "post": {
        "description": "Invoked by LSP to set the disbursement Account",
        "requestBody": {
          "description": "set Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_bJNvdnkNUa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_QIWILPhYpu"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountResponse": {
      "post": {
        "description": "Invoked by Lender to inform current status of chosenAccount",
        "requestBody": {
          "description": "status of chosen account for disbursement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_xVHwcuiCYf"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_qgLMrsxEIf"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/triggerDisbursementRequest": {
      "post": {
        "description": "Invoked by LSP to trigger Disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_almgTzvYfV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ODwmVMqxcP"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/TriggerDisbursementResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_YpCOsZVttY"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_FWBKreREWy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to generate offer after consent for data is ready",
        "requestBody": {
          "description": "Request to generate offer for a set of loan application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_LbasKGRcKG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_UhNIobkysa"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersResponse": {
      "post": {
        "description": "Invoked by lender informing borrower about offers",
        "requestBody": {
          "description": "Returns the tentaive loan offer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_zLnRmMdDpZ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_BzJjjxssZl"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to set chosen offer",
        "requestBody": {
          "description": "Informing lender about offer chosen by borrower",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_oYXivHkJnh"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_WCpwNgvBBX"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferResponse": {
      "post": {
        "description": "Invoked by lender & asynchronous resposne to initiate AcceptOfferRequest API",
        "requestBody": {
          "description": "Response to setOfferRequest with loan Application status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_bixVUWHayR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_OsZJnDYqfU"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeRequest": {
      "post": {
        "description": "Invoked by LSP to raise dispute",
        "requestBody": {
          "description": "Request to raise dispute",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_IvFQSltsLl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_IBfqmpvXRR"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeResponse": {
      "post": {
        "description": "Invoked by lender once Dispute is raised",
        "requestBody": {
          "description": "Returns the dispute details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_SWTUaDsymF"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_eADgMStNAt"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch dispute status",
        "requestBody": {
          "description": "Request to fetch dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_bDSHbRvbjL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_kiQCuoumfZ"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusResponse": {
      "post": {
        "description": "Invoked by lender informing LSP about status of dispute",
        "requestBody": {
          "description": "Returns the dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_sYuQwUmGuH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_wMIthYSXzq"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to Trigger loan acceptance",
        "requestBody": {
          "description": "Trigger Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_vacCVMjpSV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_EEvkwtDAHd"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to trigger loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance with otpsessionKey",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_AtKKOaYRiI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_QPZrsgLabD"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to verify loan acceptance OTP",
        "requestBody": {
          "description": "Verify Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_vTrxWiiRFg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_kWOoNJooKv"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to verify loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance Verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_VzMhTdBJNC"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MjfkvZLaVu"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleRequest": {
      "post": {
        "description": "Create consent handle with Account Aggregator",
        "requestBody": {
          "description": "Request by LSP to lender to get consent handle with Account Aggregator",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_PmgwTJiAWP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement by Lender to LSP for Consent Handle Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_qsFCRVVCOP"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleResponse": {
      "post": {
        "description": "Invoked by lender to send consent handle created in Account Aggregator",
        "requestBody": {
          "description": "Consent Handle Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_cWfihwfjDd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent Hanlde Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_BvkvSYYUxy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to get consent handle status from lender",
        "requestBody": {
          "description": "Consent Status Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_WVpGKxmfJs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MRVQMSXvVy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusResponse": {
      "post": {
        "description": "Invoked by lender to send consent status to LSP",
        "requestBody": {
          "description": "Consent Status Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_DzICgQRZqZ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_rLLzemezxz"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get list of repayment plans",
        "requestBody": {
          "description": "Request to lender to get repayment plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_CvSncAevIx"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_pRHGvxFFqJ"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansResponse": {
      "post": {
        "description": "Invoked by lender to return repayment Plans",
        "requestBody": {
          "description": "Returns array of repayment Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_XiMOVCCLYW"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tDnxLZHLwC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanRequest": {
      "post": {
        "description": "Invoked by LSP requesting lender to set repayment plan",
        "requestBody": {
          "description": "Set Choosen Repayment Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_LjrYCnzxdy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_RrNvamiuQx"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenRepayment status",
        "requestBody": {
          "description": "Set Repayment plan Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_akraTarazU"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_eaemxHomai"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch status of set repayment plan ",
        "requestBody": {
          "description": "Get status of set repayment plan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rPEtLjUuEc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_dcVnVLBTQP"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of set Repayment plan",
        "requestBody": {
          "description": "Set Repayment Plan status response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_AyXAaNZeMy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_mWKNhSzKPp"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentRequest": {
      "post": {
        "description": "Invoked by LSP to trigger repayment",
        "requestBody": {
          "description": "Request to lender to trigger a repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_WGAecVqcwo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tDrPISwdvG"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentResponse": {
      "post": {
        "description": "Invoked by Lender to send lender's payment page url",
        "requestBody": {
          "description": "Response to trigger repayment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_MHeJpQMXdF"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_llIMrzBQqb"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch repayment status",
        "requestBody": {
          "description": "Request to lender to check status of repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_uPxLeJwLCR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_QanyHMVRyj"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusResponse": {
      "post": {
        "description": "Invoked by Lender to return repayment status",
        "requestBody": {
          "description": "Response to trigger repayment status request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_lwaGrMNdrM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_nWWaBFibDm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getErrorCodesRequest": {
      "post": {
        "description": "search error code",
        "requestBody": {
          "description": "Request to fetch error code",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_NQNJhXuUFr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_SWXRyRHpAr"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getLookupCodesRequest": {
      "post": {
        "description": "Get possible values of ENUM fields by lookupType",
        "requestBody": {
          "description": "Request to fetch ENUM for a lookupTypes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_fWdWSOhdXk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_wShOeZaCxD"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "schema_ntlCFaGebl": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_khnghpqSvn": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ntlCFaGebl"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_VyqtrMcJcy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_iaUhQpwpTv": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_VlVfSFLWgA": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_WQvOiuYlze": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_XagXCTLcGX": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_UYerVMirTI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rIsIoljdju": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UYerVMirTI"
          }
        }
      },
      "schema_jBwnsexjzf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_TQvXWnhOcU": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jBwnsexjzf"
          }
        }
      },
      "schema_qJcqChKtiP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YwFcoWmaic": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qJcqChKtiP"
          }
        }
      },
      "schema_aciGpQgVgA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hoLDBMWQGp": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aciGpQgVgA"
          }
        }
      },
      "schema_IwEonMDjWW": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_rIsIoljdju"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_TQvXWnhOcU"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_YwFcoWmaic"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_hoLDBMWQGp"
          }
        }
      },
      "schema_OhGERoYuEC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jcMxtMgCTv": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_WQvOiuYlze"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_XagXCTLcGX"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_IwEonMDjWW"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OhGERoYuEC"
          }
        }
      },
      "schema_jAPhpRnEsY": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_lJNutWRUTZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FSsxcXpbMH": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_jAPhpRnEsY"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lJNutWRUTZ"
          }
        }
      },
      "schema_IeMFZYiXOb": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_IJIFUbmojd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GqCcJfNSmn": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_IeMFZYiXOb"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_IJIFUbmojd"
          }
        }
      },
      "schema_mrTUCdmhMy": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_FSsxcXpbMH"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_GqCcJfNSmn"
          }
        }
      },
      "schema_mZywGHupNU": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_XbvPHDrWGZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MHEfHVGsXv": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_mZywGHupNU"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XbvPHDrWGZ"
          }
        }
      },
      "schema_IpaYGnwDHW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hZyiFrxDsJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pcYuFztWLR": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_IpaYGnwDHW"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hZyiFrxDsJ"
          }
        }
      },
      "schema_EKKiSawhIy": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_MHEfHVGsXv"
          },
          "method": {
            "$ref": "#/components/schemas/schema_pcYuFztWLR"
          }
        }
      },
      "schema_eiVBJrpZva": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "terms",
          "disbursement",
          "repayment",
          "loanStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_iaUhQpwpTv"
          },
          "response": {
            "$ref": "#/components/schemas/schema_VlVfSFLWgA"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_jcMxtMgCTv"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_mrTUCdmhMy"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_EKKiSawhIy"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "REJECTED",
              "DEFAULTED",
              "COMPLETED",
              "ACTION_REQUIRED"
            ]
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/rejectiondetail.json"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/actionrequired.json"
            }
          }
        }
      },
      "schema_tAwTgQxifJ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_HjrxUEkCgg": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_uAiZqMrFEj": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_HjrxUEkCgg"
          },
          "requestId": {
            "type": "string",
            "example": "bvcc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_vQlAzJjHzB": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_zJHtbzGhuZ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_SIYOvngDEN": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_HfcoiBZZRq": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "summary"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_zJHtbzGhuZ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_SIYOvngDEN"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "required": [
              "nextRepayment",
              "currentRepayment",
              "principalPaid",
              "interestPaid",
              "penaltyPaid",
              "principalPending",
              "interestPending",
              "amountDisbursed",
              "amountRepaid",
              "tenure",
              "description"
            ],
            "properties": {
              "nextRepayment": {
                "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/payment.json"
              },
              "currentRepayment": {
                "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/payment.json"
              },
              "principalPaid": {
                "type": "string"
              },
              "interestPaid": {
                "type": "string"
              },
              "penaltyPaid": {
                "type": "string"
              },
              "principalPending": {
                "type": "string"
              },
              "interestPending": {
                "type": "string"
              },
              "amountDisbursed": {
                "type": "string"
              },
              "amountRepaid": {
                "type": "string"
              },
              "tenure": {
                "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/loantenure.json"
              },
              "description": {
                "type": "string",
                "example": "short description for the loan"
              }
            }
          }
        }
      },
      "schema_edzUyaArJc": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_rAHBDqoiDM": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_YjvLCYhdNN": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_rAHBDqoiDM"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_jJWWNQlcQH": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_MNhQcMZbmd": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_eTfcwozKgf": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_lLLPkYOuTP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hQJXuUrexQ": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/additionalidentifier.json"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/contactdetails.json"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lLLPkYOuTP"
          }
        }
      },
      "schema_EZrpheQGAS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QKKnvHlYGA": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "example": "AWWPA7645M"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/additionalidentifier.json"
            }
          },
          "name": {
            "type": "string",
            "example": "ABC Bank"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/contactdetails.json"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EZrpheQGAS"
          }
        }
      },
      "schema_IZKouAfJfo": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_EEwBLoGLsi": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_YmQzUnOOBm": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_isbbdNLOCO": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YmQzUnOOBm"
          }
        }
      },
      "schema_yvDhbYJkwI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PfSglCBEbJ": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yvDhbYJkwI"
          }
        }
      },
      "schema_AzbKEtbFqR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZmoQkeyvIr": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AzbKEtbFqR"
          }
        }
      },
      "schema_twUgrRBRrf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QKyuyqnvNF": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_twUgrRBRrf"
          }
        }
      },
      "schema_WXSLhoIgII": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_isbbdNLOCO"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_PfSglCBEbJ"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_ZmoQkeyvIr"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_QKyuyqnvNF"
          }
        }
      },
      "schema_kJMzfOwTnI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dGMdKQwCMo": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_IZKouAfJfo"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_EEwBLoGLsi"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_WXSLhoIgII"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kJMzfOwTnI"
          }
        }
      },
      "schema_kvxvGPLzzb": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_jboMnfTOap": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YLeYgCqZCe": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_kvxvGPLzzb"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jboMnfTOap"
          }
        }
      },
      "schema_wDCStrYNnU": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_vwaFrLPNri": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fUgobmWKux": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_wDCStrYNnU"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vwaFrLPNri"
          }
        }
      },
      "schema_GpqbuBlNSx": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_YLeYgCqZCe"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_fUgobmWKux"
          }
        }
      },
      "schema_BrVQjUIcJs": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_CkielIlgqI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bQBOnRtAwf": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_BrVQjUIcJs"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CkielIlgqI"
          }
        }
      },
      "schema_ZyFapKUflt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QISHGDJdfB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DUnFPMLijM": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_ZyFapKUflt"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QISHGDJdfB"
          }
        }
      },
      "schema_tsqBMuHwBy": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_bQBOnRtAwf"
          },
          "method": {
            "$ref": "#/components/schemas/schema_DUnFPMLijM"
          }
        }
      },
      "schema_UmMAvHeMrG": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "loanId",
          "requestId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "type",
          "borrower",
          "lender",
          "collaterals",
          "guarantors",
          "applicants",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_MNhQcMZbmd"
          },
          "response": {
            "$ref": "#/components/schemas/schema_eTfcwozKgf"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CASHFLOW",
              "PERSONAL",
              "HOME",
              "VEHICLE",
              "BUSINESS"
            ]
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_hQJXuUrexQ"
          },
          "lender": {
            "$ref": "#/components/schemas/schema_QKKnvHlYGA"
          },
          "collaterals": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/collateral.json"
            }
          },
          "guarantors": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/guarantor.json"
            }
          },
          "applicants": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/applicant.json"
            }
          },
          "terms": {
            "$ref": "#/components/schemas/schema_dGMdKQwCMo"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_GpqbuBlNSx"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_tsqBMuHwBy"
          }
        }
      },
      "schema_ROGAHHhEnO": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_wuNsFdUgEu": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_cfCqCcRwOf": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_wuNsFdUgEu"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_QwAAhvpRhD": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_cdFtfMTTVG": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_bOIneZbTsA": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_mrRhftVoWS": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "accountStatement"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_cdFtfMTTVG"
          },
          "response": {
            "$ref": "#/components/schemas/schema_bOIneZbTsA"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/transaction.json"
            }
          }
        }
      },
      "schema_yLKqNNLePY": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_uGnEhDSzKp": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_EqXtMJavgY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MeNYKLFhDT": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/additionalidentifier.json"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/contactdetails.json"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EqXtMJavgY"
          }
        }
      },
      "schema_UqKdkXpLIG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IymrdSCMpx": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UqKdkXpLIG"
          }
        }
      },
      "schema_oxjmSvxato": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LBuDThAnNX": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/additionalidentifier.json"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_IymrdSCMpx"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/party.json"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oxjmSvxato"
          }
        }
      },
      "schema_BmziQjYNqD": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "borrower"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_uGnEhDSzKp"
          },
          "requestId": {
            "type": "string"
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_MeNYKLFhDT"
          },
          "collateral": {
            "$ref": "#/components/schemas/schema_LBuDThAnNX"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_IDUvtlnlgW": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_tgMXKUMUPB": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_AIDbyfeKjM": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "loans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_tgMXKUMUPB"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "type": "object",
            "required": [
              "error"
            ],
            "properties": {
              "error": {
                "type": "string",
                "default": "",
                "example": "0"
              }
            }
          },
          "loans": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "loanId",
                "terms"
              ],
              "properties": {
                "loanId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "terms": {
                  "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/loanterms.json"
                }
              }
            }
          }
        }
      },
      "schema_AvJKnwNpoN": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_sdtwCDbUPy": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_hatFsMvozw": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_sdtwCDbUPy"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_nOkNQazKrh": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_rVfRAPRpzZ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_YlmWrLsLaq": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_jzeMSGvmyl": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_rVfRAPRpzZ"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_YlmWrLsLaq"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/paymentplan.json"
            }
          }
        }
      },
      "schema_PithgBwNAW": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_mtFahnBahx": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_tCTzGebiuq": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_KjunMzchPY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JMAYYDLOVf": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_tCTzGebiuq"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KjunMzchPY"
          }
        }
      },
      "schema_umsLuiPbSi": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_mtFahnBahx"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_JMAYYDLOVf"
          }
        }
      },
      "schema_kzIcGHUlEC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_cAlXCYYtsf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_kYkMlpRXOR": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_rOORtLeaLR": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_gkfdMEkxEB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OeshbQuNzA": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_rOORtLeaLR"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_gkfdMEkxEB"
          }
        }
      },
      "schema_mWsiIkWEzW": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_cAlXCYYtsf"
          },
          "response": {
            "$ref": "#/components/schemas/schema_kYkMlpRXOR"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_OeshbQuNzA"
          }
        }
      },
      "schema_GoEpOZvobs": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_fQGoicBKSk": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ziAbiAMuJr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_fQGoicBKSk"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_hQTpEOpYqY": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_WsVrUsYRWO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_tIkHUIbFiv": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_PGxyBogtxw": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "accountList"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_WsVrUsYRWO"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_tIkHUIbFiv"
          },
          "accountList": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/accountdetails.json"
            }
          }
        }
      },
      "schema_zrznmTHfWS": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_NrZdEgNQec": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_wADFhuvBkH": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_HzmioGCrDY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_WjqLsrdJXX": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_wADFhuvBkH"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HzmioGCrDY"
          }
        }
      },
      "schema_bJNvdnkNUa": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_NrZdEgNQec"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/schema_WjqLsrdJXX"
          }
        }
      },
      "schema_QIWILPhYpu": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_lYvVUCOETK": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ITQOwMoVGg": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ylrFssfdPT": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_bOzZbfGbOP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bbyxoFhHgJ": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_ylrFssfdPT"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bOzZbfGbOP"
          }
        }
      },
      "schema_xVHwcuiCYf": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_lYvVUCOETK"
          },
          "response": {
            "$ref": "#/components/schemas/schema_ITQOwMoVGg"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "account": {
            "$ref": "#/components/schemas/schema_bbyxoFhHgJ"
          }
        }
      },
      "schema_qgLMrsxEIf": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_fxPEnKllyo": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_zXWzLAOhEZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_eeTQogoYuo": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zXWzLAOhEZ"
          }
        }
      },
      "schema_almgTzvYfV": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_fxPEnKllyo"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_eeTQogoYuo"
          }
        }
      },
      "schema_ODwmVMqxcP": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_qJpQPHWJZw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_cLDeCTyKst": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_bQXJcNDIkL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rcGFkMhPTn": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bQXJcNDIkL"
          }
        }
      },
      "schema_YpCOsZVttY": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_qJpQPHWJZw"
          },
          "response": {
            "$ref": "#/components/schemas/schema_cLDeCTyKst"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_rcGFkMhPTn"
          }
        }
      },
      "schema_FWBKreREWy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_HsFWNSvbcO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_UIpnLZqEqr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_HsFWNSvbcO"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "createdDate",
                "loanApplicationId",
                "type",
                "borrower",
                "collaterals",
                "guarantors",
                "applicants",
                "terms"
              ],
              "properties": {
                "createdDate": {
                  "type": "string"
                },
                "loanApplicationId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CASHFLOW",
                    "HOME",
                    "VEHICLE",
                    "PERSONAL",
                    "BUSINESS"
                  ]
                },
                "borrower": {
                  "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/borrower.json"
                },
                "collaterals": {
                  "type": "array",
                  "items": {
                    "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/collateral.json"
                  }
                },
                "guarantors": {
                  "type": "array",
                  "items": {
                    "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/guarantor.json"
                  }
                },
                "applicants": {
                  "type": "array",
                  "items": {
                    "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/applicant.json"
                  }
                },
                "terms": {
                  "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/loanterms.json"
                }
              }
            }
          }
        }
      },
      "schema_SMTAoXZrRu": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_vtFeBSRLOh": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_LbasKGRcKG": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_vtFeBSRLOh"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          }
        }
      },
      "schema_UhNIobkysa": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_lcFiOcZtIZ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_PuErZXjXoO": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_zLnRmMdDpZ": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_lcFiOcZtIZ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_PuErZXjXoO"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/loanOffer.json"
            }
          }
        }
      },
      "schema_BzJjjxssZl": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_inJSLYIoUl": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_CRolCMSXeg": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_UyjMTvZSeV": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_ffBgyeTDBa": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RsvWQQTfuX": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ffBgyeTDBa"
          }
        }
      },
      "schema_ebugqrFfmi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YexACdzrcx": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ebugqrFfmi"
          }
        }
      },
      "schema_yUVWPcMfrn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rbCpvWolvu": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yUVWPcMfrn"
          }
        }
      },
      "schema_cwzbjAoMZN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LIzwUzPgsV": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cwzbjAoMZN"
          }
        }
      },
      "schema_BDMDzMqGmR": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_RsvWQQTfuX"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_YexACdzrcx"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_rbCpvWolvu"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_LIzwUzPgsV"
          }
        }
      },
      "schema_hZqPiRyqNZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AlqOzWFmHK": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_CRolCMSXeg"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_UyjMTvZSeV"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_BDMDzMqGmR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hZqPiRyqNZ"
          }
        }
      },
      "schema_zQMcTFNuoB": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/paymentplan.json"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/accountdetails.json"
            }
          }
        }
      },
      "schema_vBWcamAjTb": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/paymentplan.json"
            }
          }
        }
      },
      "schema_iuYHtMxAqi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RaZXfHsFpu": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_AlqOzWFmHK"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_zQMcTFNuoB"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_vBWcamAjTb"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/document.json"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iuYHtMxAqi"
          }
        }
      },
      "schema_oYXivHkJnh": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "offer"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_inJSLYIoUl"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "offer": {
            "$ref": "#/components/schemas/schema_RaZXfHsFpu"
          }
        }
      },
      "schema_WCpwNgvBBX": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_QeeLiLlpXA": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_nHoopDlViC": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_bixVUWHayR": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_QeeLiLlpXA"
          },
          "response": {
            "$ref": "#/components/schemas/schema_nHoopDlViC"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "OFFER_ACCEPTED",
              "PROCESSING",
              "OFFERED",
              "GRANTED",
              "REJECTED"
            ]
          }
        }
      },
      "schema_OsZJnDYqfU": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_WSiEIEBJaR": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_xrcKGjcIyn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OsRaXCFWEQ": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xrcKGjcIyn"
          }
        }
      },
      "schema_IvFQSltsLl": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_WSiEIEBJaR"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_OsRaXCFWEQ"
          }
        }
      },
      "schema_IBfqmpvXRR": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_qRAzHHWOiD": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HiSibUGeCO": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_aASQQcqdwC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aLPtpaKoGx": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aASQQcqdwC"
          }
        }
      },
      "schema_SWTUaDsymF": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_qRAzHHWOiD"
          },
          "response": {
            "$ref": "#/components/schemas/schema_HiSibUGeCO"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_aLPtpaKoGx"
          }
        }
      },
      "schema_eADgMStNAt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_kEWtgWFyIe": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_lMXjVoGVMV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZtirXxpjlK": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lMXjVoGVMV"
          }
        }
      },
      "schema_bDSHbRvbjL": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_kEWtgWFyIe"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_ZtirXxpjlK"
          }
        }
      },
      "schema_kiQCuoumfZ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_wfNrbwTUYC": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_VhqppErtfX": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_LRnYeCcDvM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_iAWOidWrAu": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_LRnYeCcDvM"
          }
        }
      },
      "schema_sYuQwUmGuH": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_wfNrbwTUYC"
          },
          "response": {
            "$ref": "#/components/schemas/schema_VhqppErtfX"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_iAWOidWrAu"
          }
        }
      },
      "schema_wMIthYSXzq": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_UWnWefmAIa": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_CagUcOQPLe": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oVFMTDDdpV": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CagUcOQPLe"
          }
        }
      },
      "schema_clFjuTeAWc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xGqbPXYHML": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_oVFMTDDdpV"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_clFjuTeAWc"
          }
        }
      },
      "schema_vacCVMjpSV": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_UWnWefmAIa"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_xGqbPXYHML"
          }
        }
      },
      "schema_EEvkwtDAHd": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_oNpAiYwGRa": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_myxfvIxUmg": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_zzNZFXMieu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EUrllOqsmI": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zzNZFXMieu"
          }
        }
      },
      "schema_GfslRQnEVd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KIbxaJdABj": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_EUrllOqsmI"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GfslRQnEVd"
          }
        }
      },
      "schema_AtKKOaYRiI": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_oNpAiYwGRa"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_myxfvIxUmg"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_KIbxaJdABj"
          }
        }
      },
      "schema_QPZrsgLabD": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_GzPHdCHDvV": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_PNnJlZWbpp": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VIfzFTyQIA": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PNnJlZWbpp"
          }
        }
      },
      "schema_liEQyWpOvW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qeGsawTyES": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_VIfzFTyQIA"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_liEQyWpOvW"
          }
        }
      },
      "schema_vTrxWiiRFg": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_GzPHdCHDvV"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_qeGsawTyES"
          }
        }
      },
      "schema_kWOoNJooKv": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_fcXnwMKenZ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_RTQTCgFiMG": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_bvbzvCaqDF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IjNYllqsjK": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bvbzvCaqDF"
          }
        }
      },
      "schema_nyFQlsWqKu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_expwVeICvI": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_IjNYllqsjK"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_nyFQlsWqKu"
          }
        }
      },
      "schema_VzMhTdBJNC": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_fcXnwMKenZ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_RTQTCgFiMG"
          },
          "requestId": {
            "type": "string"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_expwVeICvI"
          }
        }
      },
      "schema_MjfkvZLaVu": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_hdtaGogQZf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_WDWunvgtKI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bwDgGymyHS": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WDWunvgtKI"
          }
        }
      },
      "schema_JqSGkGwQDS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KMxMRaPTYt": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_bwDgGymyHS"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JqSGkGwQDS"
          }
        }
      },
      "schema_PmgwTJiAWP": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationIds",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_hdtaGogQZf"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          },
          "requestId": {
            "type": "string",
            "example": "g8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_KMxMRaPTYt"
          }
        }
      },
      "schema_qsFCRVVCOP": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_tQXbvDsLmc": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_IejGzAEoLt": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_nEsCulwzSd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SukTbCgNVN": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_nEsCulwzSd"
          }
        }
      },
      "schema_bfEvTFlaSD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZmFlbYkELK": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_SukTbCgNVN"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bfEvTFlaSD"
          }
        }
      },
      "schema_cWfihwfjDd": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_tQXbvDsLmc"
          },
          "response": {
            "$ref": "#/components/schemas/schema_IejGzAEoLt"
          },
          "requestId": {
            "type": "string",
            "example": "i8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_ZmFlbYkELK"
          }
        }
      },
      "schema_BvkvSYYUxy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_KwaIAqPWus": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_AnjfBHyMKa": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ypkGZWeChl": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AnjfBHyMKa"
          }
        }
      },
      "schema_xzotFmsfYN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_yynyHSsTTA": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_ypkGZWeChl"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xzotFmsfYN"
          }
        }
      },
      "schema_WVpGKxmfJs": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_KwaIAqPWus"
          },
          "requestId": {
            "type": "string",
            "example": "m8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_yynyHSsTTA"
          }
        }
      },
      "schema_MRVQMSXvVy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_wpOfHQUghT": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_bwaaSlJWqE": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_wdApCAgWzH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_eNAMGmqhMX": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wdApCAgWzH"
          }
        }
      },
      "schema_xeObeZmkqP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bGlHvWPzyn": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_eNAMGmqhMX"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xeObeZmkqP"
          }
        }
      },
      "schema_DzICgQRZqZ": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_wpOfHQUghT"
          },
          "response": {
            "$ref": "#/components/schemas/schema_bwaaSlJWqE"
          },
          "requestId": {
            "type": "string",
            "example": "p8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_bGlHvWPzyn"
          }
        }
      },
      "schema_rLLzemezxz": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_GOZMOkyjnQ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_CvSncAevIx": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_GOZMOkyjnQ"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_pRHGvxFFqJ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EnrKoxSTBc": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HPuoHRmsyi": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_XiMOVCCLYW": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EnrKoxSTBc"
          },
          "response": {
            "$ref": "#/components/schemas/schema_HPuoHRmsyi"
          },
          "requestId": {
            "type": "string"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/paymentplan.json"
            }
          }
        }
      },
      "schema_tDnxLZHLwC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CNUdPeVXCk": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_CwQLOmoNVB": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_EvMQukmbfH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BxNWkdtgUs": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_CwQLOmoNVB"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EvMQukmbfH"
          }
        }
      },
      "schema_LjrYCnzxdy": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationId",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CNUdPeVXCk"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_BxNWkdtgUs"
          }
        }
      },
      "schema_RrNvamiuQx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_tzACpJwoiY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_jBmlzktivZ": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_YvabyMVcMS": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_jBiwhEuCXz": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NuAyJNlMmr": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_YvabyMVcMS"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jBiwhEuCXz"
          }
        }
      },
      "schema_akraTarazU": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_tzACpJwoiY"
          },
          "response": {
            "$ref": "#/components/schemas/schema_jBmlzktivZ"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_NuAyJNlMmr"
          }
        }
      },
      "schema_eaemxHomai": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_HJGHRPTOqy": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_csGXiWdkPg": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_AeXVHceDqr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SmyAZsuYix": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_csGXiWdkPg"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AeXVHceDqr"
          }
        }
      },
      "schema_rPEtLjUuEc": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_HJGHRPTOqy"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_SmyAZsuYix"
          }
        }
      },
      "schema_dcVnVLBTQP": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ARAsGCchGl": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_aNNYxRusuL": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_AGLozqkrIT": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_sOXZjdkBaI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tfWYyDuUie": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_AGLozqkrIT"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sOXZjdkBaI"
          }
        }
      },
      "schema_AyXAaNZeMy": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ARAsGCchGl"
          },
          "response": {
            "$ref": "#/components/schemas/schema_aNNYxRusuL"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_tfWYyDuUie"
          }
        }
      },
      "schema_mWKNhSzKPp": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ehTbSLvRTI": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TQeOWmTncf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QAfCGNDGHF": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TQeOWmTncf"
          }
        }
      },
      "schema_WGAecVqcwo": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ehTbSLvRTI"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_QAfCGNDGHF"
          }
        }
      },
      "schema_tDrPISwdvG": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_stflEASJKG": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_MDpBvYEJLB": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_AIetFOwHpX": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_esGzYVQQEV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rnOfdRYyjG": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_AIetFOwHpX"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_esGzYVQQEV"
          }
        }
      },
      "schema_MHeJpQMXdF": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_stflEASJKG"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_MDpBvYEJLB"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_rnOfdRYyjG"
          }
        }
      },
      "schema_llIMrzBQqb": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_OBAfttAdan": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_SuWQezuPJv": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_hKvlxEfqFs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VLAJDRtMqK": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_SuWQezuPJv"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hKvlxEfqFs"
          }
        }
      },
      "schema_uPxLeJwLCR": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_OBAfttAdan"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_VLAJDRtMqK"
          }
        }
      },
      "schema_QanyHMVRyj": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_wrOVXpLfMs": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_tLUYDPZaGx": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_nBNxHCneBf": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_lRJtpkPcLk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BEpMqsoBOx": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_nBNxHCneBf"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lRJtpkPcLk"
          }
        }
      },
      "schema_lwaGrMNdrM": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_wrOVXpLfMs"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_tLUYDPZaGx"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_BEpMqsoBOx"
          }
        }
      },
      "schema_nWWaBFibDm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_DUpsjrRNls": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_NQNJhXuUFr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "errorCode"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_DUpsjrRNls"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "errorCode": {
            "type": "string",
            "example": "SDP1001"
          }
        }
      },
      "schema_SWXRyRHpAr": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_oNyuqvITLp": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_fWdWSOhdXk": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "lookupType"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_oNyuqvITLp"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "lookupType": {
            "type": "string",
            "example": "LOAN_STATUS"
          }
        }
      },
      "schema_wShOeZaCxD": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      }
    }
  }
}