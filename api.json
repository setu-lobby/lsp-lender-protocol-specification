{
  "openapi": "3.0.0",
  "info": {
    "title": "Grant Loan API",
    "description": "API to create actual loan in lender's system, after monitoring consent",
    "version": "3.1"
  },
  "paths": {
    "/v3/loan/grantLoanRequest": {
      "post": {
        "description": "Invokes by LSP to Grant Loan",
        "requestBody": {
          "description": "Request to lender to Grant Loan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_FeJEByXlGz"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Grant Loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_VOgJvjcFQj"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/grantLoanResponse": {
      "post": {
        "description": "Invoked by Lender to informing status of loan",
        "requestBody": {
          "description": "Response to LSP with loan statu",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_CjXRwydRlg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_AEQbqMKoCL"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/LoanSummaryRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan summary",
        "requestBody": {
          "description": "Request to lender for loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_tQGetrAkYY"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to  Loan summary Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_EQQwsqPHkr"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanSummaryResponse": {
      "post": {
        "description": "Invoked by Lender to informing loan summary request",
        "requestBody": {
          "description": "Response to LSP with loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_vcYrsmhiqj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_KyKGXktrGz"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanRequest": {
      "post": {
        "description": "Invokes by LSP requesting details of a loan",
        "requestBody": {
          "description": "Request to lender for loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_LYduGVRwyW"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to get loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_AuISKwvaWO"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan details",
        "requestBody": {
          "description": "Response to LSP with loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_BMLLZJfZub"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_uUkWKcSWfm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan statement",
        "requestBody": {
          "description": "Request to lender for loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_DOGkIuzfBo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan statement Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_nVTNeniavv"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan statement",
        "requestBody": {
          "description": "Response to LSP with loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_hhiGhZrlzG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_mzoTAZCRtn"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansRequest": {
      "post": {
        "description": "Invokes by LSP requesting list of the loan provisioned",
        "requestBody": {
          "description": "Request to lender for list of the loan provisioned",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ciCBDLbGZM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan list Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_CBJVyaerZO"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansResponse": {
      "post": {
        "description": "Invoked by Lender to inform the list of loans",
        "requestBody": {
          "description": "Response to LSP with the list of loans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_wUwELDPYBi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_giGZDgJrgA"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get disbursement Plans",
        "requestBody": {
          "description": "Request to lender to get disbursement Plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_cJqXkDrNLJ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_exLKlQczKA"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansResponse": {
      "post": {
        "description": "Invoked by lender to return disbursement Plans",
        "requestBody": {
          "description": "Returns array of disbursement Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_oKyNkVXUlr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_EiiIxabwbp"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanRequest": {
      "post": {
        "description": "Invoked by LSP to set disbursement plan",
        "requestBody": {
          "description": "Set Choosen Disbursement Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ujruZnatei"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_VSHZFFopAw"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenDisbursement status",
        "requestBody": {
          "description": "Send Disbursement Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_skNFTfdxQv"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_SGrhGCFwDf"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsRequest": {
      "post": {
        "description": "Invoked by LSP to get array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_qWkasgMUwz"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_sOBoGBlzFK"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsResponse": {
      "post": {
        "description": "Invoked by Lender to return array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_XxEXSfBBZe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_fucyWXlJMl"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountRequest": {
      "post": {
        "description": "Invoked by LSP to set the disbursement Account",
        "requestBody": {
          "description": "set Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_GUdoyGeKMQ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TAtQBeTejG"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountResponse": {
      "post": {
        "description": "Invoked by Lender to inform current status of chosenAccount",
        "requestBody": {
          "description": "status of chosen account for disbursement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_OkhBMvNuCu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_JlQmCJbrpD"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/triggerDisbursementRequest": {
      "post": {
        "description": "Invoked by LSP to trigger Disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_QxktzxFxOG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_sQkNhFqdiF"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/TriggerDisbursementResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_QOglxOJQEe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_kZNCZJhFuE"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to generate offer after consent for data is ready",
        "requestBody": {
          "description": "Request to generate offer for a set of loan application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_vLPppFxJOv"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_pKNZhCKvog"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersResponse": {
      "post": {
        "description": "Invoked by lender informing borrower about offers",
        "requestBody": {
          "description": "Returns the tentaive loan offer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_SYkeHkePkN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_NgIqUghUst"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to set chosen offer",
        "requestBody": {
          "description": "Informing lender about offer chosen by borrower",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_UfSoXJMelt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_jXYLGvLtCk"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferResponse": {
      "post": {
        "description": "Invoked by lender & asynchronous resposne to initiate AcceptOfferRequest API",
        "requestBody": {
          "description": "Response to setOfferRequest with loan Application status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_hXOqCHMqKP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_dsgxvZuUGF"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeRequest": {
      "post": {
        "description": "Invoked by LSP to raise dispute",
        "requestBody": {
          "description": "Request to raise dispute",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_cqEVPTmLVk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ZlWvDDEZbD"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeResponse": {
      "post": {
        "description": "Invoked by lender once Dispute is raised",
        "requestBody": {
          "description": "Returns the dispute details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_MTRjtlMjed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_FfMEgozmQl"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch dispute status",
        "requestBody": {
          "description": "Request to fetch dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_igpggfjAYq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MEcWUHYSXr"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusResponse": {
      "post": {
        "description": "Invoked by lender informing LSP about status of dispute",
        "requestBody": {
          "description": "Returns the dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_FCdhxYggBL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_bDoBcdEgbp"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to Trigger loan acceptance",
        "requestBody": {
          "description": "Trigger Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_QEDBnvOUGN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_xxMxHZgcAe"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to trigger loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance with otpsessionKey",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_eJcDfoSVlm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_qOSTrwMKhM"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to verify loan acceptance OTP",
        "requestBody": {
          "description": "Verify Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_nAqWnRftxZ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_qUOeDLGlMH"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to verify loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance Verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_KzeUGGbQPJ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_LAGLrlcmYx"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleRequest": {
      "post": {
        "description": "Create consent handle with Account Aggregator",
        "requestBody": {
          "description": "Request by LSP to lender to get consent handle with Account Aggregator",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ewirdDmwCS"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement by Lender to LSP for Consent Handle Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vXoJrqGVtg"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleResponse": {
      "post": {
        "description": "Invoked by lender to send consent handle created in Account Aggregator",
        "requestBody": {
          "description": "Consent Handle Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_yRaGlraMDd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent Hanlde Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_eLueRHxSay"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to get consent handle status from lender",
        "requestBody": {
          "description": "Consent Status Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_XZdbIypFwp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_euOIgoKOQU"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusResponse": {
      "post": {
        "description": "Invoked by lender to send consent status to LSP",
        "requestBody": {
          "description": "Consent Status Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_pXUCNKrCPi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_jufigCwvul"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get list of repayment plans",
        "requestBody": {
          "description": "Request to lender to get repayment plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rMwLuiLNEh"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_gdHKYazuCM"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansResponse": {
      "post": {
        "description": "Invoked by lender to return repayment Plans",
        "requestBody": {
          "description": "Returns array of repayment Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_vIsKFDduQb"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_uqDMNYOPDt"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanRequest": {
      "post": {
        "description": "Invoked by LSP requesting lender to set repayment plan",
        "requestBody": {
          "description": "Set Choosen Repayment Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_EAaEjjHQJu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_hPeAsPECbu"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenRepayment status",
        "requestBody": {
          "description": "Set Repayment plan Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_DpMBQhykrD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_zsaRSGNlEm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch status of set repayment plan ",
        "requestBody": {
          "description": "Get status of set repayment plan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ZltXeFeHWn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_dGLbySJRMm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of set Repayment plan",
        "requestBody": {
          "description": "Set Repayment Plan status response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_yuDdVAffNO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_QXAhZVZDsH"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentRequest": {
      "post": {
        "description": "Invoked by LSP to trigger repayment",
        "requestBody": {
          "description": "Request to lender to trigger a repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_NNOvtexyCz"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tqhwlaijYx"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentResponse": {
      "post": {
        "description": "Invoked by Lender to send lender's payment page url",
        "requestBody": {
          "description": "Response to trigger repayment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_IqLJUQktqg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tMhmZzqvUy"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch repayment status",
        "requestBody": {
          "description": "Request to lender to check status of repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_YSBJwufwzx"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_lsESuPTZeV"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusResponse": {
      "post": {
        "description": "Invoked by Lender to return repayment status",
        "requestBody": {
          "description": "Response to trigger repayment status request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_FGaWmbRXeG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vdOSkpMyJb"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getErrorCodesRequest": {
      "post": {
        "description": "search error code",
        "requestBody": {
          "description": "Request to fetch error code",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_OztZkKCogA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_LtwHAgFPXu"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getLookupCodesRequest": {
      "post": {
        "description": "Get possible values of ENUM fields by lookupType",
        "requestBody": {
          "description": "Request to fetch ENUM for a lookupTypes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_tiJGbfnzAr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_wdWQSbChML"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "schema_uxgYMJnKUg": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_FeJEByXlGz": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_uxgYMJnKUg"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_VOgJvjcFQj": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_BUNiYIyUky": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qnmOmSxKFU": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_HkxuYaojOg": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_CzHSepwJUZ": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_bKwKeZjpit": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_pgMpHFTnlo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_UHIuOKlqjd": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pgMpHFTnlo"
          }
        }
      },
      "schema_psbOhKAdtf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ditPjMVACg": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_psbOhKAdtf"
          }
        }
      },
      "schema_KkoQSOhDlY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_UJdHfCTRmo": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KkoQSOhDlY"
          }
        }
      },
      "schema_ULpvULTIzh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_joGdmbULJg": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ULpvULTIzh"
          }
        }
      },
      "schema_ydGkswKWAj": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_UHIuOKlqjd"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_ditPjMVACg"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_UJdHfCTRmo"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_joGdmbULJg"
          }
        }
      },
      "schema_CMRZchDRZI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GpgVfYXjzQ": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_HkxuYaojOg"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_CzHSepwJUZ"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_bKwKeZjpit"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_ydGkswKWAj"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CMRZchDRZI"
          }
        }
      },
      "schema_EPVMDxoGfl": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_yPzdITtxkF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jsHODovUil": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_EPVMDxoGfl"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yPzdITtxkF"
          }
        }
      },
      "schema_wudZCTRGWV": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_OjtopVLoqs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JkNDsvaOFT": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_wudZCTRGWV"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OjtopVLoqs"
          }
        }
      },
      "schema_hxsycIcJly": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_jsHODovUil"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_JkNDsvaOFT"
          }
        }
      },
      "schema_CLjQgSgCgP": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_kRWLOrQfmj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gyzEicEUzk": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_CLjQgSgCgP"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kRWLOrQfmj"
          }
        }
      },
      "schema_JvhQPstydf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NXPNyDJgUY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AoTZdeRnXR": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_JvhQPstydf"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NXPNyDJgUY"
          }
        }
      },
      "schema_lCdrMMoyRs": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_gyzEicEUzk"
          },
          "method": {
            "$ref": "#/components/schemas/schema_AoTZdeRnXR"
          }
        }
      },
      "schema_rKqyblMLsw": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kLEAtcqwWV": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_rKqyblMLsw"
          }
        }
      },
      "schema_zHCyKHcDyQ": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_asjiCabyMF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DwTmilvSjl": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_zHCyKHcDyQ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_asjiCabyMF"
          }
        }
      },
      "schema_CjXRwydRlg": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "terms",
          "disbursement",
          "repayment",
          "loanStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_BUNiYIyUky"
          },
          "response": {
            "$ref": "#/components/schemas/schema_qnmOmSxKFU"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_GpgVfYXjzQ"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_hxsycIcJly"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_lCdrMMoyRs"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "REJECTED",
              "DEFAULTED",
              "COMPLETED",
              "ACTION_REQUIRED"
            ]
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_kLEAtcqwWV"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_DwTmilvSjl"
            }
          }
        }
      },
      "schema_AEQbqMKoCL": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_gCRHcuPAYm": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_tQGetrAkYY": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_gCRHcuPAYm"
          },
          "requestId": {
            "type": "string",
            "example": "bvcc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_EQQwsqPHkr": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_jNXYLrlgJY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_NUkyDBWjlt": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_vcYrsmhiqj": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "summary"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_jNXYLrlgJY"
          },
          "response": {
            "$ref": "#/components/schemas/schema_NUkyDBWjlt"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "required": [
              "nextRepayment",
              "currentRepayment",
              "principalPaid",
              "interestPaid",
              "penaltyPaid",
              "principalPending",
              "interestPending",
              "amountDisbursed",
              "amountRepaid",
              "tenure",
              "description"
            ],
            "properties": {
              "nextRepayment": {
                "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/payment.json"
              },
              "currentRepayment": {
                "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/payment.json"
              },
              "principalPaid": {
                "type": "string"
              },
              "interestPaid": {
                "type": "string"
              },
              "penaltyPaid": {
                "type": "string"
              },
              "principalPending": {
                "type": "string"
              },
              "interestPending": {
                "type": "string"
              },
              "amountDisbursed": {
                "type": "string"
              },
              "amountRepaid": {
                "type": "string"
              },
              "tenure": {
                "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/loantenure.json"
              },
              "description": {
                "type": "string",
                "example": "short description for the loan"
              }
            }
          }
        }
      },
      "schema_KyKGXktrGz": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_MizVLPiird": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_LYduGVRwyW": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_MizVLPiird"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_AuISKwvaWO": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ltDteNiWEF": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_vvaJrSwSMi": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ggohMiviKM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pWoTKQadpz": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ggohMiviKM"
          }
        }
      },
      "schema_GEWYpLhpjU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ShzlQJNJbJ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GEWYpLhpjU"
          }
        }
      },
      "schema_bDbVpSVOdY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OwLKBpRoxC": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_ShzlQJNJbJ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bDbVpSVOdY"
          }
        }
      },
      "schema_PwQCToIdEy": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_cZxQPklvNN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vMgWptdJtx": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_pWoTKQadpz"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_OwLKBpRoxC"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_PwQCToIdEy"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cZxQPklvNN"
          }
        }
      },
      "schema_HictavlvgD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EESdMpGdUc": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HictavlvgD"
          }
        }
      },
      "schema_IpRlXsighn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jTsQWoPVVr": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_IpRlXsighn"
          }
        }
      },
      "schema_TtBKQIOHue": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_eJZJZAYHgn": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_jTsQWoPVVr"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TtBKQIOHue"
          }
        }
      },
      "schema_KuyzDOzlgc": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_NMObnGVwpT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pJAhQvDiTz": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "example": "AWWPA7645M"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_EESdMpGdUc"
            }
          },
          "name": {
            "type": "string",
            "example": "ABC Bank"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_eJZJZAYHgn"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KuyzDOzlgc"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NMObnGVwpT"
          }
        }
      },
      "schema_fgnsJcsZmO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FhWiOidLXI": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fgnsJcsZmO"
          }
        }
      },
      "schema_CctCpjdLNT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JlHXiUgSSo": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CctCpjdLNT"
          }
        }
      },
      "schema_KArnOmDHKV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BANtdtlpAq": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KArnOmDHKV"
          }
        }
      },
      "schema_ZZsKoOAMbA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SCrAkUdadu": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ZZsKoOAMbA"
          }
        }
      },
      "schema_aqapawqVNr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VBepaDYBDq": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_SCrAkUdadu"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aqapawqVNr"
          }
        }
      },
      "schema_bafZheAlKG": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_pTAoTRNXUw": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ORejyxtaLg": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_BANtdtlpAq"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_VBepaDYBDq"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_bafZheAlKG"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pTAoTRNXUw"
          }
        }
      },
      "schema_JVoynwIHns": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_UUWWaxaWsJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xPaudYRPDx": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_FhWiOidLXI"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_JlHXiUgSSo"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ORejyxtaLg"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_JVoynwIHns"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UUWWaxaWsJ"
          }
        }
      },
      "schema_rQVILVXcOe": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_iCQQFXDpjS": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_rQVILVXcOe"
          }
        }
      },
      "schema_jpTEJxhkSG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zInTQGPsJe": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jpTEJxhkSG"
          }
        }
      },
      "schema_TnkrRUWUSX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_yxvxeDfuQr": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_zInTQGPsJe"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TnkrRUWUSX"
          }
        }
      },
      "schema_eRSIdlYQfD": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_VtTukgCAEZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zVPtgbuehs": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_iCQQFXDpjS"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "relationshipWithBorrower": {
            "type": "string",
            "example": "Father"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_yxvxeDfuQr"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_eRSIdlYQfD"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VtTukgCAEZ"
          }
        }
      },
      "schema_lqeUkSdjEk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_mUACnKKihJ": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lqeUkSdjEk"
          }
        }
      },
      "schema_tpGWAZBKOU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NhDCZNfCMZ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tpGWAZBKOU"
          }
        }
      },
      "schema_crUonVDuyk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MEojzoszRd": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_NhDCZNfCMZ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_crUonVDuyk"
          }
        }
      },
      "schema_KKvLPhuLbV": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_OVOlOhWCXz": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GZTHqVHAdW": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_mUACnKKihJ"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_MEojzoszRd"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KKvLPhuLbV"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OVOlOhWCXz"
          }
        }
      },
      "schema_gtqRfVloag": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_hapjkNMutW": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_THyHDOccwi": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_pJHTItMFGR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FiDAAfKzwg": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pJHTItMFGR"
          }
        }
      },
      "schema_MeKSpKnASi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BflKqaXPER": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MeKSpKnASi"
          }
        }
      },
      "schema_YPIyHaDfIu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BoFvgnzmOy": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YPIyHaDfIu"
          }
        }
      },
      "schema_zsIwqXunzl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LKCVeicqJk": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zsIwqXunzl"
          }
        }
      },
      "schema_RkbRlsqfHC": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_FiDAAfKzwg"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_BflKqaXPER"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_BoFvgnzmOy"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_LKCVeicqJk"
          }
        }
      },
      "schema_kSiwFqWUdq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tPRZmMezto": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_gtqRfVloag"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_hapjkNMutW"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_THyHDOccwi"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_RkbRlsqfHC"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kSiwFqWUdq"
          }
        }
      },
      "schema_eHLiefJEzn": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_fLmySxScWK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_czAPDPtZaD": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_eHLiefJEzn"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fLmySxScWK"
          }
        }
      },
      "schema_QynOgwsGRI": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_ruTVKLzENb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EJSAFhFshJ": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_QynOgwsGRI"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ruTVKLzENb"
          }
        }
      },
      "schema_WSSaxdNYfK": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_czAPDPtZaD"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_EJSAFhFshJ"
          }
        }
      },
      "schema_xHUvxEDEMq": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_pqKclwveLm": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_lFScmKWBLD": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_xHUvxEDEMq"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pqKclwveLm"
          }
        }
      },
      "schema_DYWRZPcyZh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DdaOmJRkZS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_seTcvBrwSA": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_DYWRZPcyZh"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DdaOmJRkZS"
          }
        }
      },
      "schema_ESxuMUVqaY": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_lFScmKWBLD"
          },
          "method": {
            "$ref": "#/components/schemas/schema_seTcvBrwSA"
          }
        }
      },
      "schema_BMLLZJfZub": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "loanId",
          "requestId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "type",
          "borrower",
          "lender",
          "collaterals",
          "guarantors",
          "applicants",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ltDteNiWEF"
          },
          "response": {
            "$ref": "#/components/schemas/schema_vvaJrSwSMi"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CASHFLOW",
              "PERSONAL",
              "HOME",
              "VEHICLE",
              "BUSINESS"
            ]
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_vMgWptdJtx"
          },
          "lender": {
            "$ref": "#/components/schemas/schema_pJAhQvDiTz"
          },
          "collaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_xPaudYRPDx"
            }
          },
          "guarantors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_zVPtgbuehs"
            }
          },
          "applicants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_GZTHqVHAdW"
            }
          },
          "terms": {
            "$ref": "#/components/schemas/schema_tPRZmMezto"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_WSSaxdNYfK"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_ESxuMUVqaY"
          }
        }
      },
      "schema_uUkWKcSWfm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_UOXXrCyAix": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_DOGkIuzfBo": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_UOXXrCyAix"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_nVTNeniavv": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_AiwUnTKvmQ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HgLBFniHaF": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_SUCQvsfMcH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wDsCauoGQR": {
        "type": "object",
        "required": [
          "date",
          "narration",
          "txnRefNo",
          "amount",
          "type",
          "closingBalance"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWL"
            ]
          },
          "closingBalance": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SUCQvsfMcH"
          }
        }
      },
      "schema_hhiGhZrlzG": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "accountStatement"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_AiwUnTKvmQ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_HgLBFniHaF"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_wDsCauoGQR"
            }
          }
        }
      },
      "schema_mzoTAZCRtn": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_YyBZbQVJhi": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_EremksjGHG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SbJwkQYBLw": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EremksjGHG"
          }
        }
      },
      "schema_XTHPHwxHNg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cvUlFAaegs": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XTHPHwxHNg"
          }
        }
      },
      "schema_oJunuENHNS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rAvPiQJHxt": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_cvUlFAaegs"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oJunuENHNS"
          }
        }
      },
      "schema_rFigLfvyuJ": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_zwbQzAtxTs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HKtLKWuAaY": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SbJwkQYBLw"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rAvPiQJHxt"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rFigLfvyuJ"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zwbQzAtxTs"
          }
        }
      },
      "schema_SjweFIqPbZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gFNuGaXNSe": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SjweFIqPbZ"
          }
        }
      },
      "schema_QUEGTezAwO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fSARwHyiWM": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QUEGTezAwO"
          }
        }
      },
      "schema_zSPunnuGhg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_srGNVPTUAZ": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zSPunnuGhg"
          }
        }
      },
      "schema_lbYOTgUbYs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QktWaDoruN": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lbYOTgUbYs"
          }
        }
      },
      "schema_fwDSjsvCVS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rqvQxrMyGM": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_QktWaDoruN"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fwDSjsvCVS"
          }
        }
      },
      "schema_uaUXlvqhxk": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_rRrBGYaiiv": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EdODAUPMTw": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_srGNVPTUAZ"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rqvQxrMyGM"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_uaUXlvqhxk"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_rRrBGYaiiv"
          }
        }
      },
      "schema_EYIudIVFZg": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_ftyIVVQFJm": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MBtovoQfDv": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_gFNuGaXNSe"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_fSARwHyiWM"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_EdODAUPMTw"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_EYIudIVFZg"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ftyIVVQFJm"
          }
        }
      },
      "schema_ciCBDLbGZM": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "borrower"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_YyBZbQVJhi"
          },
          "requestId": {
            "type": "string"
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_HKtLKWuAaY"
          },
          "collateral": {
            "$ref": "#/components/schemas/schema_MBtovoQfDv"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_CBJVyaerZO": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_NQnwyRaiKn": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_wUwELDPYBi": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "loans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_NQnwyRaiKn"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "type": "object",
            "required": [
              "error"
            ],
            "properties": {
              "error": {
                "type": "string",
                "default": "",
                "example": "0"
              }
            }
          },
          "loans": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "loanId",
                "terms"
              ],
              "properties": {
                "loanId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "terms": {
                  "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/loanterms.json"
                }
              }
            }
          }
        }
      },
      "schema_giGZDgJrgA": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_hYqPZMThnT": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_cJqXkDrNLJ": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_hYqPZMThnT"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_exLKlQczKA": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ECzhpcXfcG": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_DgJEqlKgKc": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ilACgeAtxd": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_dugxBQALAu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fukLkvILLN": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_ilACgeAtxd"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dugxBQALAu"
          }
        }
      },
      "schema_oKyNkVXUlr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ECzhpcXfcG"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_DgJEqlKgKc"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_fukLkvILLN"
            }
          }
        }
      },
      "schema_EiiIxabwbp": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_JoJNqHPBxm": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TbSleWvQZB": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_SvAaBzSVMj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VEAOwQRBwY": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_TbSleWvQZB"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SvAaBzSVMj"
          }
        }
      },
      "schema_ujruZnatei": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_JoJNqHPBxm"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_VEAOwQRBwY"
          }
        }
      },
      "schema_VSHZFFopAw": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_AEuKTrsbRw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_sBVYBLEzaL": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_UoKItuoGiC": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_wqgckRzebF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HYwCyIJmyp": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_UoKItuoGiC"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wqgckRzebF"
          }
        }
      },
      "schema_skNFTfdxQv": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_AEuKTrsbRw"
          },
          "response": {
            "$ref": "#/components/schemas/schema_sBVYBLEzaL"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_HYwCyIJmyp"
          }
        }
      },
      "schema_SGrhGCFwDf": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_BSdlkexHsj": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qWkasgMUwz": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_BSdlkexHsj"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_sOBoGBlzFK": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_cJePFccAJf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_VPcEuuCuAR": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_qpVWNFniuk": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_TcgUIATMtj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_mCfvBCWnAs": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_qpVWNFniuk"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TcgUIATMtj"
          }
        }
      },
      "schema_XxEXSfBBZe": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "accountList"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_cJePFccAJf"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_VPcEuuCuAR"
          },
          "accountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_mCfvBCWnAs"
            }
          }
        }
      },
      "schema_fucyWXlJMl": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_mCpAYbcNHw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qTxXxfTicK": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_LAjtyOVPjp": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AiHqbgSPDB": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_qTxXxfTicK"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_LAjtyOVPjp"
          }
        }
      },
      "schema_GUdoyGeKMQ": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_mCpAYbcNHw"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/schema_AiHqbgSPDB"
          }
        }
      },
      "schema_TAtQBeTejG": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_htBWMGRXDK": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_OGzMTmQCKA": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_fntEaYdZnQ": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_sqIUZmxwtU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PQSZWJtArZ": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_fntEaYdZnQ"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sqIUZmxwtU"
          }
        }
      },
      "schema_OkhBMvNuCu": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_htBWMGRXDK"
          },
          "response": {
            "$ref": "#/components/schemas/schema_OGzMTmQCKA"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "account": {
            "$ref": "#/components/schemas/schema_PQSZWJtArZ"
          }
        }
      },
      "schema_JlQmCJbrpD": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_AJulFDeoNS": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_JtOHoZiQvo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BatKELzRxq": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JtOHoZiQvo"
          }
        }
      },
      "schema_QxktzxFxOG": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_AJulFDeoNS"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_BatKELzRxq"
          }
        }
      },
      "schema_sQkNhFqdiF": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_twrgHEgAHb": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KGOSyGLOEP": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_WOMduaecUP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ixeYcIOIsg": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WOMduaecUP"
          }
        }
      },
      "schema_QOglxOJQEe": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_twrgHEgAHb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_KGOSyGLOEP"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_ixeYcIOIsg"
          }
        }
      },
      "schema_kZNCZJhFuE": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_BsrdYLyHxo": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_oLNlEnEnWP": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_BsrdYLyHxo"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "createdDate",
                "loanApplicationId",
                "type",
                "borrower",
                "collaterals",
                "guarantors",
                "applicants",
                "terms"
              ],
              "properties": {
                "createdDate": {
                  "type": "string"
                },
                "loanApplicationId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CASHFLOW",
                    "HOME",
                    "VEHICLE",
                    "PERSONAL",
                    "BUSINESS"
                  ]
                },
                "borrower": {
                  "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/borrower.json"
                },
                "collaterals": {
                  "type": "array",
                  "items": {
                    "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/collateral.json"
                  }
                },
                "guarantors": {
                  "type": "array",
                  "items": {
                    "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/guarantor.json"
                  }
                },
                "applicants": {
                  "type": "array",
                  "items": {
                    "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/applicant.json"
                  }
                },
                "terms": {
                  "$ref": "https://github.com/juspay/lsp-lender-protocol-specification/blob/master/Core/schema/Version%200.0.1/loanterms.json"
                }
              }
            }
          }
        }
      },
      "schema_TArJCGKdLS": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_JRYXvNoEwW": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_vLPppFxJOv": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_JRYXvNoEwW"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          }
        }
      },
      "schema_pKNZhCKvog": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_QVLYxrGuKI": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_FReSFmbkGE": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_KEconHgdBq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rQIXDrSpxp": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KEconHgdBq"
          }
        }
      },
      "schema_gBIbyziqNT": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_ATPPDFzMnb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ENKFqkSgzG": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_gBIbyziqNT"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ATPPDFzMnb"
          }
        }
      },
      "schema_jgtuAIMvtz": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_RYKFVNezza": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_XXJCIjSHAP": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_HRZOihuhRN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RFjMTxLHNB": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HRZOihuhRN"
          }
        }
      },
      "schema_fbBqmJKBoF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZSyaSAOcve": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fbBqmJKBoF"
          }
        }
      },
      "schema_SveyFjRkUN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_eMHcLxJZBd": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SveyFjRkUN"
          }
        }
      },
      "schema_GPymkeuLwm": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SjauKjIyOT": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GPymkeuLwm"
          }
        }
      },
      "schema_WfEWNrbVvk": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_RFjMTxLHNB"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_ZSyaSAOcve"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_eMHcLxJZBd"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_SjauKjIyOT"
          }
        }
      },
      "schema_UFMzpixQyj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_TqaAuyzMuq": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_jgtuAIMvtz"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_RYKFVNezza"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_XXJCIjSHAP"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_WfEWNrbVvk"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UFMzpixQyj"
          }
        }
      },
      "schema_ZoSlvCScXd": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_YDxFrBGktR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PGuTabYSss": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_ZoSlvCScXd"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YDxFrBGktR"
          }
        }
      },
      "schema_BljSzvVZMC": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_nsDzVUvbCF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IjGheawIOd": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_BljSzvVZMC"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_nsDzVUvbCF"
          }
        }
      },
      "schema_AxopnsaDmj": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_PGuTabYSss"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_IjGheawIOd"
            }
          }
        }
      },
      "schema_wzDlhvoAIG": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_CBPnufUEWS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cDmuGvvpaD": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_wzDlhvoAIG"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CBPnufUEWS"
          }
        }
      },
      "schema_dzDibmNGWQ": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_cDmuGvvpaD"
            }
          }
        }
      },
      "schema_qmAYQapMGM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_uosHViQrov": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zpKdhqWSmL": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_TqaAuyzMuq"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_AxopnsaDmj"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_dzDibmNGWQ"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_qmAYQapMGM"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uosHViQrov"
          }
        }
      },
      "schema_KDwxpRlMSs": {
        "type": "object",
        "required": [
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "loanApplicationId": {
            "type": "string"
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rQIXDrSpxp"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ENKFqkSgzG"
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_zpKdhqWSmL"
            }
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "OFFERED",
              "OFFER_ACCEPTED",
              "GRANTED",
              "REJECTED",
              "ACTION REQUIRED"
            ]
          }
        }
      },
      "schema_SYkeHkePkN": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_QVLYxrGuKI"
          },
          "response": {
            "$ref": "#/components/schemas/schema_FReSFmbkGE"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KDwxpRlMSs"
            }
          }
        }
      },
      "schema_NgIqUghUst": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_QPsyvaqaTx": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_OIlXIFSOmS": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_HOYiRCKszj": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_RaksqACbcA": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_HKZSWSqRtD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hXMcIUFlxF": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HKZSWSqRtD"
          }
        }
      },
      "schema_hPMNRCqSDE": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PHpgSDwrsm": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hPMNRCqSDE"
          }
        }
      },
      "schema_NNqbydLqZT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vhZJZrIzXK": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NNqbydLqZT"
          }
        }
      },
      "schema_VvWkqIJAcr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PvLzjzMQxr": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VvWkqIJAcr"
          }
        }
      },
      "schema_bJQITCFcta": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_hXMcIUFlxF"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_PHpgSDwrsm"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_vhZJZrIzXK"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_PvLzjzMQxr"
          }
        }
      },
      "schema_KfSVIIsrtK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IuJCnlExwc": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_OIlXIFSOmS"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_HOYiRCKszj"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_RaksqACbcA"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_bJQITCFcta"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KfSVIIsrtK"
          }
        }
      },
      "schema_sKXhEODjUk": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_YogmEYLFCG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HPFCRhFHHb": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_sKXhEODjUk"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YogmEYLFCG"
          }
        }
      },
      "schema_iNCuuefwgk": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_sVRsemzsqr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gzrJVKBWxM": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_iNCuuefwgk"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sVRsemzsqr"
          }
        }
      },
      "schema_Noayybyhov": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_HPFCRhFHHb"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_gzrJVKBWxM"
            }
          }
        }
      },
      "schema_fkbbYhpuaO": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_vKbiBKqRcL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IAzUVVPVin": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_fkbbYhpuaO"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vKbiBKqRcL"
          }
        }
      },
      "schema_AuWcTTHkia": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_IAzUVVPVin"
            }
          }
        }
      },
      "schema_OUZzhwDSAn": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_opGsmIqFxK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LgrmDabGYt": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_IuJCnlExwc"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_Noayybyhov"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_AuWcTTHkia"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_OUZzhwDSAn"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_opGsmIqFxK"
          }
        }
      },
      "schema_UfSoXJMelt": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "offer"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_QPsyvaqaTx"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "offer": {
            "$ref": "#/components/schemas/schema_LgrmDabGYt"
          }
        }
      },
      "schema_jXYLGvLtCk": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_KdOCBZtFEz": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_VBrUBjIxyr": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_hXOqCHMqKP": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_KdOCBZtFEz"
          },
          "response": {
            "$ref": "#/components/schemas/schema_VBrUBjIxyr"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "OFFER_ACCEPTED",
              "PROCESSING",
              "OFFERED",
              "GRANTED",
              "REJECTED"
            ]
          }
        }
      },
      "schema_dsgxvZuUGF": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_osZdRLAvuY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_PmvPEXJekW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bJjPFjHNVh": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PmvPEXJekW"
          }
        }
      },
      "schema_cqEVPTmLVk": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_osZdRLAvuY"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_bJjPFjHNVh"
          }
        }
      },
      "schema_ZlWvDDEZbD": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_mKBAsiewKz": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_RmrZRZhCpG": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ullrttZrag": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ttfGOsKBoe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ullrttZrag"
          }
        }
      },
      "schema_MTRjtlMjed": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_mKBAsiewKz"
          },
          "response": {
            "$ref": "#/components/schemas/schema_RmrZRZhCpG"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_ttfGOsKBoe"
          }
        }
      },
      "schema_FfMEgozmQl": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ncuIFcOPFv": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_VCIQAwxFPv": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gdhGEpalmC": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VCIQAwxFPv"
          }
        }
      },
      "schema_igpggfjAYq": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ncuIFcOPFv"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_gdhGEpalmC"
          }
        }
      },
      "schema_MEcWUHYSXr": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_iQqBNrpdUb": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_wgdrDvSUcv": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_pSAamkAqjA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oisiZWwbfi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pSAamkAqjA"
          }
        }
      },
      "schema_FCdhxYggBL": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_iQqBNrpdUb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_wgdrDvSUcv"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_oisiZWwbfi"
          }
        }
      },
      "schema_bDoBcdEgbp": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_OIlDfvpnKp": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_IYAMrZMDUA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EhJaMLSmPF": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_IYAMrZMDUA"
          }
        }
      },
      "schema_CwtcDSuGDy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ruJuRaOPyA": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_EhJaMLSmPF"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CwtcDSuGDy"
          }
        }
      },
      "schema_QEDBnvOUGN": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_OIlDfvpnKp"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_ruJuRaOPyA"
          }
        }
      },
      "schema_xxMxHZgcAe": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_cmDgdvgNMO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KbtPcRSApN": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_AZbzWsZnOd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_WyMezuEhMZ": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AZbzWsZnOd"
          }
        }
      },
      "schema_IkzLeQiHTl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tPMqllQuDU": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_WyMezuEhMZ"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_IkzLeQiHTl"
          }
        }
      },
      "schema_eJcDfoSVlm": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_cmDgdvgNMO"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_KbtPcRSApN"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_tPMqllQuDU"
          }
        }
      },
      "schema_qOSTrwMKhM": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_FThOxYNscM": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_EMjqGHFMNn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kxgqwRgqnI": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EMjqGHFMNn"
          }
        }
      },
      "schema_TcpwgGFHdd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BAqCUzoUCI": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_kxgqwRgqnI"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TcpwgGFHdd"
          }
        }
      },
      "schema_nAqWnRftxZ": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_FThOxYNscM"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_BAqCUzoUCI"
          }
        }
      },
      "schema_qUOeDLGlMH": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_XttYPPGqiJ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_nYOCIkyHJO": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_qOuxaPyCVY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pfRpNVShKN": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qOuxaPyCVY"
          }
        }
      },
      "schema_ppYYXTqLso": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HhlrJzODGn": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_pfRpNVShKN"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ppYYXTqLso"
          }
        }
      },
      "schema_KzeUGGbQPJ": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_XttYPPGqiJ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_nYOCIkyHJO"
          },
          "requestId": {
            "type": "string"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_HhlrJzODGn"
          }
        }
      },
      "schema_LAGLrlcmYx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EjKEFSZUAR": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qkDJBSTIPl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QAWCJqctho": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qkDJBSTIPl"
          }
        }
      },
      "schema_XpZWiBYICu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ADnvCKwtHi": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_QAWCJqctho"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XpZWiBYICu"
          }
        }
      },
      "schema_ewirdDmwCS": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationIds",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EjKEFSZUAR"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          },
          "requestId": {
            "type": "string",
            "example": "g8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_ADnvCKwtHi"
          }
        }
      },
      "schema_vXoJrqGVtg": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ISXVXonHTG": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_XSOWRdpRHc": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_WqRCycDdFx": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YllDmBzZbB": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WqRCycDdFx"
          }
        }
      },
      "schema_xvHrFlYIGQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gYJzKFSglf": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_YllDmBzZbB"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xvHrFlYIGQ"
          }
        }
      },
      "schema_yRaGlraMDd": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ISXVXonHTG"
          },
          "response": {
            "$ref": "#/components/schemas/schema_XSOWRdpRHc"
          },
          "requestId": {
            "type": "string",
            "example": "i8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_gYJzKFSglf"
          }
        }
      },
      "schema_eLueRHxSay": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_WkysXclYPJ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_fQhUNGJyKD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_lKAehcHmNH": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fQhUNGJyKD"
          }
        }
      },
      "schema_QiIEsvzwXb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QahqCSzIOx": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_lKAehcHmNH"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QiIEsvzwXb"
          }
        }
      },
      "schema_XZdbIypFwp": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_WkysXclYPJ"
          },
          "requestId": {
            "type": "string",
            "example": "m8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_QahqCSzIOx"
          }
        }
      },
      "schema_euOIgoKOQU": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_zkKFvbqdyf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_bYjfdmroAn": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_PqhaJsCztl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fVjNFaaqmh": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PqhaJsCztl"
          }
        }
      },
      "schema_GDlPDsehyq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_buhAqZiCqf": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_fVjNFaaqmh"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GDlPDsehyq"
          }
        }
      },
      "schema_pXUCNKrCPi": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_zkKFvbqdyf"
          },
          "response": {
            "$ref": "#/components/schemas/schema_bYjfdmroAn"
          },
          "requestId": {
            "type": "string",
            "example": "p8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_buhAqZiCqf"
          }
        }
      },
      "schema_jufigCwvul": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CJjDMUwucO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_rMwLuiLNEh": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CJjDMUwucO"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_gdHKYazuCM": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_weoerwjBmX": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_PigiXDQcGk": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_fpeqPOCYlM": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_iNWOEVeMes": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_WCLrwBTlza": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_fpeqPOCYlM"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iNWOEVeMes"
          }
        }
      },
      "schema_vIsKFDduQb": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_weoerwjBmX"
          },
          "response": {
            "$ref": "#/components/schemas/schema_PigiXDQcGk"
          },
          "requestId": {
            "type": "string"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_WCLrwBTlza"
            }
          }
        }
      },
      "schema_uqDMNYOPDt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_yqRbNXdWUF": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_WjTiDHabVp": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_XSnLsihIzU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YkkXQnKjfS": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_WjTiDHabVp"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XSnLsihIzU"
          }
        }
      },
      "schema_EAaEjjHQJu": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationId",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_yqRbNXdWUF"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_YkkXQnKjfS"
          }
        }
      },
      "schema_hPeAsPECbu": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ckZtGRYiAE": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_PCFxJKJpNO": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_skuhMJNlCq": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_HBfNWPsIaH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cHJwxPtylg": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_skuhMJNlCq"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HBfNWPsIaH"
          }
        }
      },
      "schema_DpMBQhykrD": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ckZtGRYiAE"
          },
          "response": {
            "$ref": "#/components/schemas/schema_PCFxJKJpNO"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_cHJwxPtylg"
          }
        }
      },
      "schema_zsaRSGNlEm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_wrijNcwVqD": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_yevNpdSsRA": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_wqRKIvJNar": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aKzyPbiVee": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_yevNpdSsRA"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wqRKIvJNar"
          }
        }
      },
      "schema_ZltXeFeHWn": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_wrijNcwVqD"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_aKzyPbiVee"
          }
        }
      },
      "schema_dGLbySJRMm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_hieVvViUWX": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_soJpkLsxYj": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_XmudhfUisM": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_AKLIXbBUhD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_yCvQhQhAFe": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_XmudhfUisM"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AKLIXbBUhD"
          }
        }
      },
      "schema_yuDdVAffNO": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_hieVvViUWX"
          },
          "response": {
            "$ref": "#/components/schemas/schema_soJpkLsxYj"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_yCvQhQhAFe"
          }
        }
      },
      "schema_QXAhZVZDsH": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_xDTeKKsyxw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_edjwevgxOq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KmQmHtECQV": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_edjwevgxOq"
          }
        }
      },
      "schema_NNOvtexyCz": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_xDTeKKsyxw"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_KmQmHtECQV"
          }
        }
      },
      "schema_tqhwlaijYx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_UbWfeTGnGM": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_dcRSHhaxDj": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_OxNpwzBJKg": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_eDOCMdpctg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tZzzkgndNI": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_OxNpwzBJKg"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_eDOCMdpctg"
          }
        }
      },
      "schema_IqLJUQktqg": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_UbWfeTGnGM"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_dcRSHhaxDj"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_tZzzkgndNI"
          }
        }
      },
      "schema_tMhmZzqvUy": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CEdzfPKktm": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_cToUtXdPSB": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_ZNbqQTnPtS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XNqKTPFRKD": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_cToUtXdPSB"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ZNbqQTnPtS"
          }
        }
      },
      "schema_YSBJwufwzx": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CEdzfPKktm"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_XNqKTPFRKD"
          }
        }
      },
      "schema_lsESuPTZeV": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_FJOsmupyWA": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_BnLUoVhZPQ": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_LptOkfXiGM": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_LmiQPBTPAO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nXSPYwsiYW": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_LptOkfXiGM"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_LmiQPBTPAO"
          }
        }
      },
      "schema_FGaWmbRXeG": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_FJOsmupyWA"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_BnLUoVhZPQ"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_nXSPYwsiYW"
          }
        }
      },
      "schema_vdOSkpMyJb": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_qdpBDsfaSA": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_OztZkKCogA": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "errorCode"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_qdpBDsfaSA"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "errorCode": {
            "type": "string",
            "example": "SDP1001"
          }
        }
      },
      "schema_LtwHAgFPXu": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_MyTiueVgej": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_tiJGbfnzAr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "lookupType"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_MyTiueVgej"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "lookupType": {
            "type": "string",
            "example": "LOAN_STATUS"
          }
        }
      },
      "schema_wdWQSbChML": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      }
    }
  }
}