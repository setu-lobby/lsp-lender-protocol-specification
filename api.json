{
  "openapi": "3.0.0",
  "info": {
    "title": "LSP Lending spec",
    "description": "\nSourcing, identity verification, underwriting, disbursement, recollections and dispute management are few of the many responsibilities managed by a lender today.  Historically, the best lenders have had to excel at each of these skills in order to maximise their profit pools and serve the larger and larger markets.\n\nLSP is an initiative to unbundle lending and enable the creation of specialized entities, each specialized at one part of the job. Therefore, we envision the future of lending to be a partnership between multiple firms individually focused on sourcing/distribution, identity verification, underwriting, capital arrangement, recollections, etc.\n\nThis LSP is being created to showcase the power of the above idea. In its simplest form, it's a loan marketplace that enables SMEs to compare loan offers from multiple lenders and choose the best one. In its more advanced version, This LSP would be akin to a borrower\u2019s financial advisor, looking after their interests, fetching the best offers and advising the customer to make good decisions.\n\nIn the longer run, it is envisioned that many more This LSP-like applications (LSPs) will be created. Each of these would focus on distinct borrower pools and build the specialized experiences suited to their customers. This would allow lenders to focus purely on their underwriting and collections logic and cater to diverse collaborations with the LSPs.\n",
    "version": "3.1"
  },
  "paths": {
    "/v3/loan/grantLoanRequest": {
      "post": {
        "description": "Invokes by LSP to Grant Loan",
        "requestBody": {
          "description": "Request to lender to Grant Loan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_QVbCzhmCqj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Grant Loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_eFyZluJJQB"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/grantLoanResponse": {
      "post": {
        "description": "Invoked by Lender to informing status of loan",
        "requestBody": {
          "description": "Response to LSP with loan statu",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_HrGLZsWBYs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_PxInrdskRt"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/LoanSummaryRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan summary",
        "requestBody": {
          "description": "Request to lender for loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ibRLHCbNvT"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to  Loan summary Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_cnWCDhcFUL"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanSummaryResponse": {
      "post": {
        "description": "Invoked by Lender to informing loan summary request",
        "requestBody": {
          "description": "Response to LSP with loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_lRrSEsojmH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_VtNsmAzUXS"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanRequest": {
      "post": {
        "description": "Invokes by LSP requesting details of a loan",
        "requestBody": {
          "description": "Request to lender for loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_RNkjdSzuFK"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to get loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_SpwXNfFOQc"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan details",
        "requestBody": {
          "description": "Response to LSP with loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_SvBtBIQjBa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TRmnDcSoMg"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan statement",
        "requestBody": {
          "description": "Request to lender for loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_twPGmmxXaQ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan statement Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MbBSsCufsu"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan statement",
        "requestBody": {
          "description": "Response to LSP with loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ceTXqcjMNp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_uBTDhKPoGV"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansRequest": {
      "post": {
        "description": "Invokes by LSP requesting list of the loan provisioned",
        "requestBody": {
          "description": "Request to lender for list of the loan provisioned",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_exwEVWSRiX"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan list Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ISjPUROQMn"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansResponse": {
      "post": {
        "description": "Invoked by Lender to inform the list of loans",
        "requestBody": {
          "description": "Response to LSP with the list of loans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_njsbczXLXb"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vCbCKGKDhY"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get disbursement Plans",
        "requestBody": {
          "description": "Request to lender to get disbursement Plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_wrTBhFofRA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_pSDsxxCFWB"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansResponse": {
      "post": {
        "description": "Invoked by lender to return disbursement Plans",
        "requestBody": {
          "description": "Returns array of disbursement Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_KaTpwuSaqg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_AIfosOmLWh"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanRequest": {
      "post": {
        "description": "Invoked by LSP to set disbursement plan",
        "requestBody": {
          "description": "Set Choosen Disbursement Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_fzTXzwHlPc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_GtLoYMzZob"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenDisbursement status",
        "requestBody": {
          "description": "Send Disbursement Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ocMmSXmtJp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_JgwmHCUTdv"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsRequest": {
      "post": {
        "description": "Invoked by LSP to get array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_AhNOBOSYSn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_eImRkJgTfp"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsResponse": {
      "post": {
        "description": "Invoked by Lender to return array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_WKpOvkyKse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_CiFeWUPWMk"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountRequest": {
      "post": {
        "description": "Invoked by LSP to set the disbursement Account",
        "requestBody": {
          "description": "set Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_nKrlVKUxjb"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_xTMhYmIMsO"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountResponse": {
      "post": {
        "description": "Invoked by Lender to inform current status of chosenAccount",
        "requestBody": {
          "description": "status of chosen account for disbursement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rSikOWLEfN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_hXaZFlxJaS"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/triggerDisbursementRequest": {
      "post": {
        "description": "Invoked by LSP to trigger Disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_NEDPOksscZ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_oRwEqfjacM"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/TriggerDisbursementResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rDHyqhsnGt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_VoFTGhsxPp"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to generate offer after consent for data is ready",
        "requestBody": {
          "description": "Request to generate offer for a set of loan application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_qQxrdBihwG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_NJAZSeYkSG"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersResponse": {
      "post": {
        "description": "Invoked by lender informing borrower about offers",
        "requestBody": {
          "description": "Returns the tentaive loan offer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_FUlfOtGcJi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_IGABsCjrZZ"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to set chosen offer",
        "requestBody": {
          "description": "Informing lender about offer chosen by borrower",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_YWngMmsriH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_JxrkvytVkn"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferResponse": {
      "post": {
        "description": "Invoked by lender & asynchronous resposne to initiate AcceptOfferRequest API",
        "requestBody": {
          "description": "Response to setOfferRequest with loan Application status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_zdfJbevuNk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_qiqOsiBXmx"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeRequest": {
      "post": {
        "description": "Invoked by LSP to raise dispute",
        "requestBody": {
          "description": "Request to raise dispute",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_tSGCyfALJn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_zmkQULsqwr"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeResponse": {
      "post": {
        "description": "Invoked by lender once Dispute is raised",
        "requestBody": {
          "description": "Returns the dispute details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_fjUIgukOqs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_fefZhrQRuF"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch dispute status",
        "requestBody": {
          "description": "Request to fetch dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_OBtzfNcuXh"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_NspGrLEDRV"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusResponse": {
      "post": {
        "description": "Invoked by lender informing LSP about status of dispute",
        "requestBody": {
          "description": "Returns the dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_HerrwbNjKQ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_bYKLeiuFmW"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to Trigger loan acceptance",
        "requestBody": {
          "description": "Trigger Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_LBGgXxKMgt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_clJgnLELQE"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to trigger loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance with otpsessionKey",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_WJoRMjhmhE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_uBBfexmTbP"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to verify loan acceptance OTP",
        "requestBody": {
          "description": "Verify Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_fpCxPdvzuL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TktcvLZWxs"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to verify loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance Verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_DhFtSAPuRy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MpPYDrPgeE"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleRequest": {
      "post": {
        "description": "Create consent handle with Account Aggregator",
        "requestBody": {
          "description": "Request by LSP to lender to get consent handle with Account Aggregator",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_iOfusrSvvc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement by Lender to LSP for Consent Handle Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_iLvmwGfZPX"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleResponse": {
      "post": {
        "description": "Invoked by lender to send consent handle created in Account Aggregator",
        "requestBody": {
          "description": "Consent Handle Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ScgJbYDBgm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent Hanlde Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_FmoisroBQA"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to get consent handle status from lender",
        "requestBody": {
          "description": "Consent Status Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_EIFGwfdsnh"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_AHARdAXkin"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusResponse": {
      "post": {
        "description": "Invoked by lender to send consent status to LSP",
        "requestBody": {
          "description": "Consent Status Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_yCinzLyxzr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_JZIRvfAzmw"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get list of repayment plans",
        "requestBody": {
          "description": "Request to lender to get repayment plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_bPiQTKyquD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_wZaHWIlnIb"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansResponse": {
      "post": {
        "description": "Invoked by lender to return repayment Plans",
        "requestBody": {
          "description": "Returns array of repayment Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_BDcHLaoaVD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_qliBuTJPzX"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanRequest": {
      "post": {
        "description": "Invoked by LSP requesting lender to set repayment plan",
        "requestBody": {
          "description": "Set Choosen Repayment Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_IbCtEMQcbZ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_koqmeTMBsA"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenRepayment status",
        "requestBody": {
          "description": "Set Repayment plan Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_flnEifETCk"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_QnvLctXGxm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch status of set repayment plan ",
        "requestBody": {
          "description": "Get status of set repayment plan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_crtZdMspOQ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_fRTPyoATiN"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of set Repayment plan",
        "requestBody": {
          "description": "Set Repayment Plan status response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_EAZutOsFtc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vpmqpYCBbT"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentRequest": {
      "post": {
        "description": "Invoked by LSP to trigger repayment",
        "requestBody": {
          "description": "Request to lender to trigger a repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_GaywxZIFZj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_udiImZeVKr"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentResponse": {
      "post": {
        "description": "Invoked by Lender to send lender's payment page url",
        "requestBody": {
          "description": "Response to trigger repayment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ApVRzmaFqR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_foxYNVzNkB"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch repayment status",
        "requestBody": {
          "description": "Request to lender to check status of repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_JziBpvYgKn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_aoEtEHHyrZ"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusResponse": {
      "post": {
        "description": "Invoked by Lender to return repayment status",
        "requestBody": {
          "description": "Response to trigger repayment status request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_NDJwGPyOIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_fdsYGfFLGU"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getErrorCodesRequest": {
      "post": {
        "description": "search error code",
        "requestBody": {
          "description": "Request to fetch error code",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_gRVfceqQFr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_RiwgBlgHXG"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getLookupCodesRequest": {
      "post": {
        "description": "Get possible values of ENUM fields by lookupType",
        "requestBody": {
          "description": "Request to fetch ENUM for a lookupTypes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_cOneQYlMGr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_SzAkthIykt"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "schema_KmAcghKIUT": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_QVbCzhmCqj": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_KmAcghKIUT"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_eFyZluJJQB": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_rmjJkIMnoN": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GFtOqksIXm": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_tIszGWzmNQ": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_JDzGZvGlkN": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_wVvVXlbAFi": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_tvSDziCqjB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YkiLWOEmVp": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tvSDziCqjB"
          }
        }
      },
      "schema_dvKWiukagq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_prhcLVOwyC": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dvKWiukagq"
          }
        }
      },
      "schema_DHBByGjBBj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XqRyuWlQPp": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DHBByGjBBj"
          }
        }
      },
      "schema_ChVcnzKrMu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_UQFmrvThsv": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ChVcnzKrMu"
          }
        }
      },
      "schema_KjZxBmOFpS": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_YkiLWOEmVp"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_prhcLVOwyC"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_XqRyuWlQPp"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_UQFmrvThsv"
          }
        }
      },
      "schema_eMuJxBwXbk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VdHMvMyOaD": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_tIszGWzmNQ"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_JDzGZvGlkN"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_wVvVXlbAFi"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_KjZxBmOFpS"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_eMuJxBwXbk"
          }
        }
      },
      "schema_VBEPDoCrrO": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_RpwWFvJTbR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QRYnjfcsLz": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_VBEPDoCrrO"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RpwWFvJTbR"
          }
        }
      },
      "schema_xfhHOQkqaY": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_drqPDzlevq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rssQHexPTz": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_xfhHOQkqaY"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_drqPDzlevq"
          }
        }
      },
      "schema_lplnQBFpCh": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_QRYnjfcsLz"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_rssQHexPTz"
          }
        }
      },
      "schema_babrCXttqd": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_uEoUZTpFlc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_lFMYXGlwhW": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_babrCXttqd"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uEoUZTpFlc"
          }
        }
      },
      "schema_TAVLnsQBcg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fcYkNaHLCH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DYvxudpAfe": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_TAVLnsQBcg"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fcYkNaHLCH"
          }
        }
      },
      "schema_quKICavhEi": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_lFMYXGlwhW"
          },
          "method": {
            "$ref": "#/components/schemas/schema_DYvxudpAfe"
          }
        }
      },
      "schema_fHAzCRHYnK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FBAdyAkuFK": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fHAzCRHYnK"
          }
        }
      },
      "schema_HMFNMTySle": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_TrewJKsPBi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_uWFXfBWEDl": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_HMFNMTySle"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TrewJKsPBi"
          }
        }
      },
      "schema_HrGLZsWBYs": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "terms",
          "disbursement",
          "repayment",
          "loanStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_rmjJkIMnoN"
          },
          "response": {
            "$ref": "#/components/schemas/schema_GFtOqksIXm"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_VdHMvMyOaD"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_lplnQBFpCh"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_quKICavhEi"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "REJECTED",
              "DEFAULTED",
              "COMPLETED",
              "ACTION_REQUIRED"
            ]
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_FBAdyAkuFK"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_uWFXfBWEDl"
            }
          }
        }
      },
      "schema_PxInrdskRt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_zlpLdBHkkM": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ibRLHCbNvT": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_zlpLdBHkkM"
          },
          "requestId": {
            "type": "string",
            "example": "bvcc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_cnWCDhcFUL": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ImMmbvwlxc": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TAiszfJDBN": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ohZZYftJpO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EBrOSpPTiR": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ohZZYftJpO"
          }
        }
      },
      "schema_stUxuvTiDh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VClqjUlIYi": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_stUxuvTiDh"
          }
        }
      },
      "schema_MouEEpEtvz": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_lRrSEsojmH": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "summary"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ImMmbvwlxc"
          },
          "response": {
            "$ref": "#/components/schemas/schema_TAiszfJDBN"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "required": [
              "nextRepayment",
              "currentRepayment",
              "principalPaid",
              "interestPaid",
              "penaltyPaid",
              "principalPending",
              "interestPending",
              "amountDisbursed",
              "amountRepaid",
              "tenure",
              "description"
            ],
            "properties": {
              "nextRepayment": {
                "$ref": "#/components/schemas/schema_EBrOSpPTiR"
              },
              "currentRepayment": {
                "$ref": "#/components/schemas/schema_VClqjUlIYi"
              },
              "principalPaid": {
                "type": "string"
              },
              "interestPaid": {
                "type": "string"
              },
              "penaltyPaid": {
                "type": "string"
              },
              "principalPending": {
                "type": "string"
              },
              "interestPending": {
                "type": "string"
              },
              "amountDisbursed": {
                "type": "string"
              },
              "amountRepaid": {
                "type": "string"
              },
              "tenure": {
                "$ref": "#/components/schemas/schema_MouEEpEtvz"
              },
              "description": {
                "type": "string",
                "example": "short description for the loan"
              }
            }
          }
        }
      },
      "schema_VtNsmAzUXS": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_pcVqbnHpPr": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_RNkjdSzuFK": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_pcVqbnHpPr"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_SpwXNfFOQc": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_BnVHTQFvbt": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_xZabPFmdKm": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_zAdmbKLiWC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FCDxZjprjT": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zAdmbKLiWC"
          }
        }
      },
      "schema_uOBZQtyvcK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SqLPBfWovQ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uOBZQtyvcK"
          }
        }
      },
      "schema_CLPKrUjgQF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fAqAjJNHZb": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_SqLPBfWovQ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CLPKrUjgQF"
          }
        }
      },
      "schema_QsgjAjmeoM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_kgfKGNgLjK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dvFSmhdqnl": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_FCDxZjprjT"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_fAqAjJNHZb"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_QsgjAjmeoM"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kgfKGNgLjK"
          }
        }
      },
      "schema_RutzWIJlIF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jtvHhXyBQv": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RutzWIJlIF"
          }
        }
      },
      "schema_flBdnuHdDk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RRcGhXOGJY": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_flBdnuHdDk"
          }
        }
      },
      "schema_ZrbDuRQTLH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fIxMTdfynQ": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_RRcGhXOGJY"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ZrbDuRQTLH"
          }
        }
      },
      "schema_acvxREgHoJ": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_EGhLAdecOr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_iBUffGfPdy": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "example": "AWWPA7645M"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_jtvHhXyBQv"
            }
          },
          "name": {
            "type": "string",
            "example": "ABC Bank"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_fIxMTdfynQ"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_acvxREgHoJ"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EGhLAdecOr"
          }
        }
      },
      "schema_iifyFqBWoV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kSKaAWGpfa": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iifyFqBWoV"
          }
        }
      },
      "schema_JfikEQKKsk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FbnrwiKQVj": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JfikEQKKsk"
          }
        }
      },
      "schema_kPuDhOszTV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kBxvcTpeKE": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kPuDhOszTV"
          }
        }
      },
      "schema_oKxakrfpcj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_WsEyUPQEkR": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oKxakrfpcj"
          }
        }
      },
      "schema_dyCMiqLXHs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BGchlpOAke": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_WsEyUPQEkR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dyCMiqLXHs"
          }
        }
      },
      "schema_YzQPlPMwZM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_GEcyldgDrp": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RaDVRbRpyH": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_kBxvcTpeKE"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_BGchlpOAke"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YzQPlPMwZM"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GEcyldgDrp"
          }
        }
      },
      "schema_GTopoohGYt": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_TiGZXwVNnz": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JLWTJVPqLL": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_kSKaAWGpfa"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_FbnrwiKQVj"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_RaDVRbRpyH"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_GTopoohGYt"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TiGZXwVNnz"
          }
        }
      },
      "schema_DGMIjkeffg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YquqRmIqku": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DGMIjkeffg"
          }
        }
      },
      "schema_PJLemLSAny": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KMKHCOcJLD": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PJLemLSAny"
          }
        }
      },
      "schema_OtCfXKAZOm": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SVRMQcSwai": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_KMKHCOcJLD"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OtCfXKAZOm"
          }
        }
      },
      "schema_vDXmVUikbD": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_GCWwbUUKin": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JcWUwirlNk": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YquqRmIqku"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "relationshipWithBorrower": {
            "type": "string",
            "example": "Father"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SVRMQcSwai"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_vDXmVUikbD"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GCWwbUUKin"
          }
        }
      },
      "schema_rNutECHkNU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_CeqavhpycC": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_rNutECHkNU"
          }
        }
      },
      "schema_AwvSNuMmak": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IbBtZNENjo": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AwvSNuMmak"
          }
        }
      },
      "schema_kPHpmpRRhS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DdgDspNjGT": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_IbBtZNENjo"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kPHpmpRRhS"
          }
        }
      },
      "schema_EBWQLwxgtR": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_DQHGaWxeDt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xQajhrXkux": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_CeqavhpycC"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_DdgDspNjGT"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_EBWQLwxgtR"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DQHGaWxeDt"
          }
        }
      },
      "schema_dzmCFKKnpU": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_FNLEDwIgtZ": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_EegkvJNpRp": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_hksVbfZtue": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PxIRFdiyAo": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hksVbfZtue"
          }
        }
      },
      "schema_nfGoMHhxZc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nBrSOUvexA": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_nfGoMHhxZc"
          }
        }
      },
      "schema_snhensoWNs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HuJEEqsVrv": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_snhensoWNs"
          }
        }
      },
      "schema_EjiMSWOFMQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JtZhwpvXWw": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EjiMSWOFMQ"
          }
        }
      },
      "schema_GmKstzOEaY": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_PxIRFdiyAo"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_nBrSOUvexA"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_HuJEEqsVrv"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_JtZhwpvXWw"
          }
        }
      },
      "schema_FjkBLyQyDK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xGgSspewHo": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_dzmCFKKnpU"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_FNLEDwIgtZ"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_EegkvJNpRp"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_GmKstzOEaY"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FjkBLyQyDK"
          }
        }
      },
      "schema_bOdAKFdBCV": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_bmnoFROpQG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tVQzgTeKUc": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_bOdAKFdBCV"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bmnoFROpQG"
          }
        }
      },
      "schema_GXWaDFdXGF": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_pKIdhnwjxN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aNPzguJLde": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_GXWaDFdXGF"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pKIdhnwjxN"
          }
        }
      },
      "schema_tzMowCSMGv": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_tVQzgTeKUc"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_aNPzguJLde"
          }
        }
      },
      "schema_fdJBIpDrWJ": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_lEgRsRWqAt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LEYCztSfJX": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_fdJBIpDrWJ"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lEgRsRWqAt"
          }
        }
      },
      "schema_kwLdmAdHfc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QQOCsqgnuF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BYQkiSLocS": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_kwLdmAdHfc"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QQOCsqgnuF"
          }
        }
      },
      "schema_MVkaUAOFwq": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_LEYCztSfJX"
          },
          "method": {
            "$ref": "#/components/schemas/schema_BYQkiSLocS"
          }
        }
      },
      "schema_SvBtBIQjBa": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "loanId",
          "requestId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "type",
          "borrower",
          "lender",
          "collaterals",
          "guarantors",
          "applicants",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_BnVHTQFvbt"
          },
          "response": {
            "$ref": "#/components/schemas/schema_xZabPFmdKm"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CASHFLOW",
              "PERSONAL",
              "HOME",
              "VEHICLE",
              "BUSINESS"
            ]
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_dvFSmhdqnl"
          },
          "lender": {
            "$ref": "#/components/schemas/schema_iBUffGfPdy"
          },
          "collaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_JLWTJVPqLL"
            }
          },
          "guarantors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_JcWUwirlNk"
            }
          },
          "applicants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_xQajhrXkux"
            }
          },
          "terms": {
            "$ref": "#/components/schemas/schema_xGgSspewHo"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_tzMowCSMGv"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_MVkaUAOFwq"
          }
        }
      },
      "schema_TRmnDcSoMg": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EFiIaZEzwa": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_twPGmmxXaQ": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EFiIaZEzwa"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_MbBSsCufsu": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_vbauNKEsvi": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TwBRqcrSkF": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_YmpWJpGmBz": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qEWrgEfsVb": {
        "type": "object",
        "required": [
          "date",
          "narration",
          "txnRefNo",
          "amount",
          "type",
          "closingBalance"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWL"
            ]
          },
          "closingBalance": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YmpWJpGmBz"
          }
        }
      },
      "schema_ceTXqcjMNp": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "accountStatement"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_vbauNKEsvi"
          },
          "response": {
            "$ref": "#/components/schemas/schema_TwBRqcrSkF"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_qEWrgEfsVb"
            }
          }
        }
      },
      "schema_uBTDhKPoGV": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_lKulMSTMtx": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_iKJRsrdejf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KxYurjPiUS": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iKJRsrdejf"
          }
        }
      },
      "schema_tmiEZDPnAM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OFunHYlZOQ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tmiEZDPnAM"
          }
        }
      },
      "schema_iuQWcjBiiX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aGvFFMoHMF": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_OFunHYlZOQ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iuQWcjBiiX"
          }
        }
      },
      "schema_UxxgbDiLAi": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_FMLWsDBNoo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qRULJAMOje": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KxYurjPiUS"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_aGvFFMoHMF"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_UxxgbDiLAi"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FMLWsDBNoo"
          }
        }
      },
      "schema_KdtLIbfGjR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YVcOzwaeZG": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KdtLIbfGjR"
          }
        }
      },
      "schema_jYnSMzpJdh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_iXmmFEsafx": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jYnSMzpJdh"
          }
        }
      },
      "schema_UcXIOKBmMt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZUINcPbXVs": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UcXIOKBmMt"
          }
        }
      },
      "schema_DeQVGupVjj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ECIGDtJidU": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DeQVGupVjj"
          }
        }
      },
      "schema_UrPHcQCTLR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MKnbfhdkCo": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_ECIGDtJidU"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UrPHcQCTLR"
          }
        }
      },
      "schema_ehZgJrPNPQ": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_HnCjXOPEqF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AMTwzAWfeI": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ZUINcPbXVs"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_MKnbfhdkCo"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ehZgJrPNPQ"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HnCjXOPEqF"
          }
        }
      },
      "schema_orOXAhHiSo": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_opEYxSyrId": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pJCubpnYHz": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YVcOzwaeZG"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_iXmmFEsafx"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_AMTwzAWfeI"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_orOXAhHiSo"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_opEYxSyrId"
          }
        }
      },
      "schema_exwEVWSRiX": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "borrower"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_lKulMSTMtx"
          },
          "requestId": {
            "type": "string"
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_qRULJAMOje"
          },
          "collateral": {
            "$ref": "#/components/schemas/schema_pJCubpnYHz"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_ISjPUROQMn": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_WkQgdXsPsL": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qcmCIbNMIZ": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_fxWcdWcSrg": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_lAmBkGzDlK": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_xZdRjbpKLg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QLhIAGxEsR": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xZdRjbpKLg"
          }
        }
      },
      "schema_JUCNWqbhUX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OUnfbfufKc": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JUCNWqbhUX"
          }
        }
      },
      "schema_GTKTtkNAVD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_iJMcLYOHJp": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GTKTtkNAVD"
          }
        }
      },
      "schema_EbwPTqjpJW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cQtKCswyUN": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EbwPTqjpJW"
          }
        }
      },
      "schema_mZWjwNdvYq": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_QLhIAGxEsR"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_OUnfbfufKc"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_iJMcLYOHJp"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_cQtKCswyUN"
          }
        }
      },
      "schema_lgmSPztWmQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qUJmIUyVZO": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_qcmCIbNMIZ"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_fxWcdWcSrg"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_lAmBkGzDlK"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_mZWjwNdvYq"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lgmSPztWmQ"
          }
        }
      },
      "schema_njsbczXLXb": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "loans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_WkQgdXsPsL"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "type": "object",
            "required": [
              "error"
            ],
            "properties": {
              "error": {
                "type": "string",
                "default": "",
                "example": "0"
              }
            }
          },
          "loans": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "loanId",
                "terms"
              ],
              "properties": {
                "loanId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "terms": {
                  "$ref": null
                }
              }
            }
          }
        }
      },
      "schema_vCbCKGKDhY": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_NehmSWYbZa": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_wrTBhFofRA": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_NehmSWYbZa"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_pSDsxxCFWB": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_pFJkTCktdg": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_pskwJXDYTj": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_UpLbJKzGoU": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_pXRRfrgrjC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GpiSnTDGwc": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_UpLbJKzGoU"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pXRRfrgrjC"
          }
        }
      },
      "schema_KaTpwuSaqg": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_pFJkTCktdg"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_pskwJXDYTj"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_GpiSnTDGwc"
            }
          }
        }
      },
      "schema_AIfosOmLWh": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_yYkmRKmYFb": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_aLyToosPOh": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_MvGqKgrrlZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fWjuBlXIAi": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_aLyToosPOh"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MvGqKgrrlZ"
          }
        }
      },
      "schema_fzTXzwHlPc": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_yYkmRKmYFb"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_fWjuBlXIAi"
          }
        }
      },
      "schema_GtLoYMzZob": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_yPmpGfsqVp": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ZAsRkBKwWG": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_fjIugFiEiI": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_GOMVUZfTdr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QouVFpvXqO": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_fjIugFiEiI"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GOMVUZfTdr"
          }
        }
      },
      "schema_ocMmSXmtJp": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_yPmpGfsqVp"
          },
          "response": {
            "$ref": "#/components/schemas/schema_ZAsRkBKwWG"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_QouVFpvXqO"
          }
        }
      },
      "schema_JgwmHCUTdv": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_xAKUfXqqzB": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_AhNOBOSYSn": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_xAKUfXqqzB"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_eImRkJgTfp": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_pOdeoxbZKm": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_BrQhbStACo": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_FRxntArmLc": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_MKVUZFPUTE": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BBWGimMeFM": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_FRxntArmLc"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MKVUZFPUTE"
          }
        }
      },
      "schema_WKpOvkyKse": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "accountList"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_pOdeoxbZKm"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_BrQhbStACo"
          },
          "accountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_BBWGimMeFM"
            }
          }
        }
      },
      "schema_CiFeWUPWMk": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_RGngvibPOS": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_pCmsoSFOgD": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_zBbXzGCiEo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cnEMjAnfSI": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_pCmsoSFOgD"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zBbXzGCiEo"
          }
        }
      },
      "schema_nKrlVKUxjb": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_RGngvibPOS"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/schema_cnEMjAnfSI"
          }
        }
      },
      "schema_xTMhYmIMsO": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_avzXqUDDNs": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_niUXJvMmCv": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_QuNEydhiRT": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_UUHilkZDcc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tWPzBfXmRV": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_QuNEydhiRT"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UUHilkZDcc"
          }
        }
      },
      "schema_rSikOWLEfN": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_avzXqUDDNs"
          },
          "response": {
            "$ref": "#/components/schemas/schema_niUXJvMmCv"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "account": {
            "$ref": "#/components/schemas/schema_tWPzBfXmRV"
          }
        }
      },
      "schema_hXaZFlxJaS": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_iVvMhAbaaw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_jWVyWqJZHf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EKuRBtzpZk": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jWVyWqJZHf"
          }
        }
      },
      "schema_NEDPOksscZ": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_iVvMhAbaaw"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_EKuRBtzpZk"
          }
        }
      },
      "schema_oRwEqfjacM": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_zRmhBeECGA": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_DIswHzaJLZ": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_UiuZEpktom": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RSrXSaURzJ": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UiuZEpktom"
          }
        }
      },
      "schema_rDHyqhsnGt": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_zRmhBeECGA"
          },
          "response": {
            "$ref": "#/components/schemas/schema_DIswHzaJLZ"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_RSrXSaURzJ"
          }
        }
      },
      "schema_VoFTGhsxPp": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_efYdmummMO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_jlevbTNhAz": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZbbdURSFgk": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jlevbTNhAz"
          }
        }
      },
      "schema_auEwLvrbPW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oSjftSovBl": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_auEwLvrbPW"
          }
        }
      },
      "schema_HuRMXGhHkc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rrYNdlyCrW": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_oSjftSovBl"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HuRMXGhHkc"
          }
        }
      },
      "schema_YsTqxfoLkZ": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_PrWZgXptVF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AfvjxPqcxa": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ZbbdURSFgk"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rrYNdlyCrW"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YsTqxfoLkZ"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PrWZgXptVF"
          }
        }
      },
      "schema_nShRaYsOvN": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wuBmbsqgvE": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_nShRaYsOvN"
          }
        }
      },
      "schema_dCYRkCZWkx": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oJCGQzsqua": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dCYRkCZWkx"
          }
        }
      },
      "schema_ulfkzQZWfI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AGosVpBsGi": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ulfkzQZWfI"
          }
        }
      },
      "schema_EgpTCqUREK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xcSjtDsJEJ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EgpTCqUREK"
          }
        }
      },
      "schema_AmtoMPlLEg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SFLldAoKTx": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_xcSjtDsJEJ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AmtoMPlLEg"
          }
        }
      },
      "schema_rPwgfnXFyl": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_hJhQAFMpcv": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SrJiKjJbcS": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_AGosVpBsGi"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SFLldAoKTx"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rPwgfnXFyl"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hJhQAFMpcv"
          }
        }
      },
      "schema_dtyimVjqqc": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_cezJSZbnGl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fbqhFBkNuL": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_wuBmbsqgvE"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_oJCGQzsqua"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SrJiKjJbcS"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_dtyimVjqqc"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cezJSZbnGl"
          }
        }
      },
      "schema_HWOrAyqLyA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aKFYPFEUvt": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HWOrAyqLyA"
          }
        }
      },
      "schema_QdEifvGnKV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_luboqYmLoB": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QdEifvGnKV"
          }
        }
      },
      "schema_TVpHonAKjM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jhwyVXgiVx": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_luboqYmLoB"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TVpHonAKjM"
          }
        }
      },
      "schema_QphtGcfMWY": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_DnaLvIElFM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PsnIuSccqH": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_aKFYPFEUvt"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "relationshipWithBorrower": {
            "type": "string",
            "example": "Father"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_jhwyVXgiVx"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_QphtGcfMWY"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DnaLvIElFM"
          }
        }
      },
      "schema_FSrXWSNjeu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rJzmAfzIkz": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FSrXWSNjeu"
          }
        }
      },
      "schema_yRpkkjBbMu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NvtCJzuJtS": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yRpkkjBbMu"
          }
        }
      },
      "schema_fKUayXyBWt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tioJyFSBrE": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_NvtCJzuJtS"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fKUayXyBWt"
          }
        }
      },
      "schema_ZbwMRxwqWr": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_vNWimMOvqx": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vERdJGNfpL": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_rJzmAfzIkz"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_tioJyFSBrE"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ZbwMRxwqWr"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vNWimMOvqx"
          }
        }
      },
      "schema_yxKyABIewR": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_iLclGApjSx": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_dhAOFgGXkV": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_qXTpmMpIXa": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JytUSEGbKy": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qXTpmMpIXa"
          }
        }
      },
      "schema_fIBSXeUlAQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YnVcegceIN": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fIBSXeUlAQ"
          }
        }
      },
      "schema_WodwSBJeZp": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SFyFnQkTkp": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WodwSBJeZp"
          }
        }
      },
      "schema_hgqItuSTAc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_acFbLvaXGr": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hgqItuSTAc"
          }
        }
      },
      "schema_nKefBPuOoi": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_JytUSEGbKy"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_YnVcegceIN"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_SFyFnQkTkp"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_acFbLvaXGr"
          }
        }
      },
      "schema_MmiHjtpFPC": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GKQznASVxY": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_yxKyABIewR"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_iLclGApjSx"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_dhAOFgGXkV"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_nKefBPuOoi"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MmiHjtpFPC"
          }
        }
      },
      "schema_LbUubUZZvq": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_efYdmummMO"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "createdDate",
                "loanApplicationId",
                "type",
                "borrower",
                "collaterals",
                "guarantors",
                "applicants",
                "terms"
              ],
              "properties": {
                "createdDate": {
                  "type": "string"
                },
                "loanApplicationId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CASHFLOW",
                    "HOME",
                    "VEHICLE",
                    "PERSONAL",
                    "BUSINESS"
                  ]
                },
                "borrower": {
                  "$ref": null
                },
                "collaterals": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "guarantors": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "applicants": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "terms": {
                  "$ref": null
                }
              }
            }
          }
        }
      },
      "schema_siBkjvjqAZ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EwlvHlxAqY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qQxrdBihwG": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EwlvHlxAqY"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          }
        }
      },
      "schema_NJAZSeYkSG": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_BxtnLadHPf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_SWosSFfoKu": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_EAjkwEXcin": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_CZjNXHSXKd": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EAjkwEXcin"
          }
        }
      },
      "schema_JWfAZHTVrF": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_cOEWkJGomO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_szgkZTOCVZ": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_JWfAZHTVrF"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cOEWkJGomO"
          }
        }
      },
      "schema_DeAQXWcjQN": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_UsmZRjVUII": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_SkEWDIHUNv": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_gaNAymLtsd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KmMrzWtkeK": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_gaNAymLtsd"
          }
        }
      },
      "schema_OmGsyynIZt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HajDHrgqRT": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OmGsyynIZt"
          }
        }
      },
      "schema_UdcVDCTdwg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YttNryplsN": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UdcVDCTdwg"
          }
        }
      },
      "schema_ffboNhPIWc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qYnlCGOsJO": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ffboNhPIWc"
          }
        }
      },
      "schema_ABFobwUWne": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_KmMrzWtkeK"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_HajDHrgqRT"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_YttNryplsN"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_qYnlCGOsJO"
          }
        }
      },
      "schema_neTBlHqpPd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KGUUfzItkB": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_DeAQXWcjQN"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_UsmZRjVUII"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SkEWDIHUNv"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_ABFobwUWne"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_neTBlHqpPd"
          }
        }
      },
      "schema_nYlcKPiKZi": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_dHooTYgVWo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IVTBAZZHcf": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_nYlcKPiKZi"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dHooTYgVWo"
          }
        }
      },
      "schema_JTIepmifHU": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_FcFxdLcmBK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_szoQOuOAuX": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_JTIepmifHU"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FcFxdLcmBK"
          }
        }
      },
      "schema_XrihIGrWdI": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_IVTBAZZHcf"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_szoQOuOAuX"
            }
          }
        }
      },
      "schema_QSKYLXyEZd": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_eiagdoANQF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SFtIMIkxSR": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_QSKYLXyEZd"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_eiagdoANQF"
          }
        }
      },
      "schema_ejjZrJjblf": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SFtIMIkxSR"
            }
          }
        }
      },
      "schema_tethTJzKuN": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_FbHrLhVdAq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_GgaxXVbyQy": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_KGUUfzItkB"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_XrihIGrWdI"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_ejjZrJjblf"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_tethTJzKuN"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FbHrLhVdAq"
          }
        }
      },
      "schema_CwbeHScvmg": {
        "type": "object",
        "required": [
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "loanApplicationId": {
            "type": "string"
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_CZjNXHSXKd"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_szgkZTOCVZ"
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_GgaxXVbyQy"
            }
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "OFFERED",
              "OFFER_ACCEPTED",
              "GRANTED",
              "REJECTED",
              "ACTION REQUIRED"
            ]
          }
        }
      },
      "schema_FUlfOtGcJi": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_BxtnLadHPf"
          },
          "response": {
            "$ref": "#/components/schemas/schema_SWosSFfoKu"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_CwbeHScvmg"
            }
          }
        }
      },
      "schema_IGABsCjrZZ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_aMIbXhHhzk": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_LJNMHUKzhf": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_QnbQKJAqSX": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_QNkJpeHWny": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_yUytFBIOBJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vAqxcQdyFn": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yUytFBIOBJ"
          }
        }
      },
      "schema_hcCWAQZrjb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RrLDszlPVh": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hcCWAQZrjb"
          }
        }
      },
      "schema_yKIFKcDYNj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_snGodPYRbE": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yKIFKcDYNj"
          }
        }
      },
      "schema_KzxlVYaeRA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ZGoeSNEwvq": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KzxlVYaeRA"
          }
        }
      },
      "schema_cbmSaCdUnX": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_vAqxcQdyFn"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_RrLDszlPVh"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_snGodPYRbE"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_ZGoeSNEwvq"
          }
        }
      },
      "schema_EaKKwaNxCA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IAjrxcWKJD": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_LJNMHUKzhf"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_QnbQKJAqSX"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_QNkJpeHWny"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_cbmSaCdUnX"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EaKKwaNxCA"
          }
        }
      },
      "schema_TggymvkkWg": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_wjdjOxIKpw": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tBNkqKPYbe": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_TggymvkkWg"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wjdjOxIKpw"
          }
        }
      },
      "schema_VYWmSTWMDd": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_NObJxCfVcQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dCFtVRferS": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_VYWmSTWMDd"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NObJxCfVcQ"
          }
        }
      },
      "schema_ngqDCIbdkv": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_tBNkqKPYbe"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_dCFtVRferS"
            }
          }
        }
      },
      "schema_ffCRTQdyGj": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_sDEjmvSPih": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tVxEKzuOHN": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_ffCRTQdyGj"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sDEjmvSPih"
          }
        }
      },
      "schema_bNCNNkdEfT": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_tVxEKzuOHN"
            }
          }
        }
      },
      "schema_aivFpAfAwV": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_krFgRwWDVS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FcZuzDhlVO": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_IAjrxcWKJD"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_ngqDCIbdkv"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_bNCNNkdEfT"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_aivFpAfAwV"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_krFgRwWDVS"
          }
        }
      },
      "schema_YWngMmsriH": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "offer"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_aMIbXhHhzk"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "offer": {
            "$ref": "#/components/schemas/schema_FcZuzDhlVO"
          }
        }
      },
      "schema_JxrkvytVkn": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_aEcUgTwLaq": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_LzxruhpZUK": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_zdfJbevuNk": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_aEcUgTwLaq"
          },
          "response": {
            "$ref": "#/components/schemas/schema_LzxruhpZUK"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "OFFER_ACCEPTED",
              "PROCESSING",
              "OFFERED",
              "GRANTED",
              "REJECTED"
            ]
          }
        }
      },
      "schema_qiqOsiBXmx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_YojauJKUwX": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_EpzJkSKcyx": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_xLokPzMNNd": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_EpzJkSKcyx"
          }
        }
      },
      "schema_tSGCyfALJn": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_YojauJKUwX"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_xLokPzMNNd"
          }
        }
      },
      "schema_zmkQULsqwr": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CqQhEMeUAw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KPcFwwPwTV": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_TpnGbSfHMg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NmEdSfZNEX": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TpnGbSfHMg"
          }
        }
      },
      "schema_fjUIgukOqs": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CqQhEMeUAw"
          },
          "response": {
            "$ref": "#/components/schemas/schema_KPcFwwPwTV"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_NmEdSfZNEX"
          }
        }
      },
      "schema_fefZhrQRuF": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_MiUpAVDqWD": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_DkIcboOukH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_QnxJdsxshh": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DkIcboOukH"
          }
        }
      },
      "schema_OBtzfNcuXh": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_MiUpAVDqWD"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_QnxJdsxshh"
          }
        }
      },
      "schema_NspGrLEDRV": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_eJWZkCBqcz": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GcmshqjHxy": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_wessMyUPuk": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pEYzJQdjav": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wessMyUPuk"
          }
        }
      },
      "schema_HerrwbNjKQ": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_eJWZkCBqcz"
          },
          "response": {
            "$ref": "#/components/schemas/schema_GcmshqjHxy"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_pEYzJQdjav"
          }
        }
      },
      "schema_bYKLeiuFmW": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_hxCTyMKjxU": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_mnbZEIInvy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fusPnTdcAI": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_mnbZEIInvy"
          }
        }
      },
      "schema_wfzvlebTjZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DNhsjpxZga": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_fusPnTdcAI"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wfzvlebTjZ"
          }
        }
      },
      "schema_LBGgXxKMgt": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_hxCTyMKjxU"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_DNhsjpxZga"
          }
        }
      },
      "schema_clJgnLELQE": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_LXFCGUZias": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_XQWvUMZWqG": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_QdaCHfxrng": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tVZyLJEzBJ": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QdaCHfxrng"
          }
        }
      },
      "schema_uREjcjckNb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hXrbnOfIYz": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_tVZyLJEzBJ"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_uREjcjckNb"
          }
        }
      },
      "schema_WJoRMjhmhE": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_LXFCGUZias"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_XQWvUMZWqG"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_hXrbnOfIYz"
          }
        }
      },
      "schema_uBBfexmTbP": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_clMuNDOyDS": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_VsFffBcjri": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hdVatNWHuQ": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VsFffBcjri"
          }
        }
      },
      "schema_NocEhoZmvQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_vRwqCzkZdn": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_hdVatNWHuQ"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NocEhoZmvQ"
          }
        }
      },
      "schema_fpCxPdvzuL": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_clMuNDOyDS"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_vRwqCzkZdn"
          }
        }
      },
      "schema_TktcvLZWxs": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EaIZbRMoKq": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_gCxCsAeqMZ": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_bgkcFsgQdh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MiozTLOsAT": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bgkcFsgQdh"
          }
        }
      },
      "schema_xFmlFPqPlT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qgkiosHZon": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_MiozTLOsAT"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xFmlFPqPlT"
          }
        }
      },
      "schema_DhFtSAPuRy": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EaIZbRMoKq"
          },
          "response": {
            "$ref": "#/components/schemas/schema_gCxCsAeqMZ"
          },
          "requestId": {
            "type": "string"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_qgkiosHZon"
          }
        }
      },
      "schema_MpPYDrPgeE": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_sIsNcrjmFT": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_vqSrzihDht": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XTJfXgWtYd": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vqSrzihDht"
          }
        }
      },
      "schema_HGbqcCUtwU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BpytGUEdao": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_XTJfXgWtYd"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HGbqcCUtwU"
          }
        }
      },
      "schema_iOfusrSvvc": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationIds",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_sIsNcrjmFT"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          },
          "requestId": {
            "type": "string",
            "example": "g8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_BpytGUEdao"
          }
        }
      },
      "schema_iLvmwGfZPX": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_RBVhkYaeEA": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_UqRJnHmtoF": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_RCLWmCNklJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NPbNPiBBNO": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RCLWmCNklJ"
          }
        }
      },
      "schema_AFGTDSwoTS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YlsehOLczC": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_NPbNPiBBNO"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AFGTDSwoTS"
          }
        }
      },
      "schema_ScgJbYDBgm": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_RBVhkYaeEA"
          },
          "response": {
            "$ref": "#/components/schemas/schema_UqRJnHmtoF"
          },
          "requestId": {
            "type": "string",
            "example": "i8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_YlsehOLczC"
          }
        }
      },
      "schema_FmoisroBQA": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_OAlfEUEGXo": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_YzYFoAikrA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aFPksctJQV": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YzYFoAikrA"
          }
        }
      },
      "schema_NCsVUeMcjg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_THlreBGdaR": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_aFPksctJQV"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_NCsVUeMcjg"
          }
        }
      },
      "schema_EIFGwfdsnh": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_OAlfEUEGXo"
          },
          "requestId": {
            "type": "string",
            "example": "m8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_THlreBGdaR"
          }
        }
      },
      "schema_AHARdAXkin": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EeFXWZQigw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KuGyZoUZsT": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_oHmWRHvxbZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BRLdvZuVFu": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oHmWRHvxbZ"
          }
        }
      },
      "schema_bPOyTrntqa": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HUoLxsUZrO": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_BRLdvZuVFu"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bPOyTrntqa"
          }
        }
      },
      "schema_yCinzLyxzr": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EeFXWZQigw"
          },
          "response": {
            "$ref": "#/components/schemas/schema_KuGyZoUZsT"
          },
          "requestId": {
            "type": "string",
            "example": "p8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_HUoLxsUZrO"
          }
        }
      },
      "schema_JZIRvfAzmw": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_VyBwNntIvu": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_bPiQTKyquD": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_VyBwNntIvu"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_wZaHWIlnIb": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_pQSGHmAvMk": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_uRdzTQdFkc": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_PkbWGUemgR": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_LdsTLOHkJK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hHeGJdtSWA": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_PkbWGUemgR"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_LdsTLOHkJK"
          }
        }
      },
      "schema_BDcHLaoaVD": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_pQSGHmAvMk"
          },
          "response": {
            "$ref": "#/components/schemas/schema_uRdzTQdFkc"
          },
          "requestId": {
            "type": "string"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_hHeGJdtSWA"
            }
          }
        }
      },
      "schema_qliBuTJPzX": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CdkqkVsbqq": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_OcAZlGttBh": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_xdutJTBnMZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_HjvNaCejal": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_OcAZlGttBh"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xdutJTBnMZ"
          }
        }
      },
      "schema_IbCtEMQcbZ": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationId",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CdkqkVsbqq"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_HjvNaCejal"
          }
        }
      },
      "schema_koqmeTMBsA": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_xMGErhoaeZ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GKYkNvaDHR": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_fVJtZLkqUn": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_qdptaDHZmU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_piqXKQMNXT": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_fVJtZLkqUn"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qdptaDHZmU"
          }
        }
      },
      "schema_flnEifETCk": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_xMGErhoaeZ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_GKYkNvaDHR"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_piqXKQMNXT"
          }
        }
      },
      "schema_QnvLctXGxm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_qoHonvkfNd": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_STRZtwmxit": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_WXfuFQgwGX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YGbaZxEAyA": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_STRZtwmxit"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WXfuFQgwGX"
          }
        }
      },
      "schema_crtZdMspOQ": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_qoHonvkfNd"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_YGbaZxEAyA"
          }
        }
      },
      "schema_fRTPyoATiN": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_liDfyAAMwL": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_uIovfHkAae": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_kcMVfGaqmP": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_FLKRlJVvdz": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dsHCMZDhwi": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_kcMVfGaqmP"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FLKRlJVvdz"
          }
        }
      },
      "schema_EAZutOsFtc": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_liDfyAAMwL"
          },
          "response": {
            "$ref": "#/components/schemas/schema_uIovfHkAae"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_dsHCMZDhwi"
          }
        }
      },
      "schema_vpmqpYCBbT": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_bkHfxlqFIO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_dttyXjfDSU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XhaJGzFuhx": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dttyXjfDSU"
          }
        }
      },
      "schema_GaywxZIFZj": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_bkHfxlqFIO"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_XhaJGzFuhx"
          }
        }
      },
      "schema_udiImZeVKr": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_zjQJmrQqvp": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_LbxwZniWYp": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_ryOOawuXlR": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_YJjDHMSTiQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FHLMVfjzXg": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_ryOOawuXlR"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YJjDHMSTiQ"
          }
        }
      },
      "schema_ApVRzmaFqR": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_zjQJmrQqvp"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_LbxwZniWYp"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_FHLMVfjzXg"
          }
        }
      },
      "schema_foxYNVzNkB": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_WPMmAdzcad": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_tnGRBTKPRa": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_bOEvrJUSdT": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qsypsLCgqJ": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_tnGRBTKPRa"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bOEvrJUSdT"
          }
        }
      },
      "schema_JziBpvYgKn": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_WPMmAdzcad"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_qsypsLCgqJ"
          }
        }
      },
      "schema_aoEtEHHyrZ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_nOUJFLhcpj": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ZyTyCevIOm": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_rsdNUEtZQE": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_vnNEDfExus": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NvjQZXwoXc": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_rsdNUEtZQE"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vnNEDfExus"
          }
        }
      },
      "schema_NDJwGPyOIn": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_nOUJFLhcpj"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_ZyTyCevIOm"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_NvjQZXwoXc"
          }
        }
      },
      "schema_fdsYGfFLGU": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_uXNRiTVPHY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_gRVfceqQFr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "errorCode"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_uXNRiTVPHY"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "errorCode": {
            "type": "string",
            "example": "SDP1001"
          }
        }
      },
      "schema_RiwgBlgHXG": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_jAnVGpPWLs": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_cOneQYlMGr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "lookupType"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_jAnVGpPWLs"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "lookupType": {
            "type": "string",
            "example": "LOAN_STATUS"
          }
        }
      },
      "schema_SzAkthIykt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      }
    }
  }
}