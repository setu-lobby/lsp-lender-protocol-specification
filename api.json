{
  "openapi": "3.0.0",
  "info": {
    "title": "Grant Loan API",
    "description": "API to create actual loan in lender's system, after monitoring consent",
    "version": "3.1"
  },
  "paths": {
    "/v3/loan/grantLoanRequest": {
      "post": {
        "description": "Invokes by LSP to Grant Loan",
        "requestBody": {
          "description": "Request to lender to Grant Loan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_sZWvbCdijg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Grant Loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MsskZUiJcT"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/grantLoanResponse": {
      "post": {
        "description": "Invoked by Lender to informing status of loan",
        "requestBody": {
          "description": "Response to LSP with loan statu",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_bjlCJuOsbY"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_rWXiDNowbd"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/LoanSummaryRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan summary",
        "requestBody": {
          "description": "Request to lender for loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_GAowjKddFG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to  Loan summary Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_JGCuwQOyID"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanSummaryResponse": {
      "post": {
        "description": "Invoked by Lender to informing loan summary request",
        "requestBody": {
          "description": "Response to LSP with loan summary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rPmfuJzofA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_khFraeRHre"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanRequest": {
      "post": {
        "description": "Invokes by LSP requesting details of a loan",
        "requestBody": {
          "description": "Request to lender for loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_GSVoNThwrm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to get loan Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_qnTLreewnw"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/getLoanResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan details",
        "requestBody": {
          "description": "Response to LSP with loan details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rhJModJMHA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_iipquPYySm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementRequest": {
      "post": {
        "description": "Invokes by LSP requesting loan statement",
        "requestBody": {
          "description": "Request to lender for loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ZrdMIuHoqe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan statement Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_HzLteutrVi"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/loanStatementResponse": {
      "post": {
        "description": "Invoked by Lender to inform loan statement",
        "requestBody": {
          "description": "Response to LSP with loan statement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_yIPxXaCcUN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_OHIHiXEngo"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansRequest": {
      "post": {
        "description": "Invokes by LSP requesting list of the loan provisioned",
        "requestBody": {
          "description": "Request to lender for list of the loan provisioned",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_xfKozjtIUQ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to loan list Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_LidwUhYVSe"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/listLoansResponse": {
      "post": {
        "description": "Invoked by Lender to inform the list of loans",
        "requestBody": {
          "description": "Response to LSP with the list of loans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_KTpozBflRQ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response from lender",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_tPPIPMQKTn"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get disbursement Plans",
        "requestBody": {
          "description": "Request to lender to get disbursement Plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_TPZpDNicHG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_FeiKfaSmJg"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementPlansResponse": {
      "post": {
        "description": "Invoked by lender to return disbursement Plans",
        "requestBody": {
          "description": "Returns array of disbursement Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_LkUXhRlpJv"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_XsLMgBHMlw"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanRequest": {
      "post": {
        "description": "Invoked by LSP to set disbursement plan",
        "requestBody": {
          "description": "Set Choosen Disbursement Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_ORLeUcccnu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TWdkalXDic"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenDisbursement status",
        "requestBody": {
          "description": "Send Disbursement Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_XJUfORSgfp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_JPdPIcVdCC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsRequest": {
      "post": {
        "description": "Invoked by LSP to get array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_EZYVDfQkav"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_CJlJXVFjPm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/getDisbursementAccountsResponse": {
      "post": {
        "description": "Invoked by Lender to return array of Disbursement Accounts",
        "requestBody": {
          "description": "Get Disbursement Account Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_pntxKJHYLs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_zledXEIQws"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountRequest": {
      "post": {
        "description": "Invoked by LSP to set the disbursement Account",
        "requestBody": {
          "description": "set Disbursement Account Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_UYIdrVAFSt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_nbvqISEdJM"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/setDisbursementAccountResponse": {
      "post": {
        "description": "Invoked by Lender to inform current status of chosenAccount",
        "requestBody": {
          "description": "status of chosen account for disbursement",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_CzdVKPAHQR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_hhgPfBzhvq"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/triggerDisbursementRequest": {
      "post": {
        "description": "Invoked by LSP to trigger Disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_jDsXZUsTNO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ajwzcVUfcW"
                }
              }
            }
          }
        }
      }
    },
    "/v3/disbursement/TriggerDisbursementResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of disbursement",
        "requestBody": {
          "description": "Trigger Disbursement Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_sBdIEOnYQO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_jTGmxGLqZE"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to generate offer after consent for data is ready",
        "requestBody": {
          "description": "Request to generate offer for a set of loan application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_FuUfzWGBqE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_zcfXvSnRiT"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/generateOffersResponse": {
      "post": {
        "description": "Invoked by lender informing borrower about offers",
        "requestBody": {
          "description": "Returns the tentaive loan offer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_zFufBZliEJ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vcoddsuSfr"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferRequest": {
      "post": {
        "description": "Invoked by LSP to request lender to set chosen offer",
        "requestBody": {
          "description": "Informing lender about offer chosen by borrower",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_lWZXWfgjEl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TGAlNMguBv"
                }
              }
            }
          }
        }
      }
    },
    "/v3/offer/setOfferResponse": {
      "post": {
        "description": "Invoked by lender & asynchronous resposne to initiate AcceptOfferRequest API",
        "requestBody": {
          "description": "Response to setOfferRequest with loan Application status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_WoSGArkWWU"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ZpHflQztWt"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeRequest": {
      "post": {
        "description": "Invoked by LSP to raise dispute",
        "requestBody": {
          "description": "Request to raise dispute",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_IeTLrBeubJ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_YsUOMMHuNh"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/raiseDisputeResponse": {
      "post": {
        "description": "Invoked by lender once Dispute is raised",
        "requestBody": {
          "description": "Returns the dispute details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_yGDLqarqAa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_DCOSUOrzhc"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch dispute status",
        "requestBody": {
          "description": "Request to fetch dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_fMDVMAoIiu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_jdahBluHLu"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/dispute/disputeStatusResponse": {
      "post": {
        "description": "Invoked by lender informing LSP about status of dispute",
        "requestBody": {
          "description": "Returns the dispute status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_HgfIuhHEah"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_yXFZQaopYa"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to Trigger loan acceptance",
        "requestBody": {
          "description": "Trigger Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_TkOQWPEGyf"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_IbOnFzrzzz"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/triggerLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to trigger loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance with otpsessionKey",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_tRBsTJSJeM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_ciTvCSvvRI"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceRequest": {
      "post": {
        "description": "Invoked by LSP to verify loan acceptance OTP",
        "requestBody": {
          "description": "Verify Loan acceptance request ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_fOhKodqMYW"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to request received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_DuBrGtxQRx"
                }
              }
            }
          }
        }
      }
    },
    "/v3/loan/verifyLoanAcceptanceResponse": {
      "post": {
        "description": "Invoked by lender in response to verify loan Acceptance Request",
        "requestBody": {
          "description": "Response of Loan Acceptance Verification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_MqluBYBdXx"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to response received ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_iPWbtTlSjv"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleRequest": {
      "post": {
        "description": "Create consent handle with Account Aggregator",
        "requestBody": {
          "description": "Request by LSP to lender to get consent handle with Account Aggregator",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_twUkMUisux"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement by Lender to LSP for Consent Handle Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_KOmsYHuabC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentHandleResponse": {
      "post": {
        "description": "Invoked by lender to send consent handle created in Account Aggregator",
        "requestBody": {
          "description": "Consent Handle Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_dGTMooSfkV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent Hanlde Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_HJiFwHQuXA"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to get consent handle status from lender",
        "requestBody": {
          "description": "Consent Status Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_RxCXFVZTnZ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_vgkIwUBrKm"
                }
              }
            }
          }
        }
      }
    },
    "/v3/consent/consentStatusResponse": {
      "post": {
        "description": "Invoked by lender to send consent status to LSP",
        "requestBody": {
          "description": "Consent Status Response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_wREBaQvdFV"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_XKrHFWAEpf"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansRequest": {
      "post": {
        "description": "Invoked by LSP to get list of repayment plans",
        "requestBody": {
          "description": "Request to lender to get repayment plans ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_IBVFVHHVxP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_MrtPHmdYkQ"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/getRepaymentPlansResponse": {
      "post": {
        "description": "Invoked by lender to return repayment Plans",
        "requestBody": {
          "description": "Returns array of repayment Plans",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_OdQwCmXACj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_gFpzHnAzPH"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanRequest": {
      "post": {
        "description": "Invoked by LSP requesting lender to set repayment plan",
        "requestBody": {
          "description": "Set Choosen Repayment Plan in lender's system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_sTEYIqXOJz"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_SWHpyVdueF"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanResponse": {
      "post": {
        "description": "Invoked by lender to inform lsp about chosenRepayment status",
        "requestBody": {
          "description": "Set Repayment plan Status information to LSP",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_EUOOzerynU"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_SLwGdghZcB"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch status of set repayment plan ",
        "requestBody": {
          "description": "Get status of set repayment plan",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_RnONJVbztH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_sZwvLFVgJz"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/setRepaymentPlanStatusResponse": {
      "post": {
        "description": "Invoked by Lender to inform status of set Repayment plan",
        "requestBody": {
          "description": "Set Repayment Plan status response",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_nzOiwRhGHu"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_LnMxwDugxl"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentRequest": {
      "post": {
        "description": "Invoked by LSP to trigger repayment",
        "requestBody": {
          "description": "Request to lender to trigger a repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_uWaYuFYKdI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_NGvfvTiqGW"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentResponse": {
      "post": {
        "description": "Invoked by Lender to send lender's payment page url",
        "requestBody": {
          "description": "Response to trigger repayment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_rtmfzlfERr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_TnSchZUSlz"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusRequest": {
      "post": {
        "description": "Invoked by LSP to fetch repayment status",
        "requestBody": {
          "description": "Request to lender to check status of repayment",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_bOZqUGVVkH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_grnmPApZLC"
                }
              }
            }
          }
        }
      }
    },
    "/v3/repayment/triggerRepaymentStatusResponse": {
      "post": {
        "description": "Invoked by Lender to return repayment status",
        "requestBody": {
          "description": "Response to trigger repayment status request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_HoandQzakG"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_lxaBRnZsSt"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getErrorCodesRequest": {
      "post": {
        "description": "search error code",
        "requestBody": {
          "description": "Request to fetch error code",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_zukqneRzWE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_pHuVzxnHVf"
                }
              }
            }
          }
        }
      }
    },
    "/v3/meta/lookup/getLookupCodesRequest": {
      "post": {
        "description": "Get possible values of ENUM fields by lookupType",
        "requestBody": {
          "description": "Request to fetch ENUM for a lookupTypes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schema_KhQMVAbyOI"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schema_KMocmYqdcx"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "schema_DmUCcTbhCf": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_sZWvbCdijg": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_DmUCcTbhCf"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_MsskZUiJcT": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_wXNVwReUNQ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KHJEdkCjfy": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_JVsrlAmXHH": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_ZRCFErTQkv": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_FWZwiUkrSM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_wwOXDaippo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YLEVjdDeSs": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wwOXDaippo"
          }
        }
      },
      "schema_wdNxBOktmS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ChtYHSyZHt": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wdNxBOktmS"
          }
        }
      },
      "schema_nCjCGDwSEy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wrFDUpUCDR": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_nCjCGDwSEy"
          }
        }
      },
      "schema_pmJlRARlkq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ejDEQJcOCy": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pmJlRARlkq"
          }
        }
      },
      "schema_GAanoGrYjP": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_YLEVjdDeSs"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_ChtYHSyZHt"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_wrFDUpUCDR"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_ejDEQJcOCy"
          }
        }
      },
      "schema_aBfgacZeym": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wXVvySqlMG": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_JVsrlAmXHH"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_ZRCFErTQkv"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_FWZwiUkrSM"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_GAanoGrYjP"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aBfgacZeym"
          }
        }
      },
      "schema_EiPDgYHVzi": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_XayeqiBXto": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nqjpQVmbiH": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_EiPDgYHVzi"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XayeqiBXto"
          }
        }
      },
      "schema_MTdgYmrnRy": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_UGSFUBaeQD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JrKPqsCFee": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_MTdgYmrnRy"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_UGSFUBaeQD"
          }
        }
      },
      "schema_uazXFYtEgb": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_nqjpQVmbiH"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_JrKPqsCFee"
          }
        }
      },
      "schema_DBuVTMHiQX": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_vCUCOkCIoH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bnFyEUPRKS": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_DBuVTMHiQX"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_vCUCOkCIoH"
          }
        }
      },
      "schema_TkAyucQkAs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RjCDegYSUF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XadypJoNnj": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_TkAyucQkAs"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RjCDegYSUF"
          }
        }
      },
      "schema_TjWhInwOLC": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_bnFyEUPRKS"
          },
          "method": {
            "$ref": "#/components/schemas/schema_XadypJoNnj"
          }
        }
      },
      "schema_SorrmmqLBs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_mLjbbpSOYk": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SorrmmqLBs"
          }
        }
      },
      "schema_QCLDkJkPya": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_tMJcxkfJJo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VPGNVevFzo": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_QCLDkJkPya"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tMJcxkfJJo"
          }
        }
      },
      "schema_bjlCJuOsbY": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "terms",
          "disbursement",
          "repayment",
          "loanStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_wXNVwReUNQ"
          },
          "response": {
            "$ref": "#/components/schemas/schema_KHJEdkCjfy"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_wXVvySqlMG"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_uazXFYtEgb"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_TjWhInwOLC"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "REJECTED",
              "DEFAULTED",
              "COMPLETED",
              "ACTION_REQUIRED"
            ]
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_mLjbbpSOYk"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_VPGNVevFzo"
            }
          }
        }
      },
      "schema_rWXiDNowbd": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_XZnknPTRaO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GAowjKddFG": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_XZnknPTRaO"
          },
          "requestId": {
            "type": "string",
            "example": "bvcc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_JGCuwQOyID": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_cZeafjUDnU": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_THYCJGgnUY": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_gywrEkmvTd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hyLNOfeDoO": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_gywrEkmvTd"
          }
        }
      },
      "schema_zFnSahQCBl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OgPhLJDUyX": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zFnSahQCBl"
          }
        }
      },
      "schema_kOVANjgnay": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_rPmfuJzofA": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "summary"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_cZeafjUDnU"
          },
          "response": {
            "$ref": "#/components/schemas/schema_THYCJGgnUY"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "required": [
              "nextRepayment",
              "currentRepayment",
              "principalPaid",
              "interestPaid",
              "penaltyPaid",
              "principalPending",
              "interestPending",
              "amountDisbursed",
              "amountRepaid",
              "tenure",
              "description"
            ],
            "properties": {
              "nextRepayment": {
                "$ref": "#/components/schemas/schema_hyLNOfeDoO"
              },
              "currentRepayment": {
                "$ref": "#/components/schemas/schema_OgPhLJDUyX"
              },
              "principalPaid": {
                "type": "string"
              },
              "interestPaid": {
                "type": "string"
              },
              "penaltyPaid": {
                "type": "string"
              },
              "principalPending": {
                "type": "string"
              },
              "interestPending": {
                "type": "string"
              },
              "amountDisbursed": {
                "type": "string"
              },
              "amountRepaid": {
                "type": "string"
              },
              "tenure": {
                "$ref": "#/components/schemas/schema_kOVANjgnay"
              },
              "description": {
                "type": "string",
                "example": "short description for the loan"
              }
            }
          }
        }
      },
      "schema_khFraeRHre": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_RSyasORiAe": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GSVoNThwrm": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_RSyasORiAe"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_qnTLreewnw": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_YCmnJlmziE": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TPlfHLAuWX": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_YULdmvYkcK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_mMjcxzWpDN": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YULdmvYkcK"
          }
        }
      },
      "schema_wXuEBibuok": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ULnkqLjbcF": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wXuEBibuok"
          }
        }
      },
      "schema_IWmECtMUWn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_npwAIliOWe": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_ULnkqLjbcF"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_IWmECtMUWn"
          }
        }
      },
      "schema_NAiAFTgHuV": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_gMqvhpAwEy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jGQDfQHoar": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_mMjcxzWpDN"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_npwAIliOWe"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_NAiAFTgHuV"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_gMqvhpAwEy"
          }
        }
      },
      "schema_KbsEESdQTA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tceQgLRMLs": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KbsEESdQTA"
          }
        }
      },
      "schema_tCKFPgfyTy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_UPsCKUmWRp": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tCKFPgfyTy"
          }
        }
      },
      "schema_pFYttmzdQn": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OfEOzZxLKm": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_UPsCKUmWRp"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pFYttmzdQn"
          }
        }
      },
      "schema_qmvRrVqrUO": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_tWiivIgqHq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jHXWyyixRu": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "example": "AWWPA7645M"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_tceQgLRMLs"
            }
          },
          "name": {
            "type": "string",
            "example": "ABC Bank"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_OfEOzZxLKm"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_qmvRrVqrUO"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tWiivIgqHq"
          }
        }
      },
      "schema_RzkiPrTEhj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KbBNLBLgeW": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RzkiPrTEhj"
          }
        }
      },
      "schema_fGSYDGmBHg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_eNUSrJBejy": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fGSYDGmBHg"
          }
        }
      },
      "schema_ZRxHGwBhLh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cciMZGRfeM": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ZRxHGwBhLh"
          }
        }
      },
      "schema_hvoyFBlhNs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_cDNnhQIOoB": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hvoyFBlhNs"
          }
        }
      },
      "schema_yedtuKTxVa": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ojHLTbsQmT": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_cDNnhQIOoB"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yedtuKTxVa"
          }
        }
      },
      "schema_OHrAwVzVzv": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_pXLyUJzPhU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zVCppScNYb": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_cciMZGRfeM"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ojHLTbsQmT"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_OHrAwVzVzv"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pXLyUJzPhU"
          }
        }
      },
      "schema_xIRUjyQFaX": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_kSVETnFEtB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_JyZheqQnCh": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KbBNLBLgeW"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_eNUSrJBejy"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_zVCppScNYb"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_xIRUjyQFaX"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kSVETnFEtB"
          }
        }
      },
      "schema_WDdZjmLrTt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hrbRveALki": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WDdZjmLrTt"
          }
        }
      },
      "schema_JexESiCapy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nPyXuyXKPb": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JexESiCapy"
          }
        }
      },
      "schema_fwSoEyLSEt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_iSKBICyepJ": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_nPyXuyXKPb"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fwSoEyLSEt"
          }
        }
      },
      "schema_ZyiILkPJfM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_WSRYbhsKFt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LEbHbhayhs": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_hrbRveALki"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "relationshipWithBorrower": {
            "type": "string",
            "example": "Father"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_iSKBICyepJ"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ZyiILkPJfM"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WSRYbhsKFt"
          }
        }
      },
      "schema_tXDjQAFjfu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wCEOFMHBTf": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tXDjQAFjfu"
          }
        }
      },
      "schema_bdJqgykoeE": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_eFAFsYFDSj": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bdJqgykoeE"
          }
        }
      },
      "schema_dHlLfaVkCH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bAVOukdaZU": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_eFAFsYFDSj"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dHlLfaVkCH"
          }
        }
      },
      "schema_ybLrIoVeds": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_epdarbGSgR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_aHKQFWZJJP": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_wCEOFMHBTf"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_bAVOukdaZU"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_ybLrIoVeds"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_epdarbGSgR"
          }
        }
      },
      "schema_yHTBqRwttf": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_GPleZccChg": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_DKgNmjWqWs": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_KatKERcjWZ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LyhWZQeQEh": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KatKERcjWZ"
          }
        }
      },
      "schema_jNKbnLcgfV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_abBPpTCCPC": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jNKbnLcgfV"
          }
        }
      },
      "schema_zzOYOkCXBp": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_dEyJFILNFu": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zzOYOkCXBp"
          }
        }
      },
      "schema_iGCOwqEzkJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_beDllYyHJX": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iGCOwqEzkJ"
          }
        }
      },
      "schema_REAWeSQNrF": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_LyhWZQeQEh"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_abBPpTCCPC"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_dEyJFILNFu"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_beDllYyHJX"
          }
        }
      },
      "schema_RGjhvQbcGS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LqQcQmPSen": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_yHTBqRwttf"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_GPleZccChg"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_DKgNmjWqWs"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_REAWeSQNrF"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RGjhvQbcGS"
          }
        }
      },
      "schema_aSsPrqIjUu": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_GYZIYYKujj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nRwMPpoveQ": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_aSsPrqIjUu"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GYZIYYKujj"
          }
        }
      },
      "schema_VfVZTaoicg": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_xMxNPOODeX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fVJWIgtQNl": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_VfVZTaoicg"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xMxNPOODeX"
          }
        }
      },
      "schema_ZNxKqrFauP": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_nRwMPpoveQ"
          },
          "accountDetails": {
            "$ref": "#/components/schemas/schema_fVJWIgtQNl"
          }
        }
      },
      "schema_sjgsYalbwx": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_OaPCNYGBuI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bLjCcTQIOw": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_sjgsYalbwx"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OaPCNYGBuI"
          }
        }
      },
      "schema_WuZCGTYZHs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XCEfyZsjIl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_hPIcxctvpQ": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, LSP can define it as per their requirement",
            "$ref": "#/components/schemas/schema_WuZCGTYZHs"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XCEfyZsjIl"
          }
        }
      },
      "schema_BGCIbWRhZO": {
        "type": "object",
        "required": [
          "plan"
        ],
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/schema_bLjCcTQIOw"
          },
          "method": {
            "$ref": "#/components/schemas/schema_hPIcxctvpQ"
          }
        }
      },
      "schema_rhJModJMHA": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "loanId",
          "requestId",
          "loanStatus",
          "createdDate",
          "startDate",
          "endDate",
          "type",
          "borrower",
          "lender",
          "collaterals",
          "guarantors",
          "applicants",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_YCmnJlmziE"
          },
          "response": {
            "$ref": "#/components/schemas/schema_TPlfHLAuWX"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "loanStatus": {
            "type": "string",
            "enum": [
              "GRANTED",
              "DEFAULTED",
              "COMPLETED",
              "OVERDUE"
            ]
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CASHFLOW",
              "PERSONAL",
              "HOME",
              "VEHICLE",
              "BUSINESS"
            ]
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_jGQDfQHoar"
          },
          "lender": {
            "$ref": "#/components/schemas/schema_jHXWyyixRu"
          },
          "collaterals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_JyZheqQnCh"
            }
          },
          "guarantors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_LEbHbhayhs"
            }
          },
          "applicants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_aHKQFWZJJP"
            }
          },
          "terms": {
            "$ref": "#/components/schemas/schema_LqQcQmPSen"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_ZNxKqrFauP"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_BGCIbWRhZO"
          }
        }
      },
      "schema_iipquPYySm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EmdgrKsrpD": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ZrdMIuHoqe": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EmdgrKsrpD"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_HzLteutrVi": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_xlYBKwauSO": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ZVLbjfcWPh": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_JXEdSEtNLj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VhQEjRJYxB": {
        "type": "object",
        "required": [
          "date",
          "narration",
          "txnRefNo",
          "amount",
          "type",
          "closingBalance"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWL"
            ]
          },
          "closingBalance": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JXEdSEtNLj"
          }
        }
      },
      "schema_yIPxXaCcUN": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanId",
          "accountStatement"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_xlYBKwauSO"
          },
          "response": {
            "$ref": "#/components/schemas/schema_ZVLbjfcWPh"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_VhQEjRJYxB"
            }
          }
        }
      },
      "schema_OHIHiXEngo": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_EJCVCdTOas": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_oIHbcLNTeh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SQWGOiheFl": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oIHbcLNTeh"
          }
        }
      },
      "schema_OVVGysgqMX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pwvtXZMLGZ": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OVVGysgqMX"
          }
        }
      },
      "schema_ulBQfSqgNf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jfxBeCegmX": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_pwvtXZMLGZ"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ulBQfSqgNf"
          }
        }
      },
      "schema_pmGJytkLea": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_bzSXdVcMhP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fwStNUXmRX": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SQWGOiheFl"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_jfxBeCegmX"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_pmGJytkLea"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bzSXdVcMhP"
          }
        }
      },
      "schema_wAKMNYtRSu": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gTMHnPTsdY": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wAKMNYtRSu"
          }
        }
      },
      "schema_hqDrtLrICo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fLTQPybkbv": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_hqDrtLrICo"
          }
        }
      },
      "schema_SiNyaiaKJI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YpwZwWPqFr": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SiNyaiaKJI"
          }
        }
      },
      "schema_TrAenOiPPH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_UkKmnCQfZF": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TrAenOiPPH"
          }
        }
      },
      "schema_aKfDjUOzJr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zBbLjfzqEv": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_UkKmnCQfZF"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aKfDjUOzJr"
          }
        }
      },
      "schema_DxHxVLHyYM": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_AhyiMwthhd": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_boiQFDVXZT": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YpwZwWPqFr"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_zBbLjfzqEv"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_DxHxVLHyYM"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AhyiMwthhd"
          }
        }
      },
      "schema_LJJXnSOUlZ": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_TtPFMCZKze": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_CdQirlxntQ": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_gTMHnPTsdY"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_fLTQPybkbv"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_boiQFDVXZT"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_LJJXnSOUlZ"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_TtPFMCZKze"
          }
        }
      },
      "schema_xfKozjtIUQ": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "borrower"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_EJCVCdTOas"
          },
          "requestId": {
            "type": "string"
          },
          "borrower": {
            "$ref": "#/components/schemas/schema_fwStNUXmRX"
          },
          "collateral": {
            "$ref": "#/components/schemas/schema_CdQirlxntQ"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "schema_LidwUhYVSe": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_xBBnYyeNFq": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_paQyCRodan": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_dWHznyBzNk": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_HOhaJUlxrJ": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_XIxtWwdzfr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IqeuJuxWLp": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XIxtWwdzfr"
          }
        }
      },
      "schema_CULxrHWASL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_buNioOZuVy": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_CULxrHWASL"
          }
        }
      },
      "schema_YnNPKBAVIB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bttwmNDVzW": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YnNPKBAVIB"
          }
        }
      },
      "schema_iKCBTcWebQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jGONqUTgrl": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iKCBTcWebQ"
          }
        }
      },
      "schema_cUoeDvWcRv": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_IqeuJuxWLp"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_buNioOZuVy"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_bttwmNDVzW"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_jGONqUTgrl"
          }
        }
      },
      "schema_gwekPYThrP": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KIuxYotiaq": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_paQyCRodan"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_dWHznyBzNk"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_HOhaJUlxrJ"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_cUoeDvWcRv"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_gwekPYThrP"
          }
        }
      },
      "schema_KTpozBflRQ": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "loans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_xBBnYyeNFq"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "type": "object",
            "required": [
              "error"
            ],
            "properties": {
              "error": {
                "type": "string",
                "default": "",
                "example": "0"
              }
            }
          },
          "loans": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "loanId",
                "terms"
              ],
              "properties": {
                "loanId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "terms": {
                  "$ref": null
                }
              }
            }
          }
        }
      },
      "schema_tPPIPMQKTn": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_FfbEtampfx": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TPZpDNicHG": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_FfbEtampfx"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_FeiKfaSmJg": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_sejkCzrmZT": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_TggQQYLsnm": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_YHbmkXjuaQ": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_YjIgggteSf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XIIoQxacpx": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_YHbmkXjuaQ"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YjIgggteSf"
          }
        }
      },
      "schema_LkUXhRlpJv": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_sejkCzrmZT"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_TggQQYLsnm"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_XIIoQxacpx"
            }
          }
        }
      },
      "schema_XsLMgBHMlw": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_IqMVNNXVal": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_zMLYhJRmiZ": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_GulzCRShHw": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bSPpcARIZf": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_zMLYhJRmiZ"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_GulzCRShHw"
          }
        }
      },
      "schema_ORLeUcccnu": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_IqMVNNXVal"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_bSPpcARIZf"
          }
        }
      },
      "schema_TWdkalXDic": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_uiilmMVzQY": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_MezXLcWdsY": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_EojWqZjIwS": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_fgtafQZiDA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_BTCdvHUwfn": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_EojWqZjIwS"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_fgtafQZiDA"
          }
        }
      },
      "schema_XJUfORSgfp": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_uiilmMVzQY"
          },
          "response": {
            "$ref": "#/components/schemas/schema_MezXLcWdsY"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_BTCdvHUwfn"
          }
        }
      },
      "schema_JPdPIcVdCC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_PDggOOgdse": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_EZYVDfQkav": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_PDggOOgdse"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          }
        }
      },
      "schema_CJlJXVFjPm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_RhZwoUfNQQ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qNnnUIVIvH": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_gnidnArZPZ": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_OxGWeodObR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pqjkjXgdlK": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_gnidnArZPZ"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OxGWeodObR"
          }
        }
      },
      "schema_pntxKJHYLs": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "accountList"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_RhZwoUfNQQ"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "response": {
            "$ref": "#/components/schemas/schema_qNnnUIVIvH"
          },
          "accountList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_pqjkjXgdlK"
            }
          }
        }
      },
      "schema_zledXEIQws": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_jAktTPIoRJ": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_XuodyfEMAP": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_YCkjaVQfPV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kEdagZFKPy": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_XuodyfEMAP"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YCkjaVQfPV"
          }
        }
      },
      "schema_UYIdrVAFSt": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_jAktTPIoRJ"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanApplicationId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "loanId": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/schema_kEdagZFKPy"
          }
        }
      },
      "schema_nbvqISEdJM": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_LaoxBZKpxh": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_WfCSzZAiDn": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_YbYretgwNI": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_QWrYXOqmhe": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DRTEETDVtO": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_YbYretgwNI"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QWrYXOqmhe"
          }
        }
      },
      "schema_CzdVKPAHQR": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "account"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_LaoxBZKpxh"
          },
          "response": {
            "$ref": "#/components/schemas/schema_WfCSzZAiDn"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "account": {
            "$ref": "#/components/schemas/schema_DRTEETDVtO"
          }
        }
      },
      "schema_hhgPfBzhvq": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_QPEMRHTILx": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_lrIuHHPEeK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bGvomfTJPn": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lrIuHHPEeK"
          }
        }
      },
      "schema_jDsXZUsTNO": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_QPEMRHTILx"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_bGvomfTJPn"
          }
        }
      },
      "schema_ajwzcVUfcW": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_POKedaaFFI": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_mXXoojvMlZ": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_DpVYttpfRy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oMbKBDPyLL": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DpVYttpfRy"
          }
        }
      },
      "schema_sBdIEOnYQO": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_POKedaaFFI"
          },
          "response": {
            "$ref": "#/components/schemas/schema_mXXoojvMlZ"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_oMbKBDPyLL"
          }
        }
      },
      "schema_jTGmxGLqZE": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_SPLhDYqBPl": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_XTPKKSEtql": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SVgBqujGqi": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XTPKKSEtql"
          }
        }
      },
      "schema_aTDWsGMHuS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RKgWGRdmnb": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_aTDWsGMHuS"
          }
        }
      },
      "schema_dTOVjTBVre": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tjcVxjqOTs": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_RKgWGRdmnb"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dTOVjTBVre"
          }
        }
      },
      "schema_gTKSCnIGHx": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_HgVgGlsdVc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KKGBRUBaEo": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SVgBqujGqi"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_tjcVxjqOTs"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_gTKSCnIGHx"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HgVgGlsdVc"
          }
        }
      },
      "schema_tEfnCjCuCI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PGmVkvtCHc": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tEfnCjCuCI"
          }
        }
      },
      "schema_dXObmknFFv": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_msyNASVOQJ": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "20000"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "date": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GSTN",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_dXObmknFFv"
          }
        }
      },
      "schema_RrGgjnYmjI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_icxcgjFtlS": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RrGgjnYmjI"
          }
        }
      },
      "schema_XONMNhpLUb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wrsLwhVyAq": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XONMNhpLUb"
          }
        }
      },
      "schema_kKdZMNzDtG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OoTzkgjMkC": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_wrsLwhVyAq"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kKdZMNzDtG"
          }
        }
      },
      "schema_dXJLQEMUWR": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_RGwBGaOncj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kdDTyhcTjn": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "name",
          "category",
          "relationshipWithCollateral",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR",
              "FIU"
            ]
          },
          "description": {
            "type": "string"
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_icxcgjFtlS"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ORGANIZATION"
            ]
          },
          "relationshipWithCollateral": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_OoTzkgjMkC"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_dXJLQEMUWR"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RGwBGaOncj"
          }
        }
      },
      "schema_aElqaFRmkn": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_yubqULGJia": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ESTkDWeXKw": {
        "type": "object",
        "required": [
          "collateralPrimaryId",
          "collateralPrimaryIdType",
          "additionalIdentifiers",
          "parties",
          "type",
          "documents"
        ],
        "properties": {
          "collateralPrimaryId": {
            "type": "string",
            "example": "INVOICE_<GSTIN>_<INVOICENUM>"
          },
          "collateralPrimaryIdType": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VIN",
              "<OTHER VALID REGISTRY>"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_PGmVkvtCHc"
            }
          },
          "valuation": {
            "$ref": "#/components/schemas/schema_msyNASVOQJ"
          },
          "parties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_kdDTyhcTjn"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_INVOICE",
              "VEHICLE",
              "HOME"
            ]
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_aElqaFRmkn"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yubqULGJia"
          }
        }
      },
      "schema_iDmVUEGWzO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YwhxBJdJgM": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_iDmVUEGWzO"
          }
        }
      },
      "schema_nLIknAQlwQ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KkSsuiYxan": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_nLIknAQlwQ"
          }
        }
      },
      "schema_abIvaroMRs": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XgeeqqJncB": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_KkSsuiYxan"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_abIvaroMRs"
          }
        }
      },
      "schema_AILQftGizE": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_ytCgGbxuat": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zJeKmgkkJE": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "CPAA1234A"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_YwhxBJdJgM"
            }
          },
          "name": {
            "type": "string",
            "example": "John doe"
          },
          "relationshipWithBorrower": {
            "type": "string",
            "example": "Father"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_XgeeqqJncB"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_AILQftGizE"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ytCgGbxuat"
          }
        }
      },
      "schema_rwhiGbFulg": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_nDDKieShaL": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "example": "AADHAAR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_rwhiGbFulg"
          }
        }
      },
      "schema_XLJZMMmNBm": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KjpQMMaqJh": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "example": "<House/Building/Apartment>"
          },
          "srl": {
            "type": "string",
            "example": "<Street/Road/Lane>"
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "example": "<Area/Locality/Sector>"
          },
          "vtc": {
            "type": "string",
            "example": "<Village/Town/City>"
          },
          "pinCode": {
            "type": "string",
            "example": ""
          },
          "po": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "<digital address>"
          },
          "latitude": {
            "type": "string",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "example": ""
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_XLJZMMmNBm"
          }
        }
      },
      "schema_lArydUuJFR": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MoSnSwtiwb": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "example": "7777777777"
          },
          "email": {
            "type": "string",
            "example": "johndoe@defenterprises"
          },
          "address": {
            "$ref": "#/components/schemas/schema_KjpQMMaqJh"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lArydUuJFR"
          }
        }
      },
      "schema_FfnObYxagf": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_ljdsmndFZL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PvJPhRbmYJ": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "example": "<PAN NO.>"
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_nDDKieShaL"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_MoSnSwtiwb"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_FfnObYxagf"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ljdsmndFZL"
          }
        }
      },
      "schema_QAWcpzJkmM": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_aeojSlOgzO": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_iZroidvVTS": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_VvlxczhtLW": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_zfaqyFMDVk": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_VvlxczhtLW"
          }
        }
      },
      "schema_QGDLSCFiSq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AKovXXQzJc": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_QGDLSCFiSq"
          }
        }
      },
      "schema_YLDuHJDwrc": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_KCcCywxPwL": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_YLDuHJDwrc"
          }
        }
      },
      "schema_zZIQZmEJCO": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SaOlBMDVEY": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_zZIQZmEJCO"
          }
        }
      },
      "schema_cIfpWrYkLC": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_zfaqyFMDVk"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_AKovXXQzJc"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_KCcCywxPwL"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_SaOlBMDVEY"
          }
        }
      },
      "schema_SQZxEWqXQj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tcZMsAndAG": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_QAWcpzJkmM"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_aeojSlOgzO"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_iZroidvVTS"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_cIfpWrYkLC"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_SQZxEWqXQj"
          }
        }
      },
      "schema_ZqVdDuPXHW": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_SPLhDYqBPl"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "createdDate",
                "loanApplicationId",
                "type",
                "borrower",
                "collaterals",
                "guarantors",
                "applicants",
                "terms"
              ],
              "properties": {
                "createdDate": {
                  "type": "string"
                },
                "loanApplicationId": {
                  "type": "string",
                  "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CASHFLOW",
                    "HOME",
                    "VEHICLE",
                    "PERSONAL",
                    "BUSINESS"
                  ]
                },
                "borrower": {
                  "$ref": null
                },
                "collaterals": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "guarantors": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "applicants": {
                  "type": "array",
                  "items": {
                    "$ref": null
                  }
                },
                "terms": {
                  "$ref": null
                }
              }
            }
          }
        }
      },
      "schema_LBBQQRiYtm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_ycILtsFDrb": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_FuUfzWGBqE": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_ycILtsFDrb"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          }
        }
      },
      "schema_zcfXvSnRiT": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_DlrLPpLDLs": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_JKHCnwMBrl": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_JLxMUkNUVw": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_VztRssjgzs": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS"
            ]
          },
          "description": {
            "type": "string",
            "example": "Credit score below 600"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_JLxMUkNUVw"
          }
        }
      },
      "schema_LGfMvksOeW": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "example": "documents"
          },
          "value": {
            "type": "string",
            "example": "INVOICE_GSTN_INV2011"
          }
        }
      },
      "schema_cMLcdTWAeX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_CviPwFmCNX": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "example": "DL number not visible"
          },
          "reference": {
            "$ref": "#/components/schemas/schema_LGfMvksOeW"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cMLcdTWAeX"
          }
        }
      },
      "schema_pBfoLqPPuO": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_VrizNtYTVZ": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_tykHnmSaXH": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_gVFPLzcNPJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SgjDVwzKdc": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_gVFPLzcNPJ"
          }
        }
      },
      "schema_eIlFqJJjLb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OJmLYhspYJ": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_eIlFqJJjLb"
          }
        }
      },
      "schema_lNYmhyTcdr": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PEdZhFVihT": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_lNYmhyTcdr"
          }
        }
      },
      "schema_oHqkfXwFep": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kpwliNOjNz": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oHqkfXwFep"
          }
        }
      },
      "schema_bSfXNVXZgL": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_SgjDVwzKdc"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_OJmLYhspYJ"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_PEdZhFVihT"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_kpwliNOjNz"
          }
        }
      },
      "schema_bwtMVWWNPe": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_lFbcGzQJeY": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_pBfoLqPPuO"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_VrizNtYTVZ"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_tykHnmSaXH"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_bSfXNVXZgL"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_bwtMVWWNPe"
          }
        }
      },
      "schema_bKZonzvKFr": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_PBUafZSrax": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_SENISqtkxY": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_bKZonzvKFr"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_PBUafZSrax"
          }
        }
      },
      "schema_zkygsgjYbk": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_tOCemnQpek": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oBWxdDyZti": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_zkygsgjYbk"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tOCemnQpek"
          }
        }
      },
      "schema_bNkQEscSBj": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_SENISqtkxY"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_oBWxdDyZti"
            }
          }
        }
      },
      "schema_dtjWMtfNas": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_xKafIzgTuo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gXuRKVdYZz": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_dtjWMtfNas"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xKafIzgTuo"
          }
        }
      },
      "schema_NSjduCjNza": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_gXuRKVdYZz"
            }
          }
        }
      },
      "schema_KfKtDstJMd": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_wYpKNrOJPH": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_iYeWbWQaWr": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_lFbcGzQJeY"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_bNkQEscSBj"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_NSjduCjNza"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_KfKtDstJMd"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_wYpKNrOJPH"
          }
        }
      },
      "schema_viIPRXGmbS": {
        "type": "object",
        "required": [
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "loanApplicationId": {
            "type": "string"
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_VztRssjgzs"
            }
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_CviPwFmCNX"
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_iYeWbWQaWr"
            }
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "OFFERED",
              "OFFER_ACCEPTED",
              "GRANTED",
              "REJECTED",
              "ACTION REQUIRED"
            ]
          }
        }
      },
      "schema_zFufBZliEJ": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplications"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_DlrLPpLDLs"
          },
          "response": {
            "$ref": "#/components/schemas/schema_JKHCnwMBrl"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_viIPRXGmbS"
            }
          }
        }
      },
      "schema_vcoddsuSfr": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_gwFdIhpxfS": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_GYBmzyfukK": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_EIBIsgGzcy": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "schema_DHzitAYsqA": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_frEKflbYlt": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_fWPeHfXNaV": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_frEKflbYlt"
          }
        }
      },
      "schema_AiVZkCKDqj": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MlPmjwYimr": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AiVZkCKDqj"
          }
        }
      },
      "schema_MBCsUWCpmK": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qxoARqoUTa": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_MBCsUWCpmK"
          }
        }
      },
      "schema_qDPUzhluhl": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pcJWLfjROy": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "string",
                "example": "6"
              },
              "amount": {
                "type": "number"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_qDPUzhluhl"
          }
        }
      },
      "schema_DgqyLbZWgR": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/schema_fWPeHfXNaV"
          },
          "bounce": {
            "$ref": "#/components/schemas/schema_MlPmjwYimr"
          },
          "latePayment": {
            "$ref": "#/components/schemas/schema_qxoARqoUTa"
          },
          "processing": {
            "$ref": "#/components/schemas/schema_pcJWLfjROy"
          }
        }
      },
      "schema_DuFyKffnNU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DflMqTJGdl": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "string",
            "example": "50000.00"
          },
          "currency": {
            "type": "string",
            "example": "INR"
          },
          "sanctionedAmount": {
            "type": "string",
            "example": "5000.00"
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "string",
            "example": "6.50"
          },
          "totalAmount": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_GYBmzyfukK"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/schema_EIBIsgGzcy"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_DHzitAYsqA"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/schema_DgqyLbZWgR"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_DuFyKffnNU"
          }
        }
      },
      "schema_zgZbTNhWvS": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_ZvfiZgVpnF": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DGhcIzNhao": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_zgZbTNhWvS"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_ZvfiZgVpnF"
          }
        }
      },
      "schema_meaqYflFdo": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "example": "ICK000856"
          },
          "accountNumber": {
            "type": "string",
            "example": "11250789101486249090"
          },
          "vpa": {
            "type": "string",
            "example": ""
          },
          "maskedAccountNumber": {
            "type": "string",
            "example": "XXXXXXXXX9090"
          }
        }
      },
      "schema_djXPzwddhE": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_bSNcPBDgiA": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "description": {
            "type": "string",
            "example": ""
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_meaqYflFdo"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_djXPzwddhE"
          }
        }
      },
      "schema_ujTxOjeiyc": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_DGhcIzNhao"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_bSNcPBDgiA"
            }
          }
        }
      },
      "schema_JhepTuOJUq": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_BuORqgxKtD": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_XxLjndNMpw": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_JhepTuOJUq"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_BuORqgxKtD"
          }
        }
      },
      "schema_qpgZujflKb": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_XxLjndNMpw"
            }
          }
        }
      },
      "schema_kBoXqOuMcy": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "example": "GSTN"
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML"
            ]
          },
          "reference": {
            "type": "string",
            "example": "docref12"
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "example": "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
          }
        }
      },
      "schema_pLJIcrCKVV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_EAoMuHeTkj": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "validTill": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/schema_DflMqTJGdl"
          },
          "disbursement": {
            "$ref": "#/components/schemas/schema_ujTxOjeiyc"
          },
          "repayment": {
            "$ref": "#/components/schemas/schema_qpgZujflKb"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_kBoXqOuMcy"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_pLJIcrCKVV"
          }
        }
      },
      "schema_lWZXWfgjEl": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationId",
          "offer"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_gwFdIhpxfS"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "offer": {
            "$ref": "#/components/schemas/schema_EAoMuHeTkj"
          }
        }
      },
      "schema_TGAlNMguBv": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_zIpoYkWquL": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_uxjcKsRjUB": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_WoSGArkWWU": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "loanApplicationId",
          "loanApplicationStatus"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_zIpoYkWquL"
          },
          "response": {
            "$ref": "#/components/schemas/schema_uxjcKsRjUB"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanApplicationStatus": {
            "type": "string",
            "enum": [
              "OFFER_ACCEPTED",
              "PROCESSING",
              "OFFERED",
              "GRANTED",
              "REJECTED"
            ]
          }
        }
      },
      "schema_ZpHflQztWt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_KitJjAQlPN": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_kCsztvUINp": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_IKDFGcgYZb": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kCsztvUINp"
          }
        }
      },
      "schema_IeTLrBeubJ": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_KitJjAQlPN"
          },
          "loanId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "requestId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_IKDFGcgYZb"
          }
        }
      },
      "schema_YsUOMMHuNh": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_NQPVPwoBfL": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_sVhsLABhAP": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_sIhgzxaFPV": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_pWkjWcOSmS": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sIhgzxaFPV"
          }
        }
      },
      "schema_yGDLqarqAa": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_NQPVPwoBfL"
          },
          "response": {
            "$ref": "#/components/schemas/schema_sVhsLABhAP"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_pWkjWcOSmS"
          }
        }
      },
      "schema_DCOSUOrzhc": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_xdZgatcGwC": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_edprYeGkwG": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_voLYjTlwlJ": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_edprYeGkwG"
          }
        }
      },
      "schema_fMDVMAoIiu": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_xdZgatcGwC"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_voLYjTlwlJ"
          }
        }
      },
      "schema_jdahBluHLu": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_gEJjaSugPT": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ndAoQmfWKY": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_cnmxfBssQh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_RzxutyHQOY": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "PROCESSING",
              "NEED_MORE_INFO",
              "RESOLVED",
              "CLOSED"
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_cnmxfBssQh"
          }
        }
      },
      "schema_HgfIuhHEah": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "dispute"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_gEJjaSugPT"
          },
          "response": {
            "$ref": "#/components/schemas/schema_ndAoQmfWKY"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "dispute": {
            "$ref": "#/components/schemas/schema_RzxutyHQOY"
          }
        }
      },
      "schema_yXFZQaopYa": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CMCpVDvgtL": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HkVdeclsOI": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_jIMhiawNMq": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_HkVdeclsOI"
          }
        }
      },
      "schema_RepvzYGCKL": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rfHvIlSYOD": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_jIMhiawNMq"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RepvzYGCKL"
          }
        }
      },
      "schema_TkOQWPEGyf": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanApplicationIds",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CMCpVDvgtL"
          },
          "requestId": {
            "type": "string"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_rfHvIlSYOD"
          }
        }
      },
      "schema_IbOnFzrzzz": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_gkYZPzjqRR": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HtOpWVosUo": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_OaiyvzjqFw": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wGurwagBCL": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_OaiyvzjqFw"
          }
        }
      },
      "schema_sQZtcoMWnq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_DKxmzqzubV": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_wGurwagBCL"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_sQZtcoMWnq"
          }
        }
      },
      "schema_tRBsTJSJeM": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_gkYZPzjqRR"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_HtOpWVosUo"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_DKxmzqzubV"
          }
        }
      },
      "schema_ciTvCSvvRI": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_tdRrunnsFK": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KyFVPzTpQe": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_PAMkaCTeGt": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KyFVPzTpQe"
          }
        }
      },
      "schema_yAYtuWKDKh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_gPcjvDCzFy": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_PAMkaCTeGt"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_yAYtuWKDKh"
          }
        }
      },
      "schema_fOhKodqMYW": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_tdRrunnsFK"
          },
          "requestId": {
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_gPcjvDCzFy"
          }
        }
      },
      "schema_DuBrGtxQRx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_YJSiXCCRFd": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_ycPYMJoArx": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_KjqqywQTcA": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_kfWJNVFsRB": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "appToken": {
            "type": "string",
            "example": "<token for auto-reading otp>"
          },
          "otpSessionKey": {
            "type": "string"
          },
          "maskedPhoneNumber": {
            "type": "string",
            "example": "XXXXXXX775"
          },
          "otp": {
            "type": "number",
            "example": "856429"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "INVALID_SESSION",
              "INCORRECT_OTP"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_KjqqywQTcA"
          }
        }
      },
      "schema_xLItMxgxUf": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_wHubzvXiuZ": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "OTP"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/schema_kfWJNVFsRB"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xLItMxgxUf"
          }
        }
      },
      "schema_MqluBYBdXx": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "credBlock"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_YJSiXCCRFd"
          },
          "response": {
            "$ref": "#/components/schemas/schema_ycPYMJoArx"
          },
          "requestId": {
            "type": "string"
          },
          "credBlock": {
            "$ref": "#/components/schemas/schema_wHubzvXiuZ"
          }
        }
      },
      "schema_iPWbtTlSjv": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_QizosrNFui": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_RbeYedEAlo": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_OAONBGLOWc": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_RbeYedEAlo"
          }
        }
      },
      "schema_rKnJBvpRdy": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_oQMcwufERW": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_OAONBGLOWc"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_rKnJBvpRdy"
          }
        }
      },
      "schema_twUkMUisux": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationIds",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_QizosrNFui"
          },
          "loanApplicationIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            }
          },
          "requestId": {
            "type": "string",
            "example": "g8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_oQMcwufERW"
          }
        }
      },
      "schema_KOmsYHuabC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_fjDpNhBcxk": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_rkwOGmJJfI": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_clTUkndrox": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_ngGYOlzgbv": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_clTUkndrox"
          }
        }
      },
      "schema_xQwcTRAgbq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_YzdoLNbtAA": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_ngGYOlzgbv"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xQwcTRAgbq"
          }
        }
      },
      "schema_dGTMooSfkV": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_fjDpNhBcxk"
          },
          "response": {
            "$ref": "#/components/schemas/schema_rkwOGmJJfI"
          },
          "requestId": {
            "type": "string",
            "example": "i8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_YzdoLNbtAA"
          }
        }
      },
      "schema_HJiFwHQuXA": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_LpsUQrSPhr": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_jfzKLCIlJi": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_reOREhjzcZ": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jfzKLCIlJi"
          }
        }
      },
      "schema_kmjyQTUbHv": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MAXNHHaauc": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_reOREhjzcZ"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_kmjyQTUbHv"
          }
        }
      },
      "schema_RxCXFVZTnZ": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_LpsUQrSPhr"
          },
          "requestId": {
            "type": "string",
            "example": "m8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_MAXNHHaauc"
          }
        }
      },
      "schema_vgkIwUBrKm": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_TqhCEfdiUR": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_fXhkPDAPSx": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_FnSxngBhWX": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_AIMMPkiwcx": {
        "type": "object",
        "properties": {
          "lspId": {
            "type": "string",
            "example": "<AA can identify the LSP based on this>"
          },
          "version": {
            "type": "string",
            "example": "<version of LSP>"
          },
          "appName": {
            "type": "string",
            "example": "<Package name of the app>"
          },
          "url": {
            "type": "string",
            "example": "https://abc-bank.com"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FnSxngBhWX"
          }
        }
      },
      "schema_WihjrQqdXh": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_sGodBKVmXx": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "default": "",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "default": "",
            "example": "user@aa.in"
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "example": true
          },
          "consentAggregationId": {
            "type": "string",
            "default": "",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
          },
          "lspInfo": {
            "$ref": "#/components/schemas/schema_AIMMPkiwcx"
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_WihjrQqdXh"
          }
        }
      },
      "schema_wREBaQvdFV": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "consent"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_TqhCEfdiUR"
          },
          "response": {
            "$ref": "#/components/schemas/schema_fXhkPDAPSx"
          },
          "requestId": {
            "type": "string",
            "example": "p8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "consent": {
            "$ref": "#/components/schemas/schema_sGodBKVmXx"
          }
        }
      },
      "schema_XKrHFWAEpf": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_NTzRUlzbLw": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_IBVFVHHVxP": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "loanId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_NTzRUlzbLw"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          }
        }
      },
      "schema_MrtPHmdYkQ": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_gKTVMIORvE": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_yvqjGZzneK": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_JFRnmUVEQm": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_eeYNREiwLq": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qmFvdmwTPx": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_JFRnmUVEQm"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_eeYNREiwLq"
          }
        }
      },
      "schema_OdQwCmXACj": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plans"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_gKTVMIORvE"
          },
          "response": {
            "$ref": "#/components/schemas/schema_yvqjGZzneK"
          },
          "requestId": {
            "type": "string"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema_qmFvdmwTPx"
            }
          }
        }
      },
      "schema_gFpzHnAzPH": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_DJypopEvSe": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_DPrvgHdSqj": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_xMEDthywCY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_MWjqUhTLOo": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_DPrvgHdSqj"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_xMEDthywCY"
          }
        }
      },
      "schema_sTEYIqXOJz": {
        "type": "object",
        "required": [
          "metadata",
          "loanApplicationId",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_DJypopEvSe"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_MWjqUhTLOo"
          }
        }
      },
      "schema_SWHpyVdueF": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_CKNFCLslmD": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_exEwpjshaC": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_jtKCWbhkua": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_jAeNszRiLY": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_mmZAwilaKA": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_jtKCWbhkua"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_jAeNszRiLY"
          }
        }
      },
      "schema_EUOOzerynU": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_CKNFCLslmD"
          },
          "response": {
            "$ref": "#/components/schemas/schema_exEwpjshaC"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_mmZAwilaKA"
          }
        }
      },
      "schema_SLwGdghZcB": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_fHbXESUDqC": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_iCBrcMNHTj": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_FQiikqhglU": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_tcXMreIBVZ": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_iCBrcMNHTj"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_FQiikqhglU"
          }
        }
      },
      "schema_RnONJVbztH": {
        "title": "Root",
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_fHbXESUDqC"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_tcXMreIBVZ"
          }
        }
      },
      "schema_sZwvLFVgJz": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_qnsfnsPhuy": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_hiOsVvDEeD": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_tgdsesTUot": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_poaefgKJHM": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_qAmggMQYlw": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_tgdsesTUot"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_poaefgKJHM"
          }
        }
      },
      "schema_nzOiwRhGHu": {
        "type": "object",
        "required": [
          "metadata",
          "response",
          "requestId",
          "plan"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_qnsfnsPhuy"
          },
          "response": {
            "$ref": "#/components/schemas/schema_hiOsVvDEeD"
          },
          "requestId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/schema_qAmggMQYlw"
          }
        }
      },
      "schema_LnMxwDugxl": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_FPVuaDocDb": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_AHheBifbAb": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_LRTAakDdFa": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "totalAmount": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string",
            "example": "004618602124"
          },
          "id": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "example": false
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "example": "https://abc-bank/payment"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_AHheBifbAb"
          }
        }
      },
      "schema_uWaYuFYKdI": {
        "type": "object",
        "required": [
          "metadata",
          "loanId",
          "requestId"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_FPVuaDocDb"
          },
          "loanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_LRTAakDdFa"
          }
        }
      },
      "schema_NGvfvTiqGW": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_HvgEIVypeX": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_qnQXGDuhFC": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_iAaBImqgQI": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_oEETwypJGJ": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_NSlbYGRSEE": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_iAaBImqgQI"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_oEETwypJGJ"
          }
        }
      },
      "schema_rtmfzlfERr": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_HvgEIVypeX"
          },
          "requestId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_qnQXGDuhFC"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_NSlbYGRSEE"
          }
        }
      },
      "schema_TnSchZUSlz": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_lBsankyWOe": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_aRUpwWHibm": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_tyUfevnRSB": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_rHrbeTMrwG": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_aRUpwWHibm"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tyUfevnRSB"
          }
        }
      },
      "schema_bOZqUGVVkH": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_lBsankyWOe"
          },
          "requestId": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_rHrbeTMrwG"
          }
        }
      },
      "schema_grnmPApZLC": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_BDbbOlqtnF": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_HzknFRnbJn": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "schema_NLTScDZVNM": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "schema_tBYNkvNsPS": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "schema_FMUXYYLOUq": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "example": false
          },
          "editPlanAllowed": {
            "type": "boolean",
            "example": false
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "example": false
          },
          "automatic": {
            "type": "boolean",
            "example": false
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/schema_NLTScDZVNM"
          },
          "totalAmount": {
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "interestAmount": {
            "type": "string"
          },
          "penalty": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "18-12-2020"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/schema_tBYNkvNsPS"
          }
        }
      },
      "schema_HoandQzakG": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "response",
          "payment"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_BDbbOlqtnF"
          },
          "requestId": {
            "type": "string"
          },
          "loanId": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/schema_HzknFRnbJn"
          },
          "payment": {
            "$ref": "#/components/schemas/schema_FMUXYYLOUq"
          }
        }
      },
      "schema_lxaBRnZsSt": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_mNliRklqWK": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_zukqneRzWE": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "errorCode"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_mNliRklqWK"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "errorCode": {
            "type": "string",
            "example": "SDP1001"
          }
        }
      },
      "schema_pHuVzxnHVf": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      },
      "schema_OcbCFnmghu": {
        "title": "metadata",
        "type": "object",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "schema_KhQMVAbyOI": {
        "type": "object",
        "required": [
          "metadata",
          "requestId",
          "lookupType"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/schema_OcbCFnmghu"
          },
          "requestId": {
            "type": "string",
            "example": "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
          },
          "lookupType": {
            "type": "string",
            "example": "LOAN_STATUS"
          }
        }
      },
      "schema_KMocmYqdcx": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "0"
          },
          "traceId": {
            "type": "string",
            "example": "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
          },
          "timestamp": {
            "type": "string",
            "example": "2018-12-06T11:39:57.153Z"
          }
        }
      }
    }
  }
}